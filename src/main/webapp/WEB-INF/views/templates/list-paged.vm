## Paged List template. Utilizes 'pager' context variable
<div class="form-container clearfix" style="width: 100%">
    <h2>#springMessage('content.list.title')</h2>
    #if($pager)
    <table class="table">
        <caption style="color: #b94a48;">#springMessage('content.list.table.caption')</caption>
        <thead> 
            <tr>
                <th>id</th>
                <th>#springMessage('content.detail.start')</th>
                <th>#springMessage('content.detail.end')</th>
                <th>#springMessage('content.detail.performer')</th>
                <th>#springMessage('content.detail.activity')</th>
            </tr>
        </thead>
        <tbody>
            #foreach( $report in ${pager.getPageList()} )
            <tr>
                <td>${report.id}</td>
                <td>$datetool.format( 'dd MMM yyyy', ${report.startDate} )</td>
                <td>$datetool.format( 'dd MMM yyyy', $!{report.endDate} )</td>
                <td>${report.performer}</td>
                <td>${report.activity}</td>
            </tr>
            #end
            <div class="button-block clearfix hidden">
                <button class="action" onclick="modalAction(this);">#springMessage('button.action.get')</button>
                <button class="action update" onclick="modalUpdate(this);">#springMessage('button.action.update')</button>          
                <button class="action delete" onclick="modalDelete(this);">#springMessage('button.action.delete')</button>
            </div>    
        </tbody>
    </table>
    #{else}
        <p>#springMessage('content.notfound')</p>
    #end
    
    #if($pager)
        #if($pager.getPageCount() gt 1)
            #pager()    
        #end
    #end
    
    <button class="action add" onclick="modalAdd(this);">#springMessage('content.list.button.addnew')</button>    
    <button class="action" onclick="addToChecklist()">#springMessage('content.list.button.addtowatchlist')</button>

</div>


<script type="text/javascript">

    /*
     * Constants
     */
    var searchId = $search_id;
    
    /*
     * URLs  
     */
    var addToChecklistUrl = "#springUrl('/report/ajax/watch')";
    var addReportUrl = "#springUrl('/report/ajax/add')";  
    var updateReportUrl = "#springUrl('/report/ajax/update')";
    var deleteReportUrl = "#springUrl('/report/ajax/remove')";
    var getReportUrl = "#springUrl('/report/ajax')";
    var deleteFromChecklistUrl = "#springUrl('/checklist/remove/')";
    var getReportUriUrl = "#springUrl('/report/ajax/uri')";

    /*
     * Messages
     */
    var SELECT_ONE_MSG = "#springMessage('checklist.selectone')";
    var ADDED_TO_CHECKLIST_MSG = "#springMessage('checklist.added')";
    var NOTADDED_TO_CHECKLIST_MSG = "#springessage('checklist.notadded')";     
    var ADDED_MSG = "#springMessage('add.added')";
    var NOTADDED_MSG = "#springMessage('add.notadded')";
    var UPDATED_MSG = "#springMessage('update.updated')";
    var NOTUPDATE_MSG = "#springMessage('update.notupdated')";
    var DELETED_MSG = "#springMessage('delete.deleted')";
    var NOTDELETED_MSG = "#springMessage('delete.notdeleted')";
    var URI_GOTTEN_MSG = "#springUrl('geturi.gotten')";

    /*
     * Modal window HTML templates
     */
    var modalAddHtml = '#modal_add()';
    var modalUpdateHtml = '#modal_update()';
    var modalDeleteHtml = '#modal_delete()'; 
    var modalActionHtml = '#modal_action()';

    /*
     * Utilizes: 
     *    1. modal - modal.js
     *    2. validation rules - validation.js
     */
      
#[[ 
    /*
     * Pop-up hint 
     */
    $(document).ready(function() {
       $(document.createElement("div"))
                .attr("id", "confirm")
                .appendTo($("body"))
                .hide();      
    });

    /*
     * Add to checklist handler 
     */
    function addToChecklist() {
        var indexes = [];
        $('tr.selected').each( function(index, value) {            
            try {
                indexes.push(parseInt($(value).find('td:first-child').html()));
            } catch (error){
                console.log("Error while parsing ID for a elemend beign selected");
            }
        });    
        if (indexes.length > 0) {
            var indexesData = { "indexes" : indexes };
            $.ajax( addToChecklistUrl, 
                   {method: "POST",
                    async: true,
                    cache: false,
                    data: indexesData,
                    complete: onWatchComplete,
                    dataType: 'text' });
        } else {
            $("#confirm").finish().html(SELECT_ONE_MSG)  
                .fadeIn(600)
                .delay(3000)
                .fadeOut(1200);
        }
    };

    /*
     * Callback for addToChecklist Ajax request
     */
    function onWatchComplete(xhr, status) {
        if (status === "success") {
            $("#confirm").finish().html(ADDED_TO_CHECKLIST_MSG);
            $(".selected").removeClass("selected").addClass("selected-added");
        } else {
            $("#confirm").finish().html(NOTADDED_TO_CHECKLIST_MSG);
            console.log("Cannot fulfil request to the server: " + status);
        }       
        $("#confirm").fadeIn(600)
                     .delay(3000)
                     .fadeOut(1200);
    };

    /*
     * Adding new report handler
     */
    function modalAdd(addButton) {
        var url = addReportUrl;  
        var html = modalAddHtml;       
        modal.open({ content: html });
        $("#close-btn").click(function() {
            $("#close").click();
            /* W3C HTML5 Button Specification
             * default behaviour : submit the form (what is exactly occurs in 
             * Chrome & Opera, with Firefox everything OK)
             * tweak: return false; - to prevent default form submission
             */
            return false;
        });        
        $('input[name="startDate"]').datepicker({dateFormat: "dd M yy"});
        $('input[name="endDate"]').datepicker({dateFormat: "dd M yy"});
        $("form[name='report-add']").validate({
        //  debug: true,
            rules: {
               startDate: {
                    required: true,
                    reportdate: true
                },
                endDate: {
                    reportdate: true
                },
                performer: {
                    required: true,
                    rangelength: [1, 255],
                    regexp: performer_regexp
                },
                activity: {
                    required: true,
                    rangelength: [1, 255],
                    regexp: activity_regexp
                }
            }
        });
        $("#add-btn").click(function(e) {
            e.preventDefault();
            if ($("form[name='report-add']").valid()) {
            var  $confirm = $("#confirm");
            var serial_report = $(addButton).parent("form[name='report-add']").serialize();
            serialReport = $('form[name="report-add"]').serialize();
            $.post(url,
                   serialReport,
                   function(result, status, jxhr) {
                       if (result.status === 'success') {
                           $confirm.html(ADDED_MSG);
                           $("#close-btn").click();
                        } else if (result.status === 'error') {
                           fillUpViolations($('form[name="report-add"]'), $('.error-block'), result);
                           $confirm.html(NOTADDED_MSG);
                        } else {
                           $confirm.html(NOTADDED_MSG);
                           $("#close-btn").click();
                        }
                        $confirm.finish().fadeIn(600).delay(3000).fadeOut(1200);
                    },
                    'json'
            );   
            return false;
            } //#if
        });
    } 

    /*
     * Updating report handler
     */
    function modalUpdate(updateButton) {
        var url = getReportUrl;   
        var urlUpdate = updateReportUrl;         
        var html = $(modalUpdateHtml);        
        var idVal = $(updateButton).parent(".button-block").data("id").trim();
        $.get(url, 
              {id: idVal},
              function(report) {
                  // populate form with returned report fields
                  html.find("#startDate").attr("value", (new Date(report.startDate)).toString());
                  html.find("#endDate").attr("value", (new Date(report.endDate)).toString());
                  html.find("#performer").attr("value", report.performer);
                  html.find("#activity").attr("value", report.activity);
                  html.find("span").text(report.id);
                  html = html.get(0).outerHTML;
                  
                  modal.open({content: html});
                  $("#close-btn").click(function() {
                      $("#close").click();
                      return false;
                  });
                  $('input[name="startDate"]').datepicker({dateFormat: "dd M yy"});
                  $('input[name="endDate"]').datepicker({dateFormat: "dd M yy"});
                  $("#endDate").datepicker('setDate', new Date(report.endDate));                  
                  $("#startDate").datepicker('setDate', new Date(report.startDate));
                  // validate the form
                  $("form[name='report-update']").validate({
                  //  debug: true,
                      rules: {
                        startDate: {
                            required: true,
                            reportdate: true
                        },
                        endDate: {
                            reportdate: true
                        },
                        performer: {
                            required: true,
                            rangelength: [1, 255],
                            regexp: performer_regexp
                        },
                        activity: {
                            required: true,
                            rangelength: [1, 255],
                            regexp: activity_regexp
                        }
                      }
                  });

                $("#update-btn").click(function(e) {
                    // before ajax call cause defaul action will be fired up
                    e.preventDefault();                    
                    if($("form[name='report-update']").valid()) {      
                        var idVal = $(updateButton).parent(".button-block").data("id").trim();                
                        var serialReport = $("form[name='report-update']").serialize();
                        serialReport = serialReport + "&id=" + encodeURI(idVal);
                        $.ajax(urlUpdate, {
                               method: "POST",
                               async: true,
                               cache: false,
                               data: serialReport,
                               success: function(result) {
                                 if (result.status === 'success') {
                                    $("#confirm").finish().html(UPDATED_MSG);
                                    $("#close-btn").click();
                                 } else if (result.status === 'error') {
                                    fillUpViolations($("form[name='report-update']"), $('.error-block'), result);
                                    $("#confirm").finish().html(NOTUPDATE_MSG);
                                 } else {
                                    $("#confirm").finish().html(NOTUPDATE_MSG);
                                    $("#close-btn").click();
                                 }
                                 $("#confirm").fadeIn(600)
                                              .delay(3000)
                                              .fadeOut(1200);                      

                               },
                               error: function() {
                                 $("#confirm").finish().html(NOTUPDATE_MSG);                                                                 
                                 $("#confirm").fadeIn(600)
                                              .delay(3000)
                                              .fadeOut(1200);                      
                                 }, 
                               dataType: 'json'
                        });                        
                    } //#if
                    return false;
                });
            },
            'json' 
        );            
    }

    /*
     * Server-side field validation violations handler
     */
    function fillUpViolations($form, $errorBlock, result) {
        $error = $form.find('.error');
        for (var i = 0; i < result.errors.length; i++) {
            var error = result.errors[i];
            if (error.type === 'field') {
                $error.filter('[for=' + error.field + ']').text(error.message);            
            } else if (error.type === 'object') {
                $errorBlock.append(error.message + '<br />');
            }
        }
        modal.center();
    }

    /*
     * Delete report handler
     */
    function modalDelete(deleteButton) {
        var html = modalDeleteHtml; 
        var url = getReportUrl;  
        var idVal = $(deleteButton).parent(".button-block").data("id").trim();
           $.get(url, 
                 {id: idVal},
                 function(report) {
                   html = $(html).find("#id").text(report.id).end()
                                 .find("#startDate").text(formatDate(new Date(report.startDate))).end()
                                 .find("#endDate").text(formatDate(new Date(report.endDate))).end()
                                 .find("#performer").text(report.performer).end()
                                 .find("#activity").text(report.activity).end();
                   html.find("span").text(report.id);                  
                   html = html.get(0).outerHTML;
                   modal.open({ content: html });
                   $("#close-btn").click(function() {
                       $("#close").click();
                   });
                   $("#confirm-btn").click(function() {   
                      var url = deleteReportUrl;
                      $.post(url, 
                             {id: idVal},
                             function(data) {
                                 if (data === 'success') {                        
                                     $("#close").click(); 
                                     // remove table row from DOM                        
                                     $(".button-block").addClass(".hidden").appendTo(".table");
                                     $(".active-row").remove();
                                     // remove from checklist? and pager? URL: '/report/ajax/pager/remove'
                                     $("#confirm").finish().html(DELETED_MSG); 
                                 } else {
                                     $("#close").click(); 
                                     $("#confirm").finish().html(NOTDELETED_MSG);                         
                                 }
                                 $("#confirm").fadeIn(600)
                                              .delay(3000)
                                              .fadeOut(1200);
                             },
                             'text'
                      );
                 });
             },
             'json'
           );         
    };

    /*
     * Report details handler
     */
    function modalAction(actionButton) {
        var idVal = $(actionButton).parent(".button-block").data("id").trim();        
        var html = $(modalActionHtml);
        var error = false;
        var url = getReportUrl; 
        $.get(url, 
              {id: idVal},
              function(report) {                 
                 html.find("#id").text(report.id).end()
                     .find("#startDate").text(formatDate(new Date(report.startDate))).end()
                     .find("#endDate").text(formatDate(new Date(report.endDate))).end()
                     .find("#performer").text(report.performer).end()
                     .find("#activity").text(report.activity).end();
                 html.find("span").text(report.id);                
              },
              'json'
        );     
        $.ajax(getReportUriUrl, {
            method: "GET",
            async: false,
            cache: false,
            data: "id=" + idVal,
            dataType: 'text',
            success: function(data) {      
                html.find("input[type='text']").val(data);                
            },
            error: function() {
                error = true;
            },
            complete: function() {                
            }
        });
        if (error) {
            $("#confirm").finish().html(URI_GOTTEN_MSG);                         
            $("#confirm").fadeIn(600)
                         .delay(3000)
                         .fadeOut(1200);
        } else {
            modal.open({ content: html });
            $("#close-btn").click(function() {
                $("#close").click();
            }); 
        }
    }; 
]]#
</script>    
