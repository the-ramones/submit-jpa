## Paged List template. Utilizes 'pager' context variable
<div class="form-container" style="width: 100%">
    <h2>#springMessage('content.list.title')</h2>
    #if($pager)
    <table class="table">
        <caption>#springMessage('content.list.table.caption')</caption>
        <thead>
            <tr>
                <th>id</th>
                <th>#springMessage('content.detail.start')</th>
                <th>#springMessage('content.detail.end')</th>
                <th>#springMessage('content.detail.performer')</th>
                <th>#springMessage('content.detail.activity')</th>
            </tr>
        </thead>
        <tbody> current page (-1): ${pager.getPage()} isEmpty()?: ${pager.getPageList().isEmpty()} search ID: $search_id, pageCount: $pager.getPageCount()
            #foreach( $report in ${pager.getPageList()} )
            <tr>
                <td>${report.id}</td>
                <td>$datetool.format( 'dd MMM yyyy', ${report.startDate} )</td>
                <td>$datetool.format( 'dd MMM yyyy', $!{report.endDate} )</td>
                <td>${report.performer}</td>
                <td>${report.activity}</td>
            </tr>
            #end
            <div class="button-block clearfix hidden">
                <button class="action" onclick="modal_action(this);">#springMessage('button.action.get')</button>
                <button class="action update" onclick="modal_update(this);">#springMessage('button.action.update')</button>          
                <button class="action delete" onclick="modal_delete(this);">#springMessage('button.action.delete')</button>
            </div>            
        </tbody>
    </table>
    #{else}
        <p>#springMessage</p>
    #end
    
    #if($pager)
        #if($pager.getPageCount() gt 1)
            #pager()    
        #end
    #end
    
    <button class="action add" onclick="modal_add(this);">#springMessage('content.list.button.addnew')</button>    
    <button class="action" onclick="add_to_watchlist()">#springMessage('content.list.button.addtowatchlist')</button>

</div>


<script type="text/javascript">

    var searchId = $search_id;

#[[ //TODO: l10n with Velocity L10n capabilities
    /*
     * Add pop-up hint on the page. Make it invisible
     */
    $(document).ready(function() {
       $(document.createElement("div"))
                .attr("id", "confirm")
                .appendTo($("body"))
                .hide();      
    });

    function add_to_watchlist() {
        var indexes = [];
        $('tr.selected').each( function(index, value) {            
            try {
                indexes.push(parseInt($(value).find('td:first-child').html()));
            } catch (error){
                console.log("Error while parsing ID for a elemend beign selected");
            }
        });    
        if (indexes.length > 0) {
            var url = ]]#"#springUrl('/report/ajax/watch')";#[[
            var indexesData = { "indexes" : indexes };
            $.ajax( url, {
                method: "POST",
                async: true,
                cache: false,
                data: indexesData,
                complete: onWatchComplete,
                dataType: 'text'
            }
            );
        } else {
            $("#confirm").finish().html("Select at least one element. <br />Just click on it")  
                .fadeIn(600)
                .delay(3000)
                .fadeOut(1200);
        }
    };

    function onWatchComplete(xhr, status) {
        if (status === "success") {
            $("#confirm").finish().html("Selected elements has been <br />added to your checklist");
            $(".selected").removeClass("selected").addClass("selected-added");
            //alert(status);
        } else {
            $("#confirm").finish().html("Cannot add selected elements.<br />Please, try later");
            console.log("Cannot fulfil request to the server: " + status);
        }       
        $("#confirm").fadeIn(600)
            .delay(3000)
            .fadeOut(1200);
    }
]]#

    function modal_add(add_button) {
        var url = "#springUrl('/report/ajax/add')";  
        var html = '#modal_add( )';        
        modal.open({ content: html });
#[[     $("#close-btn").click(function() {
            $("#close").click();
        });
        $("form[name='report-add']").validate({
//  debug: true,
    rules: {
        startDate: {
            required: true,
            reportdate: true
        },
        endDate: {
            reportdate: true
        },
        performer: {
            required: true,
            rangelength: [1, 255],
            regexp: performer_regexp
        },
        activity: {
            required: true,
            rangelength: [1, 255],
            regexp: activity_regexp
        }
    }
});
        $("#add-btn").click(function(event) {
       // if ($("form[name='report-add']").valid()) {
            var  $confirm = $("#confirm");
            var serial_report = $(add_button).parent("form[name='report-add']").serialize();
            serial_report = $('form[name="report-add"]').serialize();
            $.post(url,
                serial_report,
                function(data, status, jxhr) {
                    if (data.status === 'success') {
                        $confirm.html("Report has been successfully added<br />to the database");
                    } else {
                        $confirm.html("Report hasn't been added.<br />Please, try later");
                    }                    
                    $confirm.finish().fadeIn(600).delay(2800).fadeOut(1200);
                },
            'text'
            );   
            $("#close-btn").click();         
            return false;
         //   } //if
        });
    }; 

]]#

    function modal_update(update_button) {
        // getting a ajax backing object
        var url = "#springUrl('/report/ajax')";   
        var url_update = "#springUrl('/report/ajax/update')";         
        var html = '#modal_update( )';        
        html = $(html);
#[[     var id_val = $(update_button).parent(".button-block").data("id").trim();
        $.get(url, 
            {id: id_val},
            function(report) {
                html.find("#startDate").attr("value", (new Date(report.startDate)).toString());
                html.find("#endDate").attr("value", (new Date(report.endDate)).toString());
                html.find("#performer").attr("value", report.performer);
                html.find("#activity").attr("value", report.activity);
                html.find("#activity").val(report.activity);
                html.find("span").text(report.id);
                html = html.get(0).outerHTML;
                modal.open({content: html});
                $("#close-btn").click(function() {
                    $("#close").click();
                });


$("form[name='report-update']").validate({
//  debug: true,
    rules: {
        startDate: {
            required: true,
            reportdate: true
        },
        endDate: {
            reportdate: true
        },
        performer: {
            required: true,
            rangelength: [1, 255],
            regexp: performer_regexp
        },
        activity: {
            required: true,
            rangelength: [1, 255],
            regexp: activity_regexp
        }
    }
});


                $("#update-btn").click(function(e) {
 // before ajax call cause defaul action will be fired up
            e.preventDefault();

            if($("form[name='report-update']").valid()) {
      
            alert("Watch out!"); 
            var id_val = $(update_button).parent(".button-block").data("id").trim();                
            var serial_report = $("form[name='report-update']").serialize();
            serial_report = serial_report + "&id=" + encodeURI(id_val);
            $.ajax(url_update, {
                method: "POST",
                async: true,
                cache: false,
                data: serial_report,
                success: function(data) {
                    $("#confirm").finish().html("Report has been successfully updated<br />in the database");                         
                    $("#confirm").fadeIn(600)
                        .delay(3000)
                        .fadeOut(1200);                      
                },
                error: function() {
                    $("#confirm").finish().html("Report cannot be updated<br />in the database");                                                                 
                    $("#confirm").fadeIn(600)
                        .delay(3000)
                        .fadeOut(1200);                      
                }        
            }); 
            alert("Watch out!");            
            $("#close-btn").click();
            } //#if
            return false;
                });
            },
            'json' 
        );           
]]#      
};

    function modal_delete(delete_button) {
        // modal form HTML template
        var html = '#modal_delete( )'; 
        // template processing
        var url = "#springUrl('/report/ajax')";  
//      var deleted_row = $('.table tr > td:first')
        var id_val = $(delete_button).parent(".button-block").data("id").trim();
#[[        $.get(url, 
             {id: id_val},
             function(report) {
                html = $(html).find("#id").text(report.id).end()
                       .find("#startDate").text((new Date(report.startDate)).toString()).end()
                       .find("#endDate").text((new Date(report.endDate)).toString()).end()
                       .find("#performer").text(report.performer).end()
                       .find("#activity").text(report.activity).end();
                html.find("span").text(report.id);
                // TODO: remove additional <div>
                html = html.get(0).outerHTML;
                modal.open({ content: html });
        $("#close-btn").click(function() {
            $("#close").click();
        });
        $("#confirm-btn").click(function() {   
            var url = ]]#"#springUrl('/report/ajax/remove')";#[[
            $.post(url, 
                   {id: id_val},
                   function(data) {
                      if (data === 'success') {                        
                        $("#close").click(); 
                        // remove table row from DOM                        
                        $(".button-block").addClass(".hidden").appendTo(".table");
                        $(".active-row").remove();
                        // remove from checklist? and pager? URL: '/report/ajax/pager/remove'
                        $("#confirm").finish().html("Selected element has been <br />removed from the database"); 
                      } else {
                        $("#close").click(); 
                        $("#confirm").finish().html("Cannot remove selected element<br />cause it doesn't exist.<br /> Please, refresh the page");                         
                      }
                      $("#confirm").fadeIn(600)
                        .delay(3000)
                        .fadeOut(1200);
                   },
                   'text'
            );
        });
             },
             'json');        
 ]]#
     //      var remove_from_checklist_url = "#springUrl('/checklist/remove/')" + id_val;
#[[  //      $.post(remove_from_checklist_url, 
     //       {},
     //      function(data) {
     //           if (data !== "success") {
     //               console.log("Cannot remove report from checklist.");
     //           }
     //       },
     //       'text'
     //      );
    }; ]]#

    function modal_action(action_button) {
        var id_val = $(action_button).parent(".button-block").data("id").trim();        
        var html = '#modal_action( )';
        html = $(html);
        var error = false;
////////
           var url = "#springUrl('/report/ajax')"; 
#[[        $.get(url, 
             {id: id_val},
             function(report) {
                //alert("SUCCESS 1");
                html.find("#id").text(report.id).end()
                       .find("#startDate").text((new Date(report.startDate)).toString()).end()
                       .find("#endDate").text((new Date(report.endDate)).toString()).end()
                       .find("#performer").text(report.performer).end()
                       .find("#activity").text(report.activity).end();
                html.find("span").text(report.id);
                // TODO: remove additional <div>                          
               // html = html.get(0).outerHTML;      
             },
             'json');     
]]#
//////// FIX chain of call OR MAKE SYNCHRONOUS
        var url = "#springUrl('/report/ajax/uri')";
#[[        $.ajax(url, {
            method: "GET",
            async: false,
            cache: false,
            data: "id=" + id_val,
            dataType: 'text',
            success: function(data) {      
                //alert("SUCCESS 2");
                html.find("input[type='text']").val(data);                
            },
            error: function() {
                error = true;
            },
            complete: function() {                
            }
        });
        if (error) {
                $("#confirm").finish().html("Cannot retrive an URL of report<br />Please, try it later");                         
                $("#confirm").fadeIn(600)
                        .delay(3000)
                        .fadeOut(1200);
        } else {
            modal.open({ content: html });
            $("#close-btn").click(function() {
              $("#close").click();
            }); 
        }
    }; 
]]#
</script>    
