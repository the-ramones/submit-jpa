[34m2013-10-24 07:32:26,610  INFO | main | org.springframework.web.context.ContextLoader           | Root WebApplicationContext: initialization started 
[0;39m[34m2013-10-24 07:32:26,786  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Refreshing Root WebApplicationContext: startup date [Thu Oct 24 07:32:26 FET 2013]; root of context hierarchy 
[0;39m[34m2013-10-24 07:32:26,901  INFO | main | o.s.beans.factory.xml.XmlBeanDefinitionReader           | Loading XML bean definitions from ServletContext resource [/WEB-INF/report-context.xml] 
[0;39m[34m2013-10-24 07:32:27,343  INFO | main | o.s.context.annotation.ClassPathBeanDefinitionScanner   | JSR-330 'javax.inject.Named' annotation found and supported for component scanning 
[0;39m[34m2013-10-24 07:32:27,699  INFO | main | o.s.beans.factory.xml.XmlBeanDefinitionReader           | Loading XML bean definitions from ServletContext resource [/WEB-INF/report-security.xml] 
[0;39m[34m2013-10-24 07:32:27,859  INFO | main | o.s.security.core.SpringSecurityCoreVersion             | You are running with Spring Security Core 3.0.5.RELEASE 
[0;39m[34m2013-10-24 07:32:27,860  INFO | main | o.s.security.config.SecurityNamespaceHandler            | Spring Security 'config' module version is 3.0.5.RELEASE 
[0;39m[34m2013-10-24 07:32:28,045  INFO | main | o.s.s.config.http.HttpSecurityBeanDefinitionParser      | Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.session.ConcurrentSessionFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 800, Root bean: class [org.springframework.security.web.authentication.www.BasicAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1200, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1500, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1600, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 1900] 
[0;39m[34m2013-10-24 07:32:28,064  INFO | main | o.s.s.c.method.GlobalMethodSecurityBeanDefinitionParser | Using bean 'expressionHandler' as method ExpressionHandler implementation 
[0;39m[34m2013-10-24 07:32:28,978  INFO | main | o.s.c.support.PropertySourcesPlaceholderConfigurer      | Loading properties file from class path resource [report.properties] 
[0;39m[34m2013-10-24 07:32:29,047  INFO | main | o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
[0;39m[34m2013-10-24 07:32:29,321  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'sp.security.ReportsPermissionEvaluator#de1e3a' of type [class sp.security.ReportsPermissionEvaluator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,325  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'expressionHandler' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,337  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean '(inner bean)' of type [class org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,346  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean '(inner bean)' of type [class org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,351  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource#0' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,366  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.security.methodSecurityMetadataSourceAdvisor' of type [class org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,419  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,423  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:32:29,447  INFO | main | o.s.beans.factory.support.DefaultListableBeanFactory    | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14b9070: defining beans [suggestRepositoryImpl,opRepositoryImpl,reportRepositoryImpl,userRepositoryImpl,solrRepositoryImpl,registerRepositoryImpl,opServiceImpl,emailServiceImpl,registryServiceImpl,solrServiceImpl,reportServiceImpl,suggestServiceImpl,userServiceImpl,backendState,frontendState,spStatsITextPdfBuilder,spPdfBoxPdfBuilder,propertiesReloader,spStaticBeanInjector,propertyService,managerUtil,reportConfig,bitronixJtaConfig,suggestIndex,suggestIndexCreator,suggestIndexSearcher,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,emailMessageSource,backendProperties,frontendProperties,reportsDS,registryDS,jpaVendorAdapter,jpaDialect,entityManagerFactoryReports,entityManagerFactoryRegistry,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor#0,reportsSolrServer,solrTemplate,org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.security.web.PortMapperImpl#0,org.springframework.security.web.context.HttpSessionSecurityContextRepository#0,org.springframework.security.core.session.SessionRegistryImpl#0,org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy#0,org.springframework.security.authentication.ProviderManager#0,org.springframework.security.web.access.channel.ChannelDecisionManagerImpl#0,org.springframework.security.access.vote.AffirmativeBased#0,org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0,org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0,org.springframework.security.authentication.AnonymousAuthenticationProvider#0,org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices#0,org.springframework.security.authentication.RememberMeAuthenticationProvider#0,org.springframework.security.web.savedrequest.HttpSessionRequestCache#0,org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0,org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0,org.springframework.security.config.http.UserDetailsServiceInjectionBeanPostProcessor#0,org.springframework.security.filterChainProxy,org.springframework.security.authentication.dao.DaoAuthenticationProvider#0,org.springframework.security.authentication.DefaultAuthenticationEventPublisher#0,org.springframework.security.authenticationManager,dataSource,userDetailsService,org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource#0,org.springframework.security.access.vote.AffirmativeBased#1,org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor#0,org.springframework.security.methodSecurityMetadataSourceAdvisor,expressionHandler,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0,emailSession,enterpriseDataSource,registryDataSource,btmConfig,bitronixTransactionManager,transactionManagerNative,userTransaction,transactionManager]; root of factory hierarchy 
[0;39m[39m2013-10-24 07:32:29,637 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | building XA pool for jdbc/enterpriseDS with 4 connection(s) 
[0;39m[39m2013-10-24 07:32:29,733 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'user' to 'netbeans' 
[0;39m[39m2013-10-24 07:32:29,746 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'url' to 'jdbc:mysql://localhost:3306/enterprise?autoReconnect=true&characterEncoding=utf8' 
[0;39m[39m2013-10-24 07:32:29,747 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'password' to 'netbeans' 
[0;39m[39m2013-10-24 07:32:29,748 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'databaseName' to 'enterprise' 
[0;39m[39m2013-10-24 07:32:32,001 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:32,002 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:32,009 DEBUG | main | bitronix.tm.Configuration                               | loading default configuration 
[0;39m[39m2013-10-24 07:32:32,010 DEBUG | main | bitronix.tm.Configuration                               | no configuration file found, using default settings 
[0;39m[39m2013-10-24 07:32:32,074 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:32,074 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:32,101 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:32,101 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:32,126 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:32,126 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:32,157 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | task scheduler backed by ConcurrentSkipListSet 
[0;39m[39m2013-10-24 07:32:32,158 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:31:07 FET 1970 
[0;39m[39m2013-10-24 07:32:32,159 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:32,159 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:31:07 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 1 
[0;39m[34m2013-10-24 07:32:32,268  INFO | main | bitronix.tm.BitronixTransactionManager                  | Bitronix Transaction Manager version 2.1.3 
[0;39m[39m2013-10-24 07:32:32,269 DEBUG | main | bitronix.tm.BitronixTransactionManager                  | JVM version 1.7.0_21 
[0;39m[34m2013-10-24 07:32:32,269  INFO | main | bitronix.tm.Configuration                               | JVM unique ID: <reports-spring-btm-node0> 
[0;39m[39m2013-10-24 07:32:32,270 DEBUG | main | bitronix.tm.BitronixTransactionManager                  | starting BitronixTransactionManager using a Configuration with [allowMultipleLrc=false, asynchronous2Pc=false, backgroundRecoveryInterval=1, backgroundRecoveryIntervalSeconds=60, currentNodeOnlyRecovery=true, debugZeroResourceTransaction=false, defaultTransactionTimeout=60, disableJmx=false, exceptionAnalyzer=null, filterLogStatus=false, forceBatchingEnabled=true, forcedWriteEnabled=true, gracefulShutdownInterval=60, jndiTransactionSynchronizationRegistryName=java:comp/TransactionSynchronizationRegistry, jndiUserTransactionName=java:comp/UserTransaction, journal=disk, logPart1Filename=tx-logs/tx-part1.btm, logPart2Filename=tx-logs/tx-part2.btm, maxLogSizeInMb=2, resourceConfigurationFilename=null, serverId=reports-spring-btm-node0, skipCorruptedLogs=false, warnAboutZeroResourceTransaction=true] 
[0;39m[39m2013-10-24 07:32:32,272 DEBUG | main | bitronix.tm.TransactionManagerServices                  | using journal disk 
[0;39m[39m2013-10-24 07:32:32,273 DEBUG | main | bitronix.tm.journal.DiskJournal                         | creation of log files 
[0;39m[39m2013-10-24 07:32:32,550 DEBUG | main | bitronix.tm.journal.DiskJournal                         | disk journal files max length: 2097173 
[0;39m[39m2013-10-24 07:32:32,556 DEBUG | main | bitronix.tm.journal.TransactionLogHeader                | read header a Bitronix TransactionLogHeader with timestamp=59407690, state=CLEAN_LOG_STATE, position=21 
[0;39m[39m2013-10-24 07:32:32,556 DEBUG | main | bitronix.tm.journal.TransactionLogAppender              | spawning disk force batcher thread 
[0;39m[39m2013-10-24 07:32:32,558 DEBUG | main | bitronix.tm.journal.TransactionLogHeader                | read header a Bitronix TransactionLogHeader with timestamp=59407501, state=CLEAN_LOG_STATE, position=21 
[0;39m[39m2013-10-24 07:32:32,558 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | disk force thread is up and running 
[0;39m[39m2013-10-24 07:32:32,559 DEBUG | main | bitronix.tm.journal.DiskJournal                         | logging to file 1: a TransactionLogAppender on tx-part1.btm 
[0;39m[39m2013-10-24 07:32:32,560 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | waiting for the wait queue to fill up 
[0;39m[39m2013-10-24 07:32:32,560 DEBUG | main | bitronix.tm.journal.DiskJournal                         | log file activated, forcing file state to disk 
[0;39m[39m2013-10-24 07:32:32,560 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | waiting for some TransactionLogAppender to get enqueued 
[0;39m[39m2013-10-24 07:32:32,560 DEBUG | main | bitronix.tm.journal.DiskForceWaitQueue                  | enqueued a TransactionLogAppender on tx-part1.btm, 1 TransactionLogAppender waiting for a disk force in bitronix.tm.journal.DiskForceWaitQueue@1d4482a 
[0;39m[39m2013-10-24 07:32:32,561 DEBUG | main | bitronix.tm.journal.DiskForceBatcherThread              | batching disk force, there are 1 TransactionLogAppender(s) in the wait queue 
[0;39m[39m2013-10-24 07:32:32,561 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | wait queue is not empty anymore (1 in queue) 
[0;39m[39m2013-10-24 07:32:32,561 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | forcing... 
[0;39m[39m2013-10-24 07:32:32,561 DEBUG | main | bitronix.tm.journal.DiskForceWaitQueue                  | waiting for a TransactionLogAppender on tx-part1.btm to get dequeued 
[0;39m[39m2013-10-24 07:32:32,561 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | returning head TransactionLogAppender 
[0;39m[39m2013-10-24 07:32:32,562 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.TransactionLogAppender              | forcing log writing 
[0;39m[39m2013-10-24 07:32:32,650 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.TransactionLogAppender              | done forcing log 
[0;39m[39m2013-10-24 07:32:32,650 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | clearing list of 1 waiting TransactionLogAppender(s) in bitronix.tm.journal.DiskForceWaitQueue@1d4482a 
[0;39m[39m2013-10-24 07:32:32,650 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | waiting for the wait queue to fill up 
[0;39m[39m2013-10-24 07:32:32,650 DEBUG | main | bitronix.tm.journal.DiskForceBatcherThread              | wait queue got emptied, disk force is done 
[0;39m[39m2013-10-24 07:32:32,650 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | waiting for some TransactionLogAppender to get enqueued 
[0;39m[39m2013-10-24 07:32:32,650 DEBUG | main | bitronix.tm.journal.DiskJournal                         | disk journal opened 
[0;39m[39m2013-10-24 07:32:32,652 DEBUG | main | bitronix.tm.resource.ResourceLoader                     | no resource configuration file specified 
[0;39m[39m2013-10-24 07:32:32,657 DEBUG | main | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:32:32,657 DEBUG | main | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:32:32,657 DEBUG | main | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:32:32,657 DEBUG | main | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:32,658 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:32,658 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:32:32,658 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:32,658 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,658 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,658 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,659 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,659 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:32:32,659 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,817 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,819 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,823 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:32:32,824 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda with XID null 
[0;39m[39m2013-10-24 07:32:32,825 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:32:32,825 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda with XID null 
[0;39m[39m2013-10-24 07:32:32,825 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@57ca3e 
[0;39m[39m2013-10-24 07:32:32,825 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@19ec437 
[0;39m[39m2013-10-24 07:32:32,826 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,826 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda from null 
[0;39m[39m2013-10-24 07:32:32,826 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,827 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda from null 
[0;39m[39m2013-10-24 07:32:32,827 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,827 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,827 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | transaction manager not running, there is no in-flight transaction 
[0;39m[39m2013-10-24 07:32:32,828 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,828 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,828 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:32:32,828 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@19ec437 
[0;39m[39m2013-10-24 07:32:32,828 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,829 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,829 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:32,829 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:32:32,829 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:32,830 DEBUG | main | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:32:32,830 DEBUG | main | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:32:32,830 DEBUG | main | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:32:32,830 DEBUG | main | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:32:32,831 DEBUG | main | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:32:32,831 DEBUG | main | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:32:32,831 DEBUG | main | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[34m2013-10-24 07:32:32,831  INFO | main | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 1 resource(s) [jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:32:32,832 DEBUG | main | bitronix.tm.BitronixTransactionManager                  | recovery will run in the background every 60 second(s) 
[0;39m[39m2013-10-24 07:32:32,832 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:31:08 FET 1970 
[0;39m[39m2013-10-24 07:32:32,832 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@f96a5b 
[0;39m[39m2013-10-24 07:32:32,833 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:31:08 FET 1970, total task(s) queued: 2 
[0;39m[34m2013-10-24 07:32:32,894  INFO | main | o.springframework.transaction.jta.JtaTransactionManager | Using JTA UserTransaction: a BitronixTransactionManager with 0 in-flight transaction(s) 
[0;39m[34m2013-10-24 07:32:32,894  INFO | main | o.springframework.transaction.jta.JtaTransactionManager | Using JTA TransactionManager: a BitronixTransactionManager with 0 in-flight transaction(s) 
[0;39m[34m2013-10-24 07:32:33,025  INFO | main | o.s.orm.jpa.LocalContainerEntityManagerFactoryBean      | Building JPA container EntityManagerFactory for persistence unit 'reportPU' 
[0;39m[39m2013-10-24 07:32:33,083 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:33,084 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:33,084 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:33,085 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16b4262 
[0;39m[39m2013-10-24 07:32:33,087 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@88cb7a 
[0;39m[39m2013-10-24 07:32:33,088 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@15fd27a 
[0;39m[39m2013-10-24 07:32:33,090 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:33,090 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:33,090 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:33,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:33,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:33,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:33,095 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:33,096 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:33,096 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:33,098 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:33,098 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:33,098 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:33,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:33,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:33,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:33,103 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:33,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:33,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:33,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:33,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:33,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:33,108 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:33,109 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:33,110 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:33,110 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:33,112 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:33,112 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:33,113 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:33,113 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:33,116 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:33,116 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:33,118 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:33,119 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:33,121 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:33,121 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:33,121 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:33,122 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc37f8 
[0;39m[39m2013-10-24 07:32:33,124 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:33,124 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:33,125 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:33,126 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cc45 
[0;39m[39m2013-10-24 07:32:33,127 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:33,127 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:33,129 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:33,129 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:33,130 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:33,130 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:33,131 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:33,132 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:33,134 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:33,134 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:33,135 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16dd1be 
[0;39m[39m2013-10-24 07:32:33,136 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@b7a9db 
[0;39m[39m2013-10-24 07:32:33,138 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:33,138 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:33,138 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:33,139 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:33,140 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:33,140 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:33,141 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@714de2 
[0;39m[39m2013-10-24 07:32:33,142 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:33,142 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:33,143 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:33,144 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:33,144 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:33,145 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:33,146 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@10364f2 
[0;39m[39m2013-10-24 07:32:33,155 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:33,156 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:33,157 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:33,158 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:33,166 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:33,166 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:33,167 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:33,169 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:33,170 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:33,172 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@1cf60d6 
[0;39m[39m2013-10-24 07:32:33,177 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:33,177 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:33,178 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b31dee 
[0;39m[39m2013-10-24 07:32:33,178 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7210d3 
[0;39m[39m2013-10-24 07:32:33,178 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@aeb5e7 
[0;39m[39m2013-10-24 07:32:33,179 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@288a7c 
[0;39m[39m2013-10-24 07:32:33,179 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19c032f 
[0;39m[39m2013-10-24 07:32:33,179 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1951f2e 
[0;39m[39m2013-10-24 07:32:33,179 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1323815 
[0;39m[39m2013-10-24 07:32:33,179 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@155f 
[0;39m[34m2013-10-24 07:32:33,211  INFO | main | org.hibernate.annotations.common.Version                | Hibernate Commons Annotations 3.2.0.Final 
[0;39m[34m2013-10-24 07:32:33,221  INFO | main | org.hibernate.cfg.Environment                           | Hibernate 3.6.3.Final 
[0;39m[34m2013-10-24 07:32:33,226  INFO | main | org.hibernate.cfg.Environment                           | hibernate.properties not found 
[0;39m[34m2013-10-24 07:32:33,232  INFO | main | org.hibernate.cfg.Environment                           | Bytecode provider name : javassist 
[0;39m[34m2013-10-24 07:32:33,239  INFO | main | org.hibernate.cfg.Environment                           | using JDK 1.4 java.sql.Timestamp handling 
[0;39m[39m2013-10-24 07:32:33,303 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator] 
[0;39m[39m2013-10-24 07:32:33,304 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator] 
[0;39m[39m2013-10-24 07:32:33,305 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:32:33,306 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:32:33,308 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator] 
[0;39m[39m2013-10-24 07:32:33,309 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned] 
[0;39m[39m2013-10-24 07:32:33,310 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator] 
[0;39m[39m2013-10-24 07:32:33,311 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator] 
[0;39m[39m2013-10-24 07:32:33,312 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator] 
[0;39m[39m2013-10-24 07:32:33,312 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator] 
[0;39m[39m2013-10-24 07:32:33,313 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator] 
[0;39m[39m2013-10-24 07:32:33,314 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator] 
[0;39m[39m2013-10-24 07:32:33,314 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator] 
[0;39m[39m2013-10-24 07:32:33,315 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator] 
[0;39m[39m2013-10-24 07:32:33,317 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator] 
[0;39m[34m2013-10-24 07:32:33,319  INFO | main | org.hibernate.ejb.Version                               | Hibernate EntityManager 3.6.3.Final 
[0;39m[39m2013-10-24 07:32:33,319 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:33,320 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:33,320 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:33,320 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16b4262 
[0;39m[39m2013-10-24 07:32:33,320 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@88cb7a 
[0;39m[39m2013-10-24 07:32:33,320 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@15fd27a 
[0;39m[39m2013-10-24 07:32:33,320 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:33,321 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:33,322 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:33,323 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:33,323 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:33,323 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:33,323 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:33,323 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:33,323 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:33,324 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:33,324 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:33,324 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:33,324 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:33,324 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:33,324 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:33,325 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:33,326 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:33,326 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:33,326 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc37f8 
[0;39m[39m2013-10-24 07:32:33,326 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:33,326 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:33,326 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cc45 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:33,327 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:33,328 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:33,328 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:33,328 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:33,328 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:33,328 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16dd1be 
[0;39m[39m2013-10-24 07:32:33,328 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@b7a9db 
[0;39m[39m2013-10-24 07:32:33,329 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:33,329 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:33,329 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:33,329 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:33,329 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:33,329 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:33,330 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@714de2 
[0;39m[39m2013-10-24 07:32:33,330 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:33,330 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:33,330 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:33,330 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:33,330 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@10364f2 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:33,331 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:33,332 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:33,332 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:33,332 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:33,332 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:33,332 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@1cf60d6 
[0;39m[39m2013-10-24 07:32:33,332 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:33,333 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:33,333 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c3c32f 
[0;39m[39m2013-10-24 07:32:33,333 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14346a4 
[0;39m[39m2013-10-24 07:32:33,333 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2dc82 
[0;39m[39m2013-10-24 07:32:33,333 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8afd97 
[0;39m[39m2013-10-24 07:32:33,333 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ee9b6 
[0;39m[39m2013-10-24 07:32:33,334 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11baa1 
[0;39m[39m2013-10-24 07:32:33,334 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f3bfdc 
[0;39m[39m2013-10-24 07:32:33,334 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b9451e 
[0;39m[39m2013-10-24 07:32:33,334 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator] 
[0;39m[39m2013-10-24 07:32:33,334 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator] 
[0;39m[39m2013-10-24 07:32:33,334 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:32:33,335 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:32:33,335 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator] 
[0;39m[39m2013-10-24 07:32:33,335 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned] 
[0;39m[39m2013-10-24 07:32:33,335 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator] 
[0;39m[39m2013-10-24 07:32:33,335 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator] 
[0;39m[39m2013-10-24 07:32:33,335 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator] 
[0;39m[39m2013-10-24 07:32:33,336 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator] 
[0;39m[39m2013-10-24 07:32:33,336 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator] 
[0;39m[39m2013-10-24 07:32:33,336 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator] 
[0;39m[39m2013-10-24 07:32:33,336 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator] 
[0;39m[39m2013-10-24 07:32:33,336 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator] 
[0;39m[39m2013-10-24 07:32:33,336 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator] 
[0;39m[39m2013-10-24 07:32:33,360 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Processing PersistenceUnitInfo [
	name: reportPU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: /solr
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat6-maven-plugin:2.1, parent: sun.misc.Launcher$AppClassLoader@1644028]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@50d971
	excludeUnlistedClasses: true
	JTA datasource: a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available)
	Non JTA datasource: null
	Transaction type: JTA
	PU root URL: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sp.model.Report]
	Mapping files names []
	Properties [
		hibernate.archive.autodetection: class] 
[0;39m[39m2013-10-24 07:32:33,363 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:32:33,363 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:32:33,370 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Searching mapped entities in jar/par: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes 
[0;39m[39m2013-10-24 07:32:33,371 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.ReportsException 
[0;39m[39m2013-10-24 07:32:33,406 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.SpException 
[0;39m[39m2013-10-24 07:32:33,407 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepository 
[0;39m[39m2013-10-24 07:32:33,412 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepository 
[0;39m[39m2013-10-24 07:32:33,413 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepositoryImpl 
[0;39m[39m2013-10-24 07:32:33,427 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepositoryImpl 
[0;39m[39m2013-10-24 07:32:33,428 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepository 
[0;39m[39m2013-10-24 07:32:33,428 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepositoryImpl 
[0;39m[39m2013-10-24 07:32:33,429 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepository 
[0;39m[39m2013-10-24 07:32:33,430 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepositoryImpl 
[0;39m[39m2013-10-24 07:32:33,431 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepositoryImpl 
[0;39m[39m2013-10-24 07:32:33,433 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepository 
[0;39m[39m2013-10-24 07:32:33,434 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepository 
[0;39m[39m2013-10-24 07:32:33,435 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepositoryImpl 
[0;39m[39m2013-10-24 07:32:33,437 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.system.SystemConstants 
[0;39m[39m2013-10-24 07:32:33,438 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpServiceImpl 
[0;39m[39m2013-10-24 07:32:33,439 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrService 
[0;39m[39m2013-10-24 07:32:33,440 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ReportRESTFacade 
[0;39m[39m2013-10-24 07:32:33,444 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ApplicationConfig 
[0;39m[39m2013-10-24 07:32:33,445 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryService 
[0;39m[39m2013-10-24 07:32:33,445 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailServiceImpl 
[0;39m[39m2013-10-24 07:32:33,447 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryServiceImpl 
[0;39m[39m2013-10-24 07:32:33,448 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailService 
[0;39m[39m2013-10-24 07:32:33,448 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrServiceImpl 
[0;39m[39m2013-10-24 07:32:33,449 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportServiceImpl 
[0;39m[39m2013-10-24 07:32:33,450 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestService 
[0;39m[39m2013-10-24 07:32:33,450 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportService 
[0;39m[39m2013-10-24 07:32:33,451 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestServiceImpl 
[0;39m[39m2013-10-24 07:32:33,452 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserServiceImpl 
[0;39m[39m2013-10-24 07:32:33,453 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserService 
[0;39m[39m2013-10-24 07:32:33,453 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpService 
[0;39m[39m2013-10-24 07:32:33,453 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op_ 
[0;39m[39m2013-10-24 07:32:33,454 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report 
[0;39m[39m2013-10-24 07:32:33,455 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Report 
[0;39m[39m2013-10-24 07:32:33,456 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User 
[0;39m[39m2013-10-24 07:32:33,457 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.User 
[0;39m[39m2013-10-24 07:32:33,457 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.AjaxResponse 
[0;39m[39m2013-10-24 07:32:33,458 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ErrorDetails 
[0;39m[39m2013-10-24 07:32:33,458 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Tuple 
[0;39m[39m2013-10-24 07:32:33,459 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Prompt 
[0;39m[39m2013-10-24 07:32:33,459 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ResultPager 
[0;39m[39m2013-10-24 07:32:33,460 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Statistics 
[0;39m[39m2013-10-24 07:32:33,460 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register 
[0;39m[39m2013-10-24 07:32:33,461 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Register 
[0;39m[39m2013-10-24 07:32:33,461 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.RegisterId 
[0;39m[39m2013-10-24 07:32:33,461 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.RegisterId 
[0;39m[39m2013-10-24 07:32:33,462 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op 
[0;39m[39m2013-10-24 07:32:33,462 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Op 
[0;39m[39m2013-10-24 07:32:33,463 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchable 
[0;39m[39m2013-10-24 07:32:33,463 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchableField 
[0;39m[39m2013-10-24 07:32:33,463 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report_ 
[0;39m[39m2013-10-24 07:32:33,464 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState$GenericStateHolder 
[0;39m[39m2013-10-24 07:32:33,464 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.BackendState 
[0;39m[39m2013-10-24 07:32:33,464 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.FrontendState 
[0;39m[39m2013-10-24 07:32:33,465 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.State 
[0;39m[39m2013-10-24 07:32:33,465 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState 
[0;39m[39m2013-10-24 07:32:33,465 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User_ 
[0;39m[39m2013-10-24 07:32:33,466 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register_ 
[0;39m[39m2013-10-24 07:32:33,466 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatisticsGenerator 
[0;39m[39m2013-10-24 07:32:33,467 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory$DateFormatSymbolsRu 
[0;39m[39m2013-10-24 07:32:33,468 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpHasher 
[0;39m[39m2013-10-24 07:32:33,468 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBuilder 
[0;39m[39m2013-10-24 07:32:33,468 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpContextLoaderListener 
[0;39m[39m2013-10-24 07:32:33,469 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLightPager 
[0;39m[39m2013-10-24 07:32:33,469 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ValidationBootstrap 
[0;39m[39m2013-10-24 07:32:33,470 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ReportDateEditor 
[0;39m[39m2013-10-24 07:32:33,471 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatsITextPdfBuilder 
[0;39m[39m2013-10-24 07:32:33,473 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBoxPdfBuilder 
[0;39m[39m2013-10-24 07:32:33,475 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpSortDefinition 
[0;39m[39m2013-10-24 07:32:33,476 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertiesReloader 
[0;39m[39m2013-10-24 07:32:33,477 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.SpStaticBeanInjector 
[0;39m[39m2013-10-24 07:32:33,477 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.Reloader 
[0;39m[39m2013-10-24 07:32:33,478 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertyService 
[0;39m[39m2013-10-24 07:32:33,479 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.EncodingPostProcessor 
[0;39m[39m2013-10-24 07:32:33,479 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory 
[0;39m[39m2013-10-24 07:32:33,480 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPageable 
[0;39m[39m2013-10-24 07:32:33,481 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLazyPager 
[0;39m[39m2013-10-24 07:32:33,482 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPagedListHolder 
[0;39m[39m2013-10-24 07:32:33,483 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPopulateDb 
[0;39m[39m2013-10-24 07:32:33,485 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ManagerUtil 
[0;39m[39m2013-10-24 07:32:33,485 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateTool 
[0;39m[39m2013-10-24 07:32:33,486 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AdminController 
[0;39m[39m2013-10-24 07:32:33,487 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ChecklistController 
[0;39m[39m2013-10-24 07:32:33,488 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ForwardController 
[0;39m[39m2013-10-24 07:32:33,489 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.HomeController 
[0;39m[39m2013-10-24 07:32:33,490 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ErrorController 
[0;39m[39m2013-10-24 07:32:33,490 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController 
[0;39m[39m2013-10-24 07:32:33,492 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SuggestController 
[0;39m[39m2013-10-24 07:32:33,494 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.EmailController 
[0;39m[39m2013-10-24 07:32:33,494 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.RegistryController 
[0;39m[39m2013-10-24 07:32:33,495 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SolrSuggestController 
[0;39m[39m2013-10-24 07:32:33,497 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.LoginController 
[0;39m[39m2013-10-24 07:32:33,498 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController$1 
[0;39m[39m2013-10-24 07:32:33,499 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ReportController 
[0;39m[39m2013-10-24 07:32:33,501 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig 
[0;39m[39m2013-10-24 07:32:33,502 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.BitronixJtaConfig 
[0;39m[39m2013-10-24 07:32:33,503 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig$1 
[0;39m[39m2013-10-24 07:32:33,504 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.interceptor.UserInterceptor 
[0;39m[39m2013-10-24 07:32:33,505 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReportConstraintValidator 
[0;39m[39m2013-10-24 07:32:33,505 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.SystemPropertyValidator 
[0;39m[39m2013-10-24 07:32:33,506 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReport 
[0;39m[39m2013-10-24 07:32:33,507 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDate 
[0;39m[39m2013-10-24 07:32:33,508 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDateConstraintValidator 
[0;39m[39m2013-10-24 07:32:33,509 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.security.ReportsPermissionEvaluator 
[0;39m[39m2013-10-24 07:32:33,509 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSuggester 
[0;39m[39m2013-10-24 07:32:33,510 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSearcher 
[0;39m[39m2013-10-24 07:32:33,510 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.Index 
[0;39m[39m2013-10-24 07:32:33,510 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndex 
[0;39m[39m2013-10-24 07:32:33,511 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexCreator 
[0;39m[39m2013-10-24 07:32:33,512 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexCreator 
[0;39m[39m2013-10-24 07:32:33,513 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexSearcher 
[0;39m[39m2013-10-24 07:32:33,591 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:32:33,591 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[34m2013-10-24 07:32:33,599  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Report 
[0;39m[34m2013-10-24 07:32:33,622  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getPerformers => select distinct r.performer from Report r 
[0;39m[34m2013-10-24 07:32:33,622  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPerformer => select r from Report r where r.performer = :performer 
[0;39m[34m2013-10-24 07:32:33,622  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReports => select r from Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:32:33,622  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPeriod => select r from Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:32:33,622  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByIds => select r from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:32:33,623  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReport => select r from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:32:33,623  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReports => select count(r) from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:32:33,623  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.removeReport => delete from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:32:33,623  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getAllReports => select r from Report r 
[0;39m[39m2013-10-24 07:32:33,636 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:33,645 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Report 
[0;39m[34m2013-10-24 07:32:33,649  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Report on table reports 
[0;39m[39m2013-10-24 07:32:33,707 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:32:33,715 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:33,717 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:33,719 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:33,722 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=activity, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,723 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property activity with lazy=false 
[0;39m[39m2013-10-24 07:32:33,723 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for activity 
[0;39m[39m2013-10-24 07:32:33,723 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property activity 
[0;39m[39m2013-10-24 07:32:33,723 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=endDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,724 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property endDate with lazy=false 
[0;39m[39m2013-10-24 07:32:33,725 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for endDate 
[0;39m[39m2013-10-24 07:32:33,725 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property endDate 
[0;39m[39m2013-10-24 07:32:33,725 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=performer, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,726 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property performer with lazy=false 
[0;39m[39m2013-10-24 07:32:33,726 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for performer 
[0;39m[39m2013-10-24 07:32:33,726 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property performer 
[0;39m[39m2013-10-24 07:32:33,726 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=startDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,726 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property startDate with lazy=false 
[0;39m[39m2013-10-24 07:32:33,726 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for startDate 
[0;39m[39m2013-10-24 07:32:33,727 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property startDate 
[0;39m[34m2013-10-24 07:32:33,729  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Op 
[0;39m[34m2013-10-24 07:32:33,729  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Op.findByTitle => select o from Op o where o.title = :title 
[0;39m[39m2013-10-24 07:32:33,729 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:33,730 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Op 
[0;39m[34m2013-10-24 07:32:33,730  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Op on table ops 
[0;39m[39m2013-10-24 07:32:33,735 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:32:33,735 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:33,736 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:33,736 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:33,736 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=description, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,736 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property description with lazy=false 
[0;39m[39m2013-10-24 07:32:33,736 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for description 
[0;39m[39m2013-10-24 07:32:33,737 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property description 
[0;39m[39m2013-10-24 07:32:33,739 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:32:33,739 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,743 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,761 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,762 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,763 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:32:33,765 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:32:33,766 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:32:33,767 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:32:33,773 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[39m2013-10-24 07:32:33,773 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=title, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,774 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property title with lazy=false 
[0;39m[39m2013-10-24 07:32:33,774 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for title 
[0;39m[39m2013-10-24 07:32:33,774 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property title 
[0;39m[34m2013-10-24 07:32:33,774  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Register 
[0;39m[34m2013-10-24 07:32:33,775  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.find => select r from Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[34m2013-10-24 07:32:33,775  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.findByPeriod => select r from Register r where r.recordTime between :startDate and :endDate 
[0;39m[34m2013-10-24 07:32:33,775  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByOp => select r from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:32:33,775  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByUser => select r from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:32:33,775  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getAll => select r from Register r order by r.recordTime desc 
[0;39m[34m2013-10-24 07:32:33,776  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countAll => select count(r.op) from Register r 
[0;39m[34m2013-10-24 07:32:33,776  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByOp => select count(r.op) from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:32:33,776  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUser => select count(r.op) from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:32:33,776  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUserAndOp => select count(r.op) from Register r where r.user = :user and r.op = :op 
[0;39m[34m2013-10-24 07:32:33,777  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getLastIdByUserAndOp => select r.id.id from Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:32:33,777 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:33,777 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Register 
[0;39m[34m2013-10-24 07:32:33,778  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Register on table registers 
[0;39m[39m2013-10-24 07:32:33,786 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,790 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property id 
[0;39m[39m2013-10-24 07:32:33,790 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,790 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:33,791 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:33,791 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:33,791 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property opId 
[0;39m[39m2013-10-24 07:32:33,791 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,792 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property opId with lazy=false 
[0;39m[39m2013-10-24 07:32:33,792 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for opId 
[0;39m[39m2013-10-24 07:32:33,792 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property opId 
[0;39m[39m2013-10-24 07:32:33,792 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property userId 
[0;39m[39m2013-10-24 07:32:33,793 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,793 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property userId with lazy=false 
[0;39m[39m2013-10-24 07:32:33,793 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for userId 
[0;39m[39m2013-10-24 07:32:33,793 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property userId 
[0;39m[39m2013-10-24 07:32:33,794 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:33,794 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='op_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:32:33,794 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,797 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property op 
[0;39m[39m2013-10-24 07:32:33,798 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=record_time, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,798 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property recordTime with lazy=false 
[0;39m[39m2013-10-24 07:32:33,798 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for recordTime 
[0;39m[39m2013-10-24 07:32:33,799 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property recordTime 
[0;39m[39m2013-10-24 07:32:33,799 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:32:33,799 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,799 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property user 
[0;39m[34m2013-10-24 07:32:33,800  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.User 
[0;39m[34m2013-10-24 07:32:33,800  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: User.findByFullname => select u from User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:32:33,800 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:33,801 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name User 
[0;39m[34m2013-10-24 07:32:33,801  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.User on table users 
[0;39m[39m2013-10-24 07:32:33,803 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:32:33,804 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:33,804 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:33,804 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:33,805 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=email, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,805 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property email with lazy=false 
[0;39m[39m2013-10-24 07:32:33,805 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for email 
[0;39m[39m2013-10-24 07:32:33,805 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property email 
[0;39m[39m2013-10-24 07:32:33,806 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=fullname, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,806 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property fullname with lazy=false 
[0;39m[39m2013-10-24 07:32:33,806 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for fullname 
[0;39m[39m2013-10-24 07:32:33,806 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property fullname 
[0;39m[39m2013-10-24 07:32:33,807 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=job, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,807 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property job with lazy=false 
[0;39m[39m2013-10-24 07:32:33,807 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for job 
[0;39m[39m2013-10-24 07:32:33,807 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property job 
[0;39m[39m2013-10-24 07:32:33,808 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:32:33,808 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,808 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:33,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:32:33,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:32:33,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:32:33,810 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.User.registers 
[0;39m[39m2013-10-24 07:32:33,810 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[39m2013-10-24 07:32:33,811 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:33,811 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for activity 
[0;39m[39m2013-10-24 07:32:33,811 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for endDate 
[0;39m[39m2013-10-24 07:32:33,811 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for performer 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for startDate 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for description 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for title 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for opId 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for userId 
[0;39m[39m2013-10-24 07:32:33,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for recordTime 
[0;39m[39m2013-10-24 07:32:33,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:33,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for email 
[0;39m[39m2013-10-24 07:32:33,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for fullname 
[0;39m[39m2013-10-24 07:32:33,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for job 
[0;39m[39m2013-10-24 07:32:33,814 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:32:33,820 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:33,821 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:33,821 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:32:33,821 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:32:33,821 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.Op.registers through a foreign key 
[0;39m[34m2013-10-24 07:32:33,822  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.Op.registers -> registers 
[0;39m[39m2013-10-24 07:32:33,824 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.op 
[0;39m[39m2013-10-24 07:32:33,824 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: op_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:32:33,824 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:32:33,824 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.User.registers through a foreign key 
[0;39m[34m2013-10-24 07:32:33,825  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.User.registers -> registers 
[0;39m[39m2013-10-24 07:32:33,825 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.user 
[0;39m[39m2013-10-24 07:32:33,825 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: user_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:32:33,825 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:32:33,825 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:32:33,825 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:32:33,826 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:32:33,826 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[34m2013-10-24 07:32:33,828  INFO | main | org.hibernate.cfg.Configuration                         | Hibernate Validator not found: ignoring 
[0;39m[39m2013-10-24 07:32:34,155 DEBUG | main | org.hibernate.ejb.util.NamingHelper                     | No JNDI name configured for binding Ejb3Configuration 
[0;39m[39m2013-10-24 07:32:34,158 DEBUG | main | org.hibernate.cfg.Configuration                         | Preparing to build session factory with filters : {} 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:32:34,159 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:32:34,160 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:32:34,160 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:32:34,160 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[39m2013-10-24 07:32:34,178 DEBUG | main | org.hibernate.cfg.Configuration                         | Legacy Validator not present in classpath, ignoring event listener registration 
[0;39m[39m2013-10-24 07:32:34,185 DEBUG | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Search not present in classpath, ignoring event listener registration. 
[0;39m[34m2013-10-24 07:32:34,185  INFO | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled. 
[0;39m[34m2013-10-24 07:32:34,211  INFO | main | org.hibernate.connection.ConnectionProviderFactory      | Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider 
[0;39m[34m2013-10-24 07:32:34,216  INFO | main | o.h.ejb.connection.InjectedDataSourceConnectionProvider | Using provided datasource 
[0;39m[39m2013-10-24 07:32:34,217 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:34,217 DEBUG | main | bitronix.tm.resource.common.XAPool                      | trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:34,217 DEBUG | main | bitronix.tm.resource.common.XAPool                      | no current transaction, no connection can be in state NOT_ACCESSIBLE when there is no global transaction context 
[0;39m[39m2013-10-24 07:32:34,217 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:34,217 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:32:34,217 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:34,218 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,218 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,218 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,218 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,218 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:32:34,218 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,233 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,234 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,234 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[34m2013-10-24 07:32:34,264  INFO | main | org.hibernate.dialect.Dialect                           | Using dialect: org.hibernate.dialect.MySQL5Dialect 
[0;39m[34m2013-10-24 07:32:34,278  INFO | main | org.hibernate.cfg.SettingsFactory                       | Database ->
       name : MySQL
    version : 5.5.32-0ubuntu0.12.04.1
      major : 5
      minor : 5 
[0;39m[34m2013-10-24 07:32:34,279  INFO | main | org.hibernate.cfg.SettingsFactory                       | Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1 
[0;39m[39m2013-10-24 07:32:34,279 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@19ec437 
[0;39m[39m2013-10-24 07:32:34,279 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,279 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda from null 
[0;39m[39m2013-10-24 07:32:34,279 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,280 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda from null 
[0;39m[39m2013-10-24 07:32:34,280 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,280 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,280 DEBUG | main | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,280 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@19ec437 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:34,281 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:32:34,282 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e7fda 
[0;39m[34m2013-10-24 07:32:34,283  INFO | main | org.hibernate.transaction.TransactionFactoryFactory     | Transaction strategy: org.hibernate.ejb.transaction.JoinableCMTTransactionFactory 
[0;39m[34m2013-10-24 07:32:34,286  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiating TransactionManagerLookup: org.hibernate.transaction.BTMTransactionManagerLookup 
[0;39m[34m2013-10-24 07:32:34,287  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiated TransactionManagerLookup 
[0;39m[34m2013-10-24 07:32:34,287  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic flush during beforeCompletion(): disabled 
[0;39m[34m2013-10-24 07:32:34,287  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic session close at end of transaction: disabled 
[0;39m[34m2013-10-24 07:32:34,288  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch size: 15 
[0;39m[34m2013-10-24 07:32:34,288  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch updates for versioned data: disabled 
[0;39m[34m2013-10-24 07:32:34,289  INFO | main | org.hibernate.cfg.SettingsFactory                       | Scrollable result sets: enabled 
[0;39m[39m2013-10-24 07:32:34,289 DEBUG | main | org.hibernate.cfg.SettingsFactory                       | Wrap result sets: disabled 
[0;39m[34m2013-10-24 07:32:34,289  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC3 getGeneratedKeys(): enabled 
[0;39m[34m2013-10-24 07:32:34,289  INFO | main | org.hibernate.cfg.SettingsFactory                       | Connection release mode: auto 
[0;39m[34m2013-10-24 07:32:34,290  INFO | main | org.hibernate.cfg.SettingsFactory                       | Maximum outer join fetch depth: 2 
[0;39m[34m2013-10-24 07:32:34,290  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default batch fetch size: 1 
[0;39m[34m2013-10-24 07:32:34,290  INFO | main | org.hibernate.cfg.SettingsFactory                       | Generate SQL with comments: disabled 
[0;39m[34m2013-10-24 07:32:34,291  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL updates by primary key: disabled 
[0;39m[34m2013-10-24 07:32:34,291  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL inserts for batching: disabled 
[0;39m[34m2013-10-24 07:32:34,291  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:32:34,294  INFO | main | org.hibernate.hql.ast.ASTQueryTranslatorFactory         | Using ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:32:34,295  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query language substitutions: {} 
[0;39m[34m2013-10-24 07:32:34,295  INFO | main | org.hibernate.cfg.SettingsFactory                       | JPA-QL strict compliance: enabled 
[0;39m[34m2013-10-24 07:32:34,295  INFO | main | org.hibernate.cfg.SettingsFactory                       | Second-level cache: enabled 
[0;39m[34m2013-10-24 07:32:34,295  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query cache: disabled 
[0;39m[34m2013-10-24 07:32:34,295  INFO | main | org.hibernate.cfg.SettingsFactory                       | Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory 
[0;39m[34m2013-10-24 07:32:34,297  INFO | main | org.hibernate.cfg.SettingsFactory                       | Optimize cache for minimal puts: disabled 
[0;39m[34m2013-10-24 07:32:34,298  INFO | main | org.hibernate.cfg.SettingsFactory                       | Structured second-level cache entries: disabled 
[0;39m[34m2013-10-24 07:32:34,306  INFO | main | org.hibernate.cfg.SettingsFactory                       | Echoing all SQL to stdout 
[0;39m[34m2013-10-24 07:32:34,308  INFO | main | org.hibernate.cfg.SettingsFactory                       | Statistics: disabled 
[0;39m[34m2013-10-24 07:32:34,308  INFO | main | org.hibernate.cfg.SettingsFactory                       | Deleted entity synthetic identifier rollback: disabled 
[0;39m[34m2013-10-24 07:32:34,308  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default entity-mode: pojo 
[0;39m[34m2013-10-24 07:32:34,309  INFO | main | org.hibernate.cfg.SettingsFactory                       | Named query checking : enabled 
[0;39m[34m2013-10-24 07:32:34,309  INFO | main | org.hibernate.cfg.SettingsFactory                       | Check Nullability in Core (should be disabled when Bean Validation is on): disabled 
[0;39m[34m2013-10-24 07:32:34,344  INFO | main | org.hibernate.impl.SessionFactoryImpl                   | building session factory 
[0;39m[39m2013-10-24 07:32:34,349 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Statistics initialized [enabled=false]} 
[0;39m[39m2013-10-24 07:32:34,350 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:34,350 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:34,350 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:34,350 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16b4262 
[0;39m[39m2013-10-24 07:32:34,350 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@88cb7a 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@15fd27a 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:34,351 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:34,352 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:34,353 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:34,354 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc37f8 
[0;39m[39m2013-10-24 07:32:34,355 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cc45 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:34,356 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:34,357 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:34,357 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:34,357 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:34,357 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:34,357 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:34,358 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16dd1be 
[0;39m[39m2013-10-24 07:32:34,358 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@b7a9db 
[0;39m[39m2013-10-24 07:32:34,358 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:34,358 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:34,358 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:34,359 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:34,359 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:34,359 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:34,359 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@714de2 
[0;39m[39m2013-10-24 07:32:34,359 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:34,360 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:34,360 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:34,360 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:34,360 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:34,360 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:34,361 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@10364f2 
[0;39m[39m2013-10-24 07:32:34,361 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:34,361 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:34,361 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:34,361 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:34,362 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:34,362 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:34,362 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:34,362 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:34,362 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:34,362 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@1cf60d6 
[0;39m[39m2013-10-24 07:32:34,363 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:34,364 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:34,364 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@113ca40 
[0;39m[39m2013-10-24 07:32:34,365 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@433882 
[0;39m[39m2013-10-24 07:32:34,365 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@132f47b 
[0;39m[39m2013-10-24 07:32:34,365 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50c94a 
[0;39m[39m2013-10-24 07:32:34,365 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cf4dc0 
[0;39m[39m2013-10-24 07:32:34,365 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f99a01 
[0;39m[39m2013-10-24 07:32:34,365 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@edc05b 
[0;39m[39m2013-10-24 07:32:34,366 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@efd14f 
[0;39m[39m2013-10-24 07:32:34,366 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1f2d3b3 
[0;39m[34m2013-10-24 07:32:34,366  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [clob] overrides previous : org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:34,366 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f2d3b3 
[0;39m[34m2013-10-24 07:32:34,366  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:34,366 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b2a275 
[0;39m[34m2013-10-24 07:32:34,366  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:34,367 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1eff0ee 
[0;39m[34m2013-10-24 07:32:34,367  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [blob] overrides previous : org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:34,367 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1eff0ee 
[0;39m[34m2013-10-24 07:32:34,367  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:34,367 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@20588c 
[0;39m[34m2013-10-24 07:32:34,367  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:34,368 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2eea6c 
[0;39m[34m2013-10-24 07:32:34,368  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:34,368 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@128c736 
[0;39m[34m2013-10-24 07:32:34,368  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:34,368 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@c7bf95 
[0;39m[34m2013-10-24 07:32:34,368  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:34,370 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Session factory constructed with filter configurations : {} 
[0;39m[39m2013-10-24 07:32:34,370 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-7-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-7-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-7-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-7-oracle/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_21-b11, hibernate.connection.autocommit=true, user.name=paul, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/i386, classworlds.conf=/home/paul/dev/netbeans-7.3/java/maven/bin/m2.conf, java.version=1.7.0_21, user.timezone=Europe/Minsk, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper.,sun.beans., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-oracle/jre, java.vm.info=mixed mode, os.version=3.2.0-54-generic-pae, hibernate.transaction.factory_class=org.hibernate.ejb.transaction.JoinableCMTTransactionFactory, sun.font.fontmanager=sun.awt.X11FontManager, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.21-b01, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., hibernate.check_nullability=false, java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/paul, java.specification.vendor=Oracle Corporation, java.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/amd64:/usr/lib/jvm/java-7-oracle/jre/lib/i386::/usr/java/packages/lib/i386:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, common.loader=${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=/home/paul/dev/netbeans-7.3/java/maven, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher tomcat6:run-war, java.class.path=/home/paul/dev/netbeans-7.3/java/maven/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, catalina.home=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=i386, java.ext.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/paul/NetBeansProjects/submit-jpa/submit-jpa, line.separator=
, java.vm.name=Java HotSpot(TM) Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, hibernate.transaction.manager_lookup_class=org.hibernate.transaction.BTMTransactionManagerLookup, java.specification.version=1.7, hibernate.show_sql=true} 
[0;39m[39m2013-10-24 07:32:34,383 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:32:34,384 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:32:34,384 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:32:34,486 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Register 
[0;39m[39m2013-10-24 07:32:34,487 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id, op_id, user_id from registry.registers where id =? and op_id =? and user_id =? 
[0;39m[39m2013-10-24 07:32:34,487 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select register_.id, register_.op_id, register_.user_id, register_.record_time as record4_2_ from registry.registers register_ where register_.id=? and register_.op_id=? and register_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,487 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.registers (record_time, id, op_id, user_id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:34,487 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.registers set record_time=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:34,487 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.registers where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:34,494 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Op 
[0;39m[39m2013-10-24 07:32:34,494 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.ops where id =? 
[0;39m[39m2013-10-24 07:32:34,494 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select op_.id, op_.description as descript2_1_, op_.title as title1_ from registry.ops op_ where op_.id=? 
[0;39m[39m2013-10-24 07:32:34,494 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.ops (description, title, id) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:32:34,495 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.ops set description=?, title=? where id=? 
[0;39m[39m2013-10-24 07:32:34,495 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.ops where id=? 
[0;39m[39m2013-10-24 07:32:34,495 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.ops (description, title) values (?, ?) 
[0;39m[39m2013-10-24 07:32:34,499 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.User 
[0;39m[39m2013-10-24 07:32:34,500 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.users where id =? 
[0;39m[39m2013-10-24 07:32:34,500 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select user_.id, user_.email as email3_, user_.fullname as fullname3_, user_.job as job3_ from registry.users user_ where user_.id=? 
[0;39m[39m2013-10-24 07:32:34,500 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.users (email, fullname, job, id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:34,500 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.users set email=?, fullname=?, job=? where id=? 
[0;39m[39m2013-10-24 07:32:34,500 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.users where id=? 
[0;39m[39m2013-10-24 07:32:34,500 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.users (email, fullname, job) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:32:34,504 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Report 
[0;39m[39m2013-10-24 07:32:34,505 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from enterprise.reports where id =? 
[0;39m[39m2013-10-24 07:32:34,505 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select report_.id, report_.activity as activity0_, report_.endDate as endDate0_, report_.performer as performer0_, report_.startDate as startDate0_ from enterprise.reports report_ where report_.id=? 
[0;39m[39m2013-10-24 07:32:34,505 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into enterprise.reports (activity, endDate, performer, startDate, id) values (?, ?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:34,505 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update enterprise.reports set activity=?, endDate=?, performer=?, startDate=? where id=? 
[0;39m[39m2013-10-24 07:32:34,505 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from enterprise.reports where id=? 
[0;39m[39m2013-10-24 07:32:34,505 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into enterprise.reports (activity, endDate, performer, startDate) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:34,513 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:32:34,514 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set user_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:34,514 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set user_id=null where user_id=? and id=? and op_id=? 
[0;39m[39m2013-10-24 07:32:34,514 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set user_id=null where user_id=? 
[0;39m[39m2013-10-24 07:32:34,515 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:32:34,515 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set op_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:34,515 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set op_id=null where op_id=? and id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:34,516 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set op_id=null where op_id=? 
[0;39m[39m2013-10-24 07:32:34,541 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [NONE]: select register0_.id as id2_2_, register0_.op_id as op2_2_2_, register0_.user_id as user3_2_2_, register0_.record_time as record4_2_2_, op1_.id as id1_0_, op1_.description as descript2_1_0_, op1_.title as title1_0_, user2_.id as id3_1_, user2_.email as email3_1_, user2_.fullname as fullname3_1_, user2_.job as job3_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,541 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [READ]: select register0_.id as id2_2_, register0_.op_id as op2_2_2_, register0_.user_id as user3_2_2_, register0_.record_time as record4_2_2_, op1_.id as id1_0_, op1_.description as descript2_1_0_, op1_.title as title1_0_, user2_.id as id3_1_, user2_.email as email3_1_, user2_.fullname as fullname3_1_, user2_.job as job3_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,542 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE]: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:34,542 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE_NOWAIT]: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:34,542 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [FORCE]: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:34,542 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_READ]: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:34,543 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_WRITE]: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:34,543 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_FORCE_INCREMENT]: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:34,544 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC]: select register0_.id as id2_2_, register0_.op_id as op2_2_2_, register0_.user_id as user3_2_2_, register0_.record_time as record4_2_2_, op1_.id as id1_0_, op1_.description as descript2_1_0_, op1_.title as title1_0_, user2_.id as id3_1_, user2_.email as email3_1_, user2_.fullname as fullname3_1_, user2_.job as job3_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,544 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC_FORCE_INCREMENT]: select register0_.id as id2_2_, register0_.op_id as op2_2_2_, register0_.user_id as user3_2_2_, register0_.record_time as record4_2_2_, op1_.id as id1_0_, op1_.description as descript2_1_0_, op1_.title as title1_0_, user2_.id as id3_1_, user2_.email as email3_1_, user2_.fullname as fullname3_1_, user2_.job as job3_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,552 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Register: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,552 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Register: select register0_.id as id2_0_, register0_.op_id as op2_2_0_, register0_.user_id as user3_2_0_, register0_.record_time as record4_2_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,554 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [NONE]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:34,555 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [READ]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:34,555 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,555 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE_NOWAIT]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,556 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [FORCE]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,556 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_READ]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:34,556 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_WRITE]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,557 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_FORCE_INCREMENT]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,557 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:34,656 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC_FORCE_INCREMENT]: select op0_.id as id1_0_, op0_.description as descript2_1_0_, op0_.title as title1_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:34,658 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Op: select op0_.id as id1_1_, op0_.description as descript2_1_1_, op0_.title as title1_1_, registers1_.op_id as op2_1_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id2_0_, registers1_.op_id as op2_2_0_, registers1_.user_id as user3_2_0_, registers1_.record_time as record4_2_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:32:34,659 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Op: select op0_.id as id1_1_, op0_.description as descript2_1_1_, op0_.title as title1_1_, registers1_.op_id as op2_1_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id2_0_, registers1_.op_id as op2_2_0_, registers1_.user_id as user3_2_0_, registers1_.record_time as record4_2_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:32:34,659 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [NONE]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:34,660 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [READ]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:34,660 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,660 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE_NOWAIT]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,661 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [FORCE]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,661 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_READ]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:34,661 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_WRITE]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,662 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,662 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:34,663 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id3_0_, user0_.email as email3_0_, user0_.fullname as fullname3_0_, user0_.job as job3_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:34,663 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.User: select user0_.id as id3_1_, user0_.email as email3_1_, user0_.fullname as fullname3_1_, user0_.job as job3_1_, registers1_.user_id as user3_3_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id2_0_, registers1_.op_id as op2_2_0_, registers1_.user_id as user3_2_0_, registers1_.record_time as record4_2_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:32:34,664 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.User: select user0_.id as id3_1_, user0_.email as email3_1_, user0_.fullname as fullname3_1_, user0_.job as job3_1_, registers1_.user_id as user3_3_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id2_0_, registers1_.op_id as op2_2_0_, registers1_.user_id as user3_2_0_, registers1_.record_time as record4_2_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:32:34,664 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [NONE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:34,665 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [READ]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:34,665 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,666 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE_NOWAIT]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,666 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [FORCE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,668 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_READ]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:34,669 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_WRITE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,669 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_FORCE_INCREMENT]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:34,670 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:34,671 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC_FORCE_INCREMENT]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:34,671 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Report: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:34,672 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Report: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:34,676 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.User.registers: select registers0_.user_id as user3_3_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id2_1_, registers0_.op_id as op2_2_1_, registers0_.user_id as user3_2_1_, registers0_.record_time as record4_2_1_, op1_.id as id1_0_, op1_.description as descript2_1_0_, op1_.title as title1_0_ from registry.registers registers0_ inner join registry.ops op1_ on registers0_.op_id=op1_.id where registers0_.user_id=? 
[0;39m[39m2013-10-24 07:32:34,677 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.Op.registers: select registers0_.op_id as op2_1_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id2_1_, registers0_.op_id as op2_2_1_, registers0_.user_id as user3_2_1_, registers0_.record_time as record4_2_1_, user1_.id as id3_0_, user1_.email as email3_0_, user1_.fullname as fullname3_0_, user1_.job as job3_0_ from registry.registers registers0_ inner join registry.users user1_ on registers0_.user_id=user1_.id where registers0_.op_id=? 
[0;39m[39m2013-10-24 07:32:34,679 DEBUG | main | org.hibernate.impl.SessionFactoryObjectFactory          | initializing class SessionFactoryObjectFactory 
[0;39m[39m2013-10-24 07:32:34,681 DEBUG | main | org.hibernate.impl.SessionFactoryObjectFactory          | registered: ff942c94-6747-4499-9dcc-d308b13349e8 (unnamed) 
[0;39m[34m2013-10-24 07:32:34,681  INFO | main | org.hibernate.impl.SessionFactoryObjectFactory          | Not binding factory to JNDI, no JNDI name configured 
[0;39m[39m2013-10-24 07:32:34,681 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiated session factory 
[0;39m[39m2013-10-24 07:32:34,681 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | obtaining JTA TransactionManager 
[0;39m[39m2013-10-24 07:32:34,684 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 21 named HQL queries 
[0;39m[39m2013-10-24 07:32:34,684 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Op.findByTitle 
[0;39m[39m2013-10-24 07:32:34,744 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:32:34,802 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Op'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'title'
 
[0;39m[39m2013-10-24 07:32:34,802 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,843 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,869 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (o) -> op0_ 
[0;39m[39m2013-10-24 07:32:34,871 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:32:34,878 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:32:34,882 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : title -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:34,883 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o.title -> op0_.title 
[0;39m[39m2013-10-24 07:32:34,888 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,888 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} op0_.id ) ( FromClause{level=1} registry.ops op0_ ) ( where ( = ( op0_.title op0_.id title ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:34,903 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.ops op0_] 
[0;39m[39m2013-10-24 07:32:34,903 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,905 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'op0_.id as id1_' {alias=o, className=sp.model.Op, tableAlias=op0_}
    |  \-[SQL_TOKEN] SqlFragment: 'op0_.description as descript2_1_, op0_.title as title1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[op0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.ops op0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=registry.ops,tableAlias=op0_,origin=null,columns={,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'op0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=o.title,tableAlias=op0_,className=sp.model.Op,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'op0_.id' {alias=o, className=sp.model.Op, tableAlias=op0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=title, expectedType=org.hibernate.type.StringType@836465}
 
[0;39m[39m2013-10-24 07:32:34,906 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,949 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:32:34,950 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select op0_.id as id1_, op0_.description as descript2_1_, op0_.title as title1_ from registry.ops op0_ where op0_.title=? 
[0;39m[39m2013-10-24 07:32:34,950 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,968 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReports 
[0;39m[39m2013-10-24 07:32:34,969 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:34,975 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:32:34,976 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,976 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,977 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:34,978 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:34,980 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:34,980 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:34,980 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:32:34,982 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,982 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count report0_.id ) ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:34,983 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:34,984 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,985 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:34,985 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,986 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:34,986 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(report0_.id) as col_0_0_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:32:34,986 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,987 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByOp 
[0;39m[39m2013-10-24 07:32:34,988 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:34,998 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:34,998 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:34,999 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:34,999 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,000 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,000 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,001 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:35,005 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:35,006 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:35,006 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,007 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,007 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,007 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,008 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:35,008 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,008 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,009 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,009 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,009 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,010 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,010 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,011 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:32:35,012 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,012 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:35,013 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.op_id=? 
[0;39m[39m2013-10-24 07:32:35,013 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,013 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByIds 
[0;39m[39m2013-10-24 07:32:35,014 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:35,019 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:32:35,020 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,021 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,021 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,021 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,022 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,022 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,022 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,023 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,023 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:35,024 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,024 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,026 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:35,026 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,026 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:35,026 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:32:35,027 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,027 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPeriod 
[0;39m[39m2013-10-24 07:32:35,028 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:35,034 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'startDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:35,034 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,034 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,035 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,035 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,035 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,036 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:35,036 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:32:35,036 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,036 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:35,036 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:32:35,037 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,037 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( >= ( report0_.startDate report0_.id startDate ) ? ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:35,037 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,037 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,038 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e175f3}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e175f3}
 
[0;39m[39m2013-10-24 07:32:35,039 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,039 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:35,039 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:32:35,039 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,039 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getAllReports 
[0;39m[39m2013-10-24 07:32:35,040 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:35,042 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'r'
 
[0;39m[39m2013-10-24 07:32:35,042 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,043 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,043 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,044 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,044 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,044 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:32:35,044 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,044 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,045 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:32:35,045 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,045 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:35,046 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:32:35,046 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,046 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReport 
[0;39m[39m2013-10-24 07:32:35,047 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:32:35,050 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:32:35,050 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,051 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,051 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,051 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,051 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,051 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,052 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,052 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,052 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.id report0_.id id ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,052 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,053 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,053 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:35,053 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,054 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:32:35,054 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:35,054 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,054 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.find 
[0;39m[39m2013-10-24 07:32:35,055 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:32:35,061 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'op'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'op'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'user'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'user'
          \-[BETWEEN] Node: 'between'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'recordTime'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'startDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:35,061 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,062 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,062 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,062 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,063 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,063 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,063 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,063 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:35,063 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,063 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,064 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:35,064 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,064 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:35,064 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:35,065 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,066 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:35,066 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:32:35,066 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,066 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( and ( and ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:35,067 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,067 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,068 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  |  \-[IDENT] IdentNode: 'op' {originalText=op}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |     |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[BETWEEN] BetweenOperatorNode: 'between'
             +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
             +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@72597e}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@72597e}
 
[0;39m[39m2013-10-24 07:32:35,068 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,068 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:32:35,069 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_, register0_.record_time as record4_2_ from registry.registers register0_ where register0_.op_id=? and register0_.user_id=? and (register0_.record_time between ? and ?) 
[0;39m[39m2013-10-24 07:32:35,069 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,069 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countAll 
[0;39m[39m2013-10-24 07:32:35,070 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:32:35,073 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Register'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'r'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:35,073 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,073 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,074 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,074 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,074 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,074 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:35,075 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:35,075 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:35,075 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,075 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,075 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ) 
[0;39m[39m2013-10-24 07:32:35,075 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,076 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,076 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,076 DEBUG | main | org.hibernate.hql.ast.tree.QueryNode                    | getWhereClause() : Creating a new WHERE clause... 
[0;39m[39m2013-10-24 07:32:35,076 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,077 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[THETA_JOINS] SqlNode: '{theta joins}'
          \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
 
[0;39m[39m2013-10-24 07:32:35,077 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,077 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:32:35,077 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id 
[0;39m[39m2013-10-24 07:32:35,078 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,078 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByUser 
[0;39m[39m2013-10-24 07:32:35,078 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:35,083 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:32:35,083 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,084 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,084 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,084 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,218 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,218 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:35,218 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,218 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:35,218 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:35,218 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,219 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,219 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,219 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,220 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:32:35,220 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,220 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:35,220 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_, register0_.record_time as record4_2_ from registry.registers register0_ where register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:35,220 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,221 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getLastIdByUserAndOp 
[0;39m[39m2013-10-24 07:32:35,221 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:32:35,226 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'r'
    |        |  \-[IDENT] Node: 'id'
    |        \-[IDENT] Node: 'id'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 'r'
       |  |  \-[IDENT] Node: 'id'
       |  \-[IDENT] Node: 'id'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:32:35,226 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,226 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,226 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,226 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,227 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@11f6647 
[0;39m[39m2013-10-24 07:32:35,227 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:32:35,227 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:35,227 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,227 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:35,228 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,228 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@11f6647 
[0;39m[39m2013-10-24 07:32:35,229 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:32:35,229 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:35,229 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,229 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:35,229 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,229 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) desc ) ) 
[0;39m[39m2013-10-24 07:32:35,230 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,230 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,231 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:32:35,231 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,232 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:32:35,232 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as col_0_0_ from registry.registers register0_ order by register0_.id desc 
[0;39m[39m2013-10-24 07:32:35,232 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,232 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPerformer 
[0;39m[39m2013-10-24 07:32:35,233 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:32:35,236 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'performer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:32:35,237 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,237 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,237 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,237 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,238 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,238 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:35,238 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:32:35,238 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,238 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.performer report0_.id performer ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,239 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,239 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,240 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@836465}
 
[0;39m[39m2013-10-24 07:32:35,240 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,240 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:32:35,240 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.performer=? 
[0;39m[39m2013-10-24 07:32:35,241 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,241 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUserAndOp 
[0;39m[39m2013-10-24 07:32:35,241 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:32:35,247 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'user'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'user'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'op'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:35,248 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,248 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,249 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,249 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,249 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,249 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:35,250 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:35,250 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:35,250 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,250 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,251 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:35,251 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,251 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:35,251 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:35,252 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,252 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,252 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,252 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:35,252 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,253 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,253 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( and ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:35,254 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,254 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,254 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,254 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,255 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'op' {originalText=op}
             \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:32:35,256 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,256 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:32:35,256 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? and register0_.op_id=? 
[0;39m[39m2013-10-24 07:32:35,257 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,257 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUser 
[0;39m[39m2013-10-24 07:32:35,258 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:35,262 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:32:35,262 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,263 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,263 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,263 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,263 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,264 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:35,264 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:35,264 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:35,264 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,264 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,264 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:35,265 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,265 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:35,265 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:35,265 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,266 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,266 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,266 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,266 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:35,266 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,267 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:32:35,268 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,268 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:35,269 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:35,269 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,269 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReports 
[0;39m[39m2013-10-24 07:32:35,270 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:35,279 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'performer'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'performer'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'startDate'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:35,279 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,279 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,280 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,280 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,280 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,280 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:35,281 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:32:35,281 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,281 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:35,281 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:32:35,282 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,282 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:35,282 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:32:35,283 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,283 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( and ( = ( report0_.performer report0_.id performer ) ? ) ( >= ( report0_.startDate report0_.id startDate ) ? ) ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:35,283 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,284 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,285 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@836465}
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |     |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e175f3}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e175f3}
 
[0;39m[39m2013-10-24 07:32:35,285 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,285 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:35,286 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.performer=? and report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:32:35,286 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,286 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getAll 
[0;39m[39m2013-10-24 07:32:35,286 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:32:35,290 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'r'
       |  \-[IDENT] Node: 'recordTime'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:32:35,290 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,290 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,291 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,291 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,292 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,292 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:35,292 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:32:35,292 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,292 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) desc ) ) 
[0;39m[39m2013-10-24 07:32:35,293 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,293 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,293 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:32:35,294 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,294 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:32:35,294 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_, register0_.record_time as record4_2_ from registry.registers register0_ order by register0_.record_time desc 
[0;39m[39m2013-10-24 07:32:35,294 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,294 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.removeReport 
[0;39m[39m2013-10-24 07:32:35,296 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: delete from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:32:35,299 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'sp'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Report'
    |     \-[ALIAS] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:32:35,299 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,301 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete << begin [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:32:35,301 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,302 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> id 
[0;39m[39m2013-10-24 07:32:35,302 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,302 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> id 
[0;39m[39m2013-10-24 07:32:35,302 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete : finishing up [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:32:35,303 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete >> end [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:32:35,304 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (enterprise.reports)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:35,304 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,311 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,312 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.findByPeriod 
[0;39m[39m2013-10-24 07:32:35,313 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:32:35,318 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'recordTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'startDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:35,318 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,318 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,319 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,319 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,319 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,320 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:35,320 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:32:35,320 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,321 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,321 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,321 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,322 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@72597e}
          \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@72597e}
 
[0;39m[39m2013-10-24 07:32:35,323 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,323 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:32:35,323 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_, register0_.record_time as record4_2_ from registry.registers register0_ where register0_.record_time between ? and ? 
[0;39m[39m2013-10-24 07:32:35,323 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,324 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByOp 
[0;39m[39m2013-10-24 07:32:35,324 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:35,329 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:35,329 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,330 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,330 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:35,330 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,331 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:35,331 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:35,331 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:35,332 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:35,332 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:35,332 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,332 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,333 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:35,334 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,334 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:32:35,334 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,334 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:35,335 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id2_, register0_.op_id as op2_2_, register0_.user_id as user3_2_, register0_.record_time as record4_2_ from registry.registers register0_ where register0_.op_id=? 
[0;39m[39m2013-10-24 07:32:35,335 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,335 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: User.findByFullname 
[0;39m[39m2013-10-24 07:32:35,335 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:32:35,338 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'fullname'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fullname'
 
[0;39m[39m2013-10-24 07:32:35,339 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,339 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,339 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.User (u) -> user0_ 
[0;39m[39m2013-10-24 07:32:35,339 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:32:35,339 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:32:35,339 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : fullname -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:35,340 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u.fullname -> user0_.fullname 
[0;39m[39m2013-10-24 07:32:35,340 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,340 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} registry.users user0_ ) ( where ( = ( user0_.fullname user0_.id fullname ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:35,340 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.users user0_] 
[0;39m[39m2013-10-24 07:32:35,340 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,341 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id3_' {alias=u, className=sp.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email3_, user0_.fullname as fullname3_, user0_.job as job3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=registry.users,tableAlias=user0_,origin=null,columns={,className=sp.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.fullname' {propertyName=fullname,dereferenceType=ALL,propertyPath=fullname,path=u.fullname,tableAlias=user0_,className=sp.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=sp.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'fullname' {originalText=fullname}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fullname, expectedType=org.hibernate.type.StringType@836465}
 
[0;39m[39m2013-10-24 07:32:35,341 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,341 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:32:35,341 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select user0_.id as id3_, user0_.email as email3_, user0_.fullname as fullname3_, user0_.job as job3_ from registry.users user0_ where user0_.fullname=? 
[0;39m[39m2013-10-24 07:32:35,341 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,342 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getPerformers 
[0;39m[39m2013-10-24 07:32:35,342 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:35,345 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'r'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:32:35,345 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,345 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,345 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:35,345 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:35,345 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:35,346 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:32:35,346 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,346 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} distinct ( report0_.performer report0_.id performer ) ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:32:35,346 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:35,346 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:35,347 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
    |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:32:35,347 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,347 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:35,347 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select distinct report0_.performer as col_0_0_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:32:35,347 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:35,347 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 0 named SQL queries 
[0;39m[1;31m2013-10-24 07:32:35,377 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.Register_#recordTime 
[0;39m[1;31m2013-10-24 07:32:35,390 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.User_#fullname 
[0;39m[39m2013-10-24 07:32:35,465 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | building XA pool for jdbc/registryDS with 4 connection(s) 
[0;39m[39m2013-10-24 07:32:35,465 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'user' to 'netbeans' 
[0;39m[39m2013-10-24 07:32:35,465 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'url' to 'jdbc:mysql://localhost:3306/registry?autoReconnect=true&characterEncoding=utf8' 
[0;39m[39m2013-10-24 07:32:35,466 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'password' to 'netbeans' 
[0;39m[39m2013-10-24 07:32:35,466 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'databaseName' to 'registry' 
[0;39m[39m2013-10-24 07:32:35,521 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:35,521 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:35,584 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:35,585 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:35,667 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:35,667 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:35,678 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:32:35,678 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:32:35,679 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:31:10 FET 1970 
[0;39m[39m2013-10-24 07:32:35,679 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:35,679 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:31:10 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:32:35,679 DEBUG | main | bitronix.tm.resource.ResourceRegistrar                  | transaction manager is running, recovering resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:32:35,681 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | start of incremental recovery on resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:32:35,681 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:35,681 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:32:35,681 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:35,682 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,682 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,682 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,682 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,682 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:32:35,682 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,683 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,683 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,683 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:32:35,684 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f with XID null 
[0;39m[39m2013-10-24 07:32:35,684 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:32:35,684 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f with XID null 
[0;39m[39m2013-10-24 07:32:35,684 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | 0 dangling transaction(s) found on resource 
[0;39m[39m2013-10-24 07:32:35,684 DEBUG | main | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:32:35,684 DEBUG | main | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:32:35,685 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | 0 dangling transaction(s) found in journal 
[0;39m[34m2013-10-24 07:32:35,685  INFO | main | bitronix.tm.recovery.IncrementalRecoverer               | incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [jdbc/registryDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:32:35,685 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@173865d 
[0;39m[39m2013-10-24 07:32:35,685 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@17a6436 
[0;39m[39m2013-10-24 07:32:35,685 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,685 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f from null 
[0;39m[39m2013-10-24 07:32:35,685 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f from null 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,686 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@17a6436 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:35,687 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | end of incremental recovery on resource jdbc/registryDS 
[0;39m[34m2013-10-24 07:32:35,715  INFO | main | o.s.orm.jpa.LocalContainerEntityManagerFactoryBean      | Building JPA container EntityManagerFactory for persistence unit 'registryPU' 
[0;39m[39m2013-10-24 07:32:35,716 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:35,716 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:35,716 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:35,717 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16b4262 
[0;39m[39m2013-10-24 07:32:35,717 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@88cb7a 
[0;39m[39m2013-10-24 07:32:35,717 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@15fd27a 
[0;39m[39m2013-10-24 07:32:35,717 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:35,718 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:35,718 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:35,718 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:35,718 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:35,719 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:35,719 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:35,719 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:35,719 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:35,720 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:35,720 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:35,720 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:35,720 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,721 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,721 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:35,721 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:35,722 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:35,722 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:35,722 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:35,722 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:35,723 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:35,723 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:35,723 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:35,724 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:35,724 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:35,725 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:35,725 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:35,725 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:35,726 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:35,726 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:35,726 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:35,726 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:35,727 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:35,727 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:35,727 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:35,727 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:35,728 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc37f8 
[0;39m[39m2013-10-24 07:32:35,728 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:35,728 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:35,729 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:35,729 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cc45 
[0;39m[39m2013-10-24 07:32:35,734 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:35,734 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:35,735 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:35,735 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:35,735 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:35,736 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:35,736 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:35,736 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:35,736 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:35,737 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:35,737 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16dd1be 
[0;39m[39m2013-10-24 07:32:35,737 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@b7a9db 
[0;39m[39m2013-10-24 07:32:35,738 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:35,738 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:35,738 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:35,738 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:35,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:35,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:35,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@714de2 
[0;39m[39m2013-10-24 07:32:35,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:35,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:35,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:35,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:35,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:35,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:35,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@10364f2 
[0;39m[39m2013-10-24 07:32:35,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:35,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:35,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:35,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:35,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:35,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:35,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:35,743 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:35,743 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:35,743 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@1cf60d6 
[0;39m[39m2013-10-24 07:32:35,743 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:35,744 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:35,744 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4932b5 
[0;39m[39m2013-10-24 07:32:35,744 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a01274 
[0;39m[39m2013-10-24 07:32:35,745 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b7f88 
[0;39m[39m2013-10-24 07:32:35,745 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@151bacc 
[0;39m[39m2013-10-24 07:32:35,745 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bed5ea 
[0;39m[39m2013-10-24 07:32:35,745 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ce2016 
[0;39m[39m2013-10-24 07:32:35,745 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9cbd2f 
[0;39m[39m2013-10-24 07:32:35,746 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48685c 
[0;39m[39m2013-10-24 07:32:35,746 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator] 
[0;39m[39m2013-10-24 07:32:35,746 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator] 
[0;39m[39m2013-10-24 07:32:35,747 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:32:35,747 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:32:35,747 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator] 
[0;39m[39m2013-10-24 07:32:35,747 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned] 
[0;39m[39m2013-10-24 07:32:35,747 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator] 
[0;39m[39m2013-10-24 07:32:35,748 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator] 
[0;39m[39m2013-10-24 07:32:35,748 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator] 
[0;39m[39m2013-10-24 07:32:35,748 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator] 
[0;39m[39m2013-10-24 07:32:35,748 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator] 
[0;39m[39m2013-10-24 07:32:35,749 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator] 
[0;39m[39m2013-10-24 07:32:35,749 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator] 
[0;39m[39m2013-10-24 07:32:35,749 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator] 
[0;39m[39m2013-10-24 07:32:35,749 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator] 
[0;39m[39m2013-10-24 07:32:35,750 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Processing PersistenceUnitInfo [
	name: registryPU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: /solr
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat6-maven-plugin:2.1, parent: sun.misc.Launcher$AppClassLoader@1644028]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1bb9309
	excludeUnlistedClasses: true
	JTA datasource: a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available)
	Non JTA datasource: null
	Transaction type: JTA
	PU root URL: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sp.model.Op
		sp.model.Register
		sp.model.User]
	Mapping files names []
	Properties [
		hibernate.archive.autodetection: class] 
[0;39m[39m2013-10-24 07:32:35,750 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:32:35,751 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:32:35,751 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Searching mapped entities in jar/par: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes 
[0;39m[39m2013-10-24 07:32:35,753 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.ReportsException 
[0;39m[39m2013-10-24 07:32:35,754 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.SpException 
[0;39m[39m2013-10-24 07:32:35,754 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepository 
[0;39m[39m2013-10-24 07:32:35,755 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepository 
[0;39m[39m2013-10-24 07:32:35,756 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepositoryImpl 
[0;39m[39m2013-10-24 07:32:35,757 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepositoryImpl 
[0;39m[39m2013-10-24 07:32:35,758 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepository 
[0;39m[39m2013-10-24 07:32:35,758 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepositoryImpl 
[0;39m[39m2013-10-24 07:32:35,759 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepository 
[0;39m[39m2013-10-24 07:32:35,760 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepositoryImpl 
[0;39m[39m2013-10-24 07:32:35,760 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepositoryImpl 
[0;39m[39m2013-10-24 07:32:35,761 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepository 
[0;39m[39m2013-10-24 07:32:35,762 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepository 
[0;39m[39m2013-10-24 07:32:35,762 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepositoryImpl 
[0;39m[39m2013-10-24 07:32:35,763 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.system.SystemConstants 
[0;39m[39m2013-10-24 07:32:35,764 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpServiceImpl 
[0;39m[39m2013-10-24 07:32:35,765 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrService 
[0;39m[39m2013-10-24 07:32:35,766 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ReportRESTFacade 
[0;39m[39m2013-10-24 07:32:35,766 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ApplicationConfig 
[0;39m[39m2013-10-24 07:32:35,767 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryService 
[0;39m[39m2013-10-24 07:32:35,768 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailServiceImpl 
[0;39m[39m2013-10-24 07:32:35,769 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryServiceImpl 
[0;39m[39m2013-10-24 07:32:35,770 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailService 
[0;39m[39m2013-10-24 07:32:35,770 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrServiceImpl 
[0;39m[39m2013-10-24 07:32:35,771 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportServiceImpl 
[0;39m[39m2013-10-24 07:32:35,773 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestService 
[0;39m[39m2013-10-24 07:32:35,774 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportService 
[0;39m[39m2013-10-24 07:32:35,774 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestServiceImpl 
[0;39m[39m2013-10-24 07:32:35,775 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserServiceImpl 
[0;39m[39m2013-10-24 07:32:35,776 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserService 
[0;39m[39m2013-10-24 07:32:35,777 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpService 
[0;39m[39m2013-10-24 07:32:35,778 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op_ 
[0;39m[39m2013-10-24 07:32:35,778 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report 
[0;39m[39m2013-10-24 07:32:35,780 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Report 
[0;39m[39m2013-10-24 07:32:35,782 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User 
[0;39m[39m2013-10-24 07:32:35,782 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.User 
[0;39m[39m2013-10-24 07:32:35,783 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.AjaxResponse 
[0;39m[39m2013-10-24 07:32:35,783 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ErrorDetails 
[0;39m[39m2013-10-24 07:32:35,784 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Tuple 
[0;39m[39m2013-10-24 07:32:35,784 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Prompt 
[0;39m[39m2013-10-24 07:32:35,785 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ResultPager 
[0;39m[39m2013-10-24 07:32:35,785 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Statistics 
[0;39m[39m2013-10-24 07:32:35,786 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register 
[0;39m[39m2013-10-24 07:32:35,786 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Register 
[0;39m[39m2013-10-24 07:32:35,787 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.RegisterId 
[0;39m[39m2013-10-24 07:32:35,787 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.RegisterId 
[0;39m[39m2013-10-24 07:32:35,787 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op 
[0;39m[39m2013-10-24 07:32:35,788 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Op 
[0;39m[39m2013-10-24 07:32:35,788 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchable 
[0;39m[39m2013-10-24 07:32:35,788 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchableField 
[0;39m[39m2013-10-24 07:32:35,789 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report_ 
[0;39m[39m2013-10-24 07:32:35,789 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState$GenericStateHolder 
[0;39m[39m2013-10-24 07:32:35,789 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.BackendState 
[0;39m[39m2013-10-24 07:32:35,790 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.FrontendState 
[0;39m[39m2013-10-24 07:32:35,790 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.State 
[0;39m[39m2013-10-24 07:32:35,790 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState 
[0;39m[39m2013-10-24 07:32:35,791 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User_ 
[0;39m[39m2013-10-24 07:32:35,791 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register_ 
[0;39m[39m2013-10-24 07:32:35,792 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatisticsGenerator 
[0;39m[39m2013-10-24 07:32:35,792 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory$DateFormatSymbolsRu 
[0;39m[39m2013-10-24 07:32:35,792 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpHasher 
[0;39m[39m2013-10-24 07:32:35,793 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBuilder 
[0;39m[39m2013-10-24 07:32:35,793 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpContextLoaderListener 
[0;39m[39m2013-10-24 07:32:35,793 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLightPager 
[0;39m[39m2013-10-24 07:32:35,794 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ValidationBootstrap 
[0;39m[39m2013-10-24 07:32:35,794 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ReportDateEditor 
[0;39m[39m2013-10-24 07:32:35,794 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatsITextPdfBuilder 
[0;39m[39m2013-10-24 07:32:35,795 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBoxPdfBuilder 
[0;39m[39m2013-10-24 07:32:35,796 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpSortDefinition 
[0;39m[39m2013-10-24 07:32:35,827 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertiesReloader 
[0;39m[39m2013-10-24 07:32:35,828 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.SpStaticBeanInjector 
[0;39m[39m2013-10-24 07:32:35,829 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.Reloader 
[0;39m[39m2013-10-24 07:32:35,829 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertyService 
[0;39m[39m2013-10-24 07:32:35,830 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.EncodingPostProcessor 
[0;39m[39m2013-10-24 07:32:35,833 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory 
[0;39m[39m2013-10-24 07:32:35,834 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPageable 
[0;39m[39m2013-10-24 07:32:35,835 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLazyPager 
[0;39m[39m2013-10-24 07:32:35,836 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPagedListHolder 
[0;39m[39m2013-10-24 07:32:35,837 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPopulateDb 
[0;39m[39m2013-10-24 07:32:35,838 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ManagerUtil 
[0;39m[39m2013-10-24 07:32:35,839 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateTool 
[0;39m[39m2013-10-24 07:32:35,840 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AdminController 
[0;39m[39m2013-10-24 07:32:35,841 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ChecklistController 
[0;39m[39m2013-10-24 07:32:35,843 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ForwardController 
[0;39m[39m2013-10-24 07:32:35,843 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.HomeController 
[0;39m[39m2013-10-24 07:32:35,844 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ErrorController 
[0;39m[39m2013-10-24 07:32:35,845 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController 
[0;39m[39m2013-10-24 07:32:35,846 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SuggestController 
[0;39m[39m2013-10-24 07:32:35,848 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.EmailController 
[0;39m[39m2013-10-24 07:32:35,849 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.RegistryController 
[0;39m[39m2013-10-24 07:32:35,850 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SolrSuggestController 
[0;39m[39m2013-10-24 07:32:35,851 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.LoginController 
[0;39m[39m2013-10-24 07:32:35,852 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController$1 
[0;39m[39m2013-10-24 07:32:35,852 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ReportController 
[0;39m[39m2013-10-24 07:32:35,854 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig 
[0;39m[39m2013-10-24 07:32:35,855 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.BitronixJtaConfig 
[0;39m[39m2013-10-24 07:32:35,856 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig$1 
[0;39m[39m2013-10-24 07:32:35,860 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.interceptor.UserInterceptor 
[0;39m[39m2013-10-24 07:32:35,861 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReportConstraintValidator 
[0;39m[39m2013-10-24 07:32:35,862 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.SystemPropertyValidator 
[0;39m[39m2013-10-24 07:32:35,862 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReport 
[0;39m[39m2013-10-24 07:32:35,863 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDate 
[0;39m[39m2013-10-24 07:32:35,863 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDateConstraintValidator 
[0;39m[39m2013-10-24 07:32:35,864 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.security.ReportsPermissionEvaluator 
[0;39m[39m2013-10-24 07:32:35,865 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSuggester 
[0;39m[39m2013-10-24 07:32:35,865 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSearcher 
[0;39m[39m2013-10-24 07:32:35,865 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.Index 
[0;39m[39m2013-10-24 07:32:35,866 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndex 
[0;39m[39m2013-10-24 07:32:35,866 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexCreator 
[0;39m[39m2013-10-24 07:32:35,867 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexCreator 
[0;39m[39m2013-10-24 07:32:35,868 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexSearcher 
[0;39m[39m2013-10-24 07:32:35,870 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:32:35,870 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[34m2013-10-24 07:32:35,871  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Op 
[0;39m[34m2013-10-24 07:32:35,871  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Op.findByTitle => select o from Op o where o.title = :title 
[0;39m[39m2013-10-24 07:32:35,871 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:35,872 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Op 
[0;39m[34m2013-10-24 07:32:35,872  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Op on table ops 
[0;39m[39m2013-10-24 07:32:35,874 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:32:35,874 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:35,875 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:35,875 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:35,875 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=description, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,876 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property description with lazy=false 
[0;39m[39m2013-10-24 07:32:35,876 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for description 
[0;39m[39m2013-10-24 07:32:35,876 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property description 
[0;39m[39m2013-10-24 07:32:35,876 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:32:35,876 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,877 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,877 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,877 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,878 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:32:35,878 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:32:35,878 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:32:35,878 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:32:35,878 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[39m2013-10-24 07:32:35,879 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=title, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,879 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property title with lazy=false 
[0;39m[39m2013-10-24 07:32:35,879 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for title 
[0;39m[39m2013-10-24 07:32:35,879 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property title 
[0;39m[34m2013-10-24 07:32:35,880  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Register 
[0;39m[34m2013-10-24 07:32:35,880  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.find => select r from Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[34m2013-10-24 07:32:35,880  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.findByPeriod => select r from Register r where r.recordTime between :startDate and :endDate 
[0;39m[34m2013-10-24 07:32:35,881  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByOp => select r from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:32:35,881  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByUser => select r from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:32:35,881  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getAll => select r from Register r order by r.recordTime desc 
[0;39m[34m2013-10-24 07:32:35,881  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countAll => select count(r.op) from Register r 
[0;39m[34m2013-10-24 07:32:35,881  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByOp => select count(r.op) from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:32:35,882  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUser => select count(r.op) from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:32:35,882  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUserAndOp => select count(r.op) from Register r where r.user = :user and r.op = :op 
[0;39m[34m2013-10-24 07:32:35,882  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getLastIdByUserAndOp => select r.id.id from Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:32:35,882 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:35,883 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Register 
[0;39m[34m2013-10-24 07:32:35,883  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Register on table registers 
[0;39m[39m2013-10-24 07:32:35,885 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,886 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property id 
[0;39m[39m2013-10-24 07:32:35,887 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,887 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:35,888 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:35,888 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:35,888 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property opId 
[0;39m[39m2013-10-24 07:32:35,888 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,889 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property opId with lazy=false 
[0;39m[39m2013-10-24 07:32:35,889 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for opId 
[0;39m[39m2013-10-24 07:32:35,889 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property opId 
[0;39m[39m2013-10-24 07:32:35,889 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property userId 
[0;39m[39m2013-10-24 07:32:35,890 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,890 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property userId with lazy=false 
[0;39m[39m2013-10-24 07:32:35,890 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for userId 
[0;39m[39m2013-10-24 07:32:35,890 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property userId 
[0;39m[39m2013-10-24 07:32:35,891 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:35,891 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='op_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:32:35,891 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,892 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property op 
[0;39m[39m2013-10-24 07:32:35,892 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=record_time, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,892 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property recordTime with lazy=false 
[0;39m[39m2013-10-24 07:32:35,893 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for recordTime 
[0;39m[39m2013-10-24 07:32:35,893 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property recordTime 
[0;39m[39m2013-10-24 07:32:35,893 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:32:35,893 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,894 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property user 
[0;39m[34m2013-10-24 07:32:35,894  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.User 
[0;39m[34m2013-10-24 07:32:35,894  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: User.findByFullname => select u from User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:32:35,894 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:35,895 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name User 
[0;39m[34m2013-10-24 07:32:35,895  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.User on table users 
[0;39m[39m2013-10-24 07:32:35,897 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:32:35,898 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:35,898 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:35,899 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:35,899 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=email, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,899 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property email with lazy=false 
[0;39m[39m2013-10-24 07:32:35,900 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for email 
[0;39m[39m2013-10-24 07:32:35,900 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property email 
[0;39m[39m2013-10-24 07:32:35,900 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=fullname, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,901 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property fullname with lazy=false 
[0;39m[39m2013-10-24 07:32:35,901 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for fullname 
[0;39m[39m2013-10-24 07:32:35,901 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property fullname 
[0;39m[39m2013-10-24 07:32:35,901 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=job, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,902 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property job with lazy=false 
[0;39m[39m2013-10-24 07:32:35,903 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for job 
[0;39m[39m2013-10-24 07:32:35,903 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property job 
[0;39m[39m2013-10-24 07:32:35,904 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:32:35,904 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,919 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,919 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,920 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,923 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:32:35,923 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:32:35,924 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:32:35,924 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.User.registers 
[0;39m[39m2013-10-24 07:32:35,924 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[34m2013-10-24 07:32:35,924  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Report 
[0;39m[34m2013-10-24 07:32:35,929  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getPerformers => select distinct r.performer from Report r 
[0;39m[34m2013-10-24 07:32:35,929  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPerformer => select r from Report r where r.performer = :performer 
[0;39m[34m2013-10-24 07:32:35,929  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReports => select r from Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:32:35,929  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPeriod => select r from Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:32:35,930  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByIds => select r from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:32:35,930  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReport => select r from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:32:35,930  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReports => select count(r) from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:32:35,930  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.removeReport => delete from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:32:35,939  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getAllReports => select r from Report r 
[0;39m[39m2013-10-24 07:32:35,940 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:32:35,940 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Report 
[0;39m[34m2013-10-24 07:32:35,940  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Report on table reports 
[0;39m[39m2013-10-24 07:32:35,948 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:32:35,949 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:32:35,949 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:32:35,949 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:32:35,949 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=activity, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,950 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property activity with lazy=false 
[0;39m[39m2013-10-24 07:32:35,950 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for activity 
[0;39m[39m2013-10-24 07:32:35,950 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property activity 
[0;39m[39m2013-10-24 07:32:35,950 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=endDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,951 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property endDate with lazy=false 
[0;39m[39m2013-10-24 07:32:35,951 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for endDate 
[0;39m[39m2013-10-24 07:32:35,951 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property endDate 
[0;39m[39m2013-10-24 07:32:35,951 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=performer, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,952 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property performer with lazy=false 
[0;39m[39m2013-10-24 07:32:35,952 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for performer 
[0;39m[39m2013-10-24 07:32:35,952 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property performer 
[0;39m[39m2013-10-24 07:32:35,955 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=startDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:32:35,956 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property startDate with lazy=false 
[0;39m[39m2013-10-24 07:32:35,956 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for startDate 
[0;39m[39m2013-10-24 07:32:35,956 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property startDate 
[0;39m[39m2013-10-24 07:32:35,957 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:35,957 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for description 
[0;39m[39m2013-10-24 07:32:35,957 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for title 
[0;39m[39m2013-10-24 07:32:35,957 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:35,957 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for opId 
[0;39m[39m2013-10-24 07:32:35,958 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for userId 
[0;39m[39m2013-10-24 07:32:35,958 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for recordTime 
[0;39m[39m2013-10-24 07:32:35,958 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:35,958 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for email 
[0;39m[39m2013-10-24 07:32:35,958 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for fullname 
[0;39m[39m2013-10-24 07:32:35,959 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for job 
[0;39m[39m2013-10-24 07:32:35,959 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:32:35,959 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for activity 
[0;39m[39m2013-10-24 07:32:35,959 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for endDate 
[0;39m[39m2013-10-24 07:32:35,959 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for performer 
[0;39m[39m2013-10-24 07:32:35,959 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for startDate 
[0;39m[39m2013-10-24 07:32:35,960 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:32:35,960 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:35,960 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:35,960 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:32:35,961 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:32:35,961 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.Op.registers through a foreign key 
[0;39m[34m2013-10-24 07:32:35,961  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.Op.registers -> registers 
[0;39m[39m2013-10-24 07:32:35,961 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.op 
[0;39m[39m2013-10-24 07:32:35,962 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: op_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:32:35,962 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:32:35,962 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.User.registers through a foreign key 
[0;39m[34m2013-10-24 07:32:35,962  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.User.registers -> registers 
[0;39m[39m2013-10-24 07:32:35,962 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.user 
[0;39m[39m2013-10-24 07:32:35,963 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: user_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:32:35,963 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:32:35,963 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:32:35,963 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:32:35,963 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:32:35,963 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[34m2013-10-24 07:32:35,965  INFO | main | org.hibernate.cfg.Configuration                         | Hibernate Validator not found: ignoring 
[0;39m[39m2013-10-24 07:32:36,000 DEBUG | main | org.hibernate.ejb.util.NamingHelper                     | No JNDI name configured for binding Ejb3Configuration 
[0;39m[39m2013-10-24 07:32:36,000 DEBUG | main | org.hibernate.cfg.Configuration                         | Preparing to build session factory with filters : {} 
[0;39m[39m2013-10-24 07:32:36,000 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:32:36,001 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[39m2013-10-24 07:32:36,001 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:32:36,001 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:36,001 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:32:36,001 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:32:36,001 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:32:36,002 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:32:36,002 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:32:36,002 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:32:36,002 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[39m2013-10-24 07:32:36,045 DEBUG | main | org.hibernate.cfg.Configuration                         | Legacy Validator not present in classpath, ignoring event listener registration 
[0;39m[39m2013-10-24 07:32:36,052 DEBUG | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Search not present in classpath, ignoring event listener registration. 
[0;39m[34m2013-10-24 07:32:36,053  INFO | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled. 
[0;39m[34m2013-10-24 07:32:36,054  INFO | main | org.hibernate.connection.ConnectionProviderFactory      | Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider 
[0;39m[34m2013-10-24 07:32:36,054  INFO | main | o.h.ejb.connection.InjectedDataSourceConnectionProvider | Using provided datasource 
[0;39m[39m2013-10-24 07:32:36,055 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:36,055 DEBUG | main | bitronix.tm.resource.common.XAPool                      | trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:36,055 DEBUG | main | bitronix.tm.resource.common.XAPool                      | no current transaction, no connection can be in state NOT_ACCESSIBLE when there is no global transaction context 
[0;39m[39m2013-10-24 07:32:36,055 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:36,055 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:32:36,056 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:36,056 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,056 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,056 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,057 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,057 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:32:36,057 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,058 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,058 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,058 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (3 still available) 
[0;39m[34m2013-10-24 07:32:36,059  INFO | main | org.hibernate.dialect.Dialect                           | Using dialect: org.hibernate.dialect.MySQL5Dialect 
[0;39m[34m2013-10-24 07:32:36,060  INFO | main | org.hibernate.cfg.SettingsFactory                       | Database ->
       name : MySQL
    version : 5.5.32-0ubuntu0.12.04.1
      major : 5
      minor : 5 
[0;39m[34m2013-10-24 07:32:36,060  INFO | main | org.hibernate.cfg.SettingsFactory                       | Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1 
[0;39m[39m2013-10-24 07:32:36,061 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@17a6436 
[0;39m[39m2013-10-24 07:32:36,061 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,061 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f from null 
[0;39m[39m2013-10-24 07:32:36,062 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,062 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f from null 
[0;39m[39m2013-10-24 07:32:36,062 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,063 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,063 DEBUG | main | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,063 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,064 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,064 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:32:36,065 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@17a6436 
[0;39m[39m2013-10-24 07:32:36,065 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,065 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[39m2013-10-24 07:32:36,066 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:32:36,066 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:32:36,066 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d127f 
[0;39m[34m2013-10-24 07:32:36,067  INFO | main | org.hibernate.transaction.TransactionFactoryFactory     | Transaction strategy: org.hibernate.ejb.transaction.JoinableCMTTransactionFactory 
[0;39m[34m2013-10-24 07:32:36,067  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiating TransactionManagerLookup: org.hibernate.transaction.BTMTransactionManagerLookup 
[0;39m[34m2013-10-24 07:32:36,068  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiated TransactionManagerLookup 
[0;39m[34m2013-10-24 07:32:36,068  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic flush during beforeCompletion(): disabled 
[0;39m[34m2013-10-24 07:32:36,069  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic session close at end of transaction: disabled 
[0;39m[34m2013-10-24 07:32:36,069  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch size: 15 
[0;39m[34m2013-10-24 07:32:36,069  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch updates for versioned data: disabled 
[0;39m[34m2013-10-24 07:32:36,069  INFO | main | org.hibernate.cfg.SettingsFactory                       | Scrollable result sets: enabled 
[0;39m[39m2013-10-24 07:32:36,069 DEBUG | main | org.hibernate.cfg.SettingsFactory                       | Wrap result sets: disabled 
[0;39m[34m2013-10-24 07:32:36,070  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC3 getGeneratedKeys(): enabled 
[0;39m[34m2013-10-24 07:32:36,070  INFO | main | org.hibernate.cfg.SettingsFactory                       | Connection release mode: auto 
[0;39m[34m2013-10-24 07:32:36,070  INFO | main | org.hibernate.cfg.SettingsFactory                       | Maximum outer join fetch depth: 2 
[0;39m[34m2013-10-24 07:32:36,070  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default batch fetch size: 1 
[0;39m[34m2013-10-24 07:32:36,070  INFO | main | org.hibernate.cfg.SettingsFactory                       | Generate SQL with comments: disabled 
[0;39m[34m2013-10-24 07:32:36,071  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL updates by primary key: disabled 
[0;39m[34m2013-10-24 07:32:36,071  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL inserts for batching: disabled 
[0;39m[34m2013-10-24 07:32:36,071  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:32:36,071  INFO | main | org.hibernate.hql.ast.ASTQueryTranslatorFactory         | Using ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:32:36,072  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query language substitutions: {} 
[0;39m[34m2013-10-24 07:32:36,072  INFO | main | org.hibernate.cfg.SettingsFactory                       | JPA-QL strict compliance: enabled 
[0;39m[34m2013-10-24 07:32:36,072  INFO | main | org.hibernate.cfg.SettingsFactory                       | Second-level cache: enabled 
[0;39m[34m2013-10-24 07:32:36,072  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query cache: disabled 
[0;39m[34m2013-10-24 07:32:36,072  INFO | main | org.hibernate.cfg.SettingsFactory                       | Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory 
[0;39m[34m2013-10-24 07:32:36,073  INFO | main | org.hibernate.cfg.SettingsFactory                       | Optimize cache for minimal puts: disabled 
[0;39m[34m2013-10-24 07:32:36,073  INFO | main | org.hibernate.cfg.SettingsFactory                       | Structured second-level cache entries: disabled 
[0;39m[34m2013-10-24 07:32:36,073  INFO | main | org.hibernate.cfg.SettingsFactory                       | Echoing all SQL to stdout 
[0;39m[34m2013-10-24 07:32:36,073  INFO | main | org.hibernate.cfg.SettingsFactory                       | Statistics: disabled 
[0;39m[34m2013-10-24 07:32:36,074  INFO | main | org.hibernate.cfg.SettingsFactory                       | Deleted entity synthetic identifier rollback: disabled 
[0;39m[34m2013-10-24 07:32:36,074  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default entity-mode: pojo 
[0;39m[34m2013-10-24 07:32:36,074  INFO | main | org.hibernate.cfg.SettingsFactory                       | Named query checking : enabled 
[0;39m[34m2013-10-24 07:32:36,074  INFO | main | org.hibernate.cfg.SettingsFactory                       | Check Nullability in Core (should be disabled when Bean Validation is on): disabled 
[0;39m[34m2013-10-24 07:32:36,086  INFO | main | org.hibernate.impl.SessionFactoryImpl                   | building session factory 
[0;39m[39m2013-10-24 07:32:36,087 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Statistics initialized [enabled=false]} 
[0;39m[39m2013-10-24 07:32:36,087 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:36,087 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:36,088 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15522e6 
[0;39m[39m2013-10-24 07:32:36,088 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16b4262 
[0;39m[39m2013-10-24 07:32:36,088 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@88cb7a 
[0;39m[39m2013-10-24 07:32:36,089 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@15fd27a 
[0;39m[39m2013-10-24 07:32:36,089 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:36,089 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:36,090 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18b718b 
[0;39m[39m2013-10-24 07:32:36,091 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:36,091 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:36,091 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7df12d 
[0;39m[39m2013-10-24 07:32:36,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:36,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:36,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ef4491 
[0;39m[39m2013-10-24 07:32:36,092 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:36,093 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:36,093 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1672bd6 
[0;39m[39m2013-10-24 07:32:36,093 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,094 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,094 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,094 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:36,095 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:36,095 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73591c 
[0;39m[39m2013-10-24 07:32:36,095 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:36,095 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:36,096 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@980517 
[0;39m[39m2013-10-24 07:32:36,096 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:36,096 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6816b8 
[0;39m[39m2013-10-24 07:32:36,096 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:36,097 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1307eea 
[0;39m[39m2013-10-24 07:32:36,097 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:36,097 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:36,097 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:36,098 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@a452a5 
[0;39m[39m2013-10-24 07:32:36,098 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:36,098 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:36,099 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:36,099 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12e78f0 
[0;39m[39m2013-10-24 07:32:36,099 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:36,099 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:36,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:36,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc37f8 
[0;39m[39m2013-10-24 07:32:36,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:36,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:36,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1343d7c 
[0;39m[39m2013-10-24 07:32:36,100 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cc45 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b29932 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9692e9 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b51e1 
[0;39m[39m2013-10-24 07:32:36,101 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:36,102 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19823ed 
[0;39m[39m2013-10-24 07:32:36,102 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:36,102 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1dad4d8 
[0;39m[39m2013-10-24 07:32:36,102 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16dd1be 
[0;39m[39m2013-10-24 07:32:36,103 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@b7a9db 
[0;39m[39m2013-10-24 07:32:36,103 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:36,103 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:36,103 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@a74346 
[0;39m[39m2013-10-24 07:32:36,103 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:36,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:36,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e05bf9 
[0;39m[39m2013-10-24 07:32:36,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@714de2 
[0;39m[39m2013-10-24 07:32:36,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:36,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:36,104 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@ffe027 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b1fb70 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@10364f2 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:36,105 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:36,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:36,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:36,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:36,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:36,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:36,106 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:36,107 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@1cf60d6 
[0;39m[39m2013-10-24 07:32:36,107 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:36,107 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@215343 
[0;39m[39m2013-10-24 07:32:36,107 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@837aac 
[0;39m[39m2013-10-24 07:32:36,108 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1eae4bb 
[0;39m[39m2013-10-24 07:32:36,108 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4ec46f 
[0;39m[39m2013-10-24 07:32:36,108 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14284ce 
[0;39m[39m2013-10-24 07:32:36,108 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d1b16 
[0;39m[39m2013-10-24 07:32:36,108 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@dd5c14 
[0;39m[39m2013-10-24 07:32:36,109 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c857c1 
[0;39m[39m2013-10-24 07:32:36,109 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f959f2 
[0;39m[39m2013-10-24 07:32:36,109 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@1f2d3b3 
[0;39m[34m2013-10-24 07:32:36,109  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [clob] overrides previous : org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:36,110 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f2d3b3 
[0;39m[34m2013-10-24 07:32:36,110  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@1fb2f59 
[0;39m[39m2013-10-24 07:32:36,110 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b2a275 
[0;39m[34m2013-10-24 07:32:36,110  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@1f7a803 
[0;39m[39m2013-10-24 07:32:36,110 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1eff0ee 
[0;39m[34m2013-10-24 07:32:36,110  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [blob] overrides previous : org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:36,111 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1eff0ee 
[0;39m[34m2013-10-24 07:32:36,111  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@15fb626 
[0;39m[39m2013-10-24 07:32:36,111 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@20588c 
[0;39m[34m2013-10-24 07:32:36,112  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@765b23 
[0;39m[39m2013-10-24 07:32:36,112 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2eea6c 
[0;39m[34m2013-10-24 07:32:36,112  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@194dd57 
[0;39m[39m2013-10-24 07:32:36,112 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@128c736 
[0;39m[34m2013-10-24 07:32:36,113  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@6e4e67 
[0;39m[39m2013-10-24 07:32:36,113 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@c7bf95 
[0;39m[34m2013-10-24 07:32:36,113  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@577186 
[0;39m[39m2013-10-24 07:32:36,114 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Session factory constructed with filter configurations : {} 
[0;39m[39m2013-10-24 07:32:36,114 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-7-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-7-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-7-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-7-oracle/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_21-b11, hibernate.connection.autocommit=true, user.name=paul, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/i386, classworlds.conf=/home/paul/dev/netbeans-7.3/java/maven/bin/m2.conf, java.version=1.7.0_21, user.timezone=Europe/Minsk, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper.,sun.beans., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-oracle/jre, java.vm.info=mixed mode, os.version=3.2.0-54-generic-pae, hibernate.transaction.factory_class=org.hibernate.ejb.transaction.JoinableCMTTransactionFactory, sun.font.fontmanager=sun.awt.X11FontManager, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.21-b01, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., hibernate.check_nullability=false, java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/paul, java.specification.vendor=Oracle Corporation, java.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/amd64:/usr/lib/jvm/java-7-oracle/jre/lib/i386::/usr/java/packages/lib/i386:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, common.loader=${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=/home/paul/dev/netbeans-7.3/java/maven, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher tomcat6:run-war, java.class.path=/home/paul/dev/netbeans-7.3/java/maven/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, catalina.home=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=i386, java.ext.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/paul/NetBeansProjects/submit-jpa/submit-jpa, line.separator=
, java.vm.name=Java HotSpot(TM) Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, hibernate.transaction.manager_lookup_class=org.hibernate.transaction.BTMTransactionManagerLookup, java.specification.version=1.7, hibernate.show_sql=true} 
[0;39m[39m2013-10-24 07:32:36,115 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:32:36,115 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:32:36,115 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:32:36,118 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Register 
[0;39m[39m2013-10-24 07:32:36,118 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id, op_id, user_id from registry.registers where id =? and op_id =? and user_id =? 
[0;39m[39m2013-10-24 07:32:36,118 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select register_.id, register_.op_id, register_.user_id, register_.record_time as record4_9_ from registry.registers register_ where register_.id=? and register_.op_id=? and register_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,118 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.registers (record_time, id, op_id, user_id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:36,119 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.registers set record_time=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:36,119 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.registers where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:36,121 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Op 
[0;39m[39m2013-10-24 07:32:36,121 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.ops where id =? 
[0;39m[39m2013-10-24 07:32:36,122 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select op_.id, op_.description as descript2_8_, op_.title as title8_ from registry.ops op_ where op_.id=? 
[0;39m[39m2013-10-24 07:32:36,122 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.ops (description, title, id) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:32:36,122 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.ops set description=?, title=? where id=? 
[0;39m[39m2013-10-24 07:32:36,122 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.ops where id=? 
[0;39m[39m2013-10-24 07:32:36,123 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.ops (description, title) values (?, ?) 
[0;39m[39m2013-10-24 07:32:36,125 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.User 
[0;39m[39m2013-10-24 07:32:36,126 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.users where id =? 
[0;39m[39m2013-10-24 07:32:36,126 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select user_.id, user_.email as email10_, user_.fullname as fullname10_, user_.job as job10_ from registry.users user_ where user_.id=? 
[0;39m[39m2013-10-24 07:32:36,126 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.users (email, fullname, job, id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:36,126 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.users set email=?, fullname=?, job=? where id=? 
[0;39m[39m2013-10-24 07:32:36,127 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.users where id=? 
[0;39m[39m2013-10-24 07:32:36,127 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.users (email, fullname, job) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:32:36,129 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Report 
[0;39m[39m2013-10-24 07:32:36,130 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from enterprise.reports where id =? 
[0;39m[39m2013-10-24 07:32:36,130 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select report_.id, report_.activity as activity11_, report_.endDate as endDate11_, report_.performer as performer11_, report_.startDate as startDate11_ from enterprise.reports report_ where report_.id=? 
[0;39m[39m2013-10-24 07:32:36,130 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into enterprise.reports (activity, endDate, performer, startDate, id) values (?, ?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:36,130 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update enterprise.reports set activity=?, endDate=?, performer=?, startDate=? where id=? 
[0;39m[39m2013-10-24 07:32:36,131 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from enterprise.reports where id=? 
[0;39m[39m2013-10-24 07:32:36,131 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into enterprise.reports (activity, endDate, performer, startDate) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:32:36,131 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:32:36,132 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set user_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:36,132 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set user_id=null where user_id=? and id=? and op_id=? 
[0;39m[39m2013-10-24 07:32:36,132 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set user_id=null where user_id=? 
[0;39m[39m2013-10-24 07:32:36,133 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:32:36,133 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set op_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:36,133 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set op_id=null where op_id=? and id=? and user_id=? 
[0;39m[39m2013-10-24 07:32:36,133 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set op_id=null where op_id=? 
[0;39m[39m2013-10-24 07:32:36,134 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [NONE]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,135 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [READ]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,135 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:36,136 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE_NOWAIT]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:36,136 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [FORCE]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:36,137 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_READ]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:36,137 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_WRITE]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:36,138 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_FORCE_INCREMENT]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:32:36,139 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,140 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC_FORCE_INCREMENT]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,140 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Register: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,141 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Register: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,141 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [NONE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:36,141 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [READ]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:36,141 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,142 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE_NOWAIT]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,142 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [FORCE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,142 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_READ]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:36,142 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_WRITE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,143 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_FORCE_INCREMENT]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,143 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:36,504 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC_FORCE_INCREMENT]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:32:36,504 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Op: select op0_.id as id8_1_, op0_.description as descript2_8_1_, op0_.title as title8_1_, registers1_.op_id as op2_8_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:32:36,505 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Op: select op0_.id as id8_1_, op0_.description as descript2_8_1_, op0_.title as title8_1_, registers1_.op_id as op2_8_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:32:36,505 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [NONE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:36,505 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [READ]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:36,506 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,506 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE_NOWAIT]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,506 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [FORCE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,507 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_READ]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:36,507 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_WRITE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,507 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,507 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:36,508 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:32:36,508 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.User: select user0_.id as id10_1_, user0_.email as email10_1_, user0_.fullname as fullname10_1_, user0_.job as job10_1_, registers1_.user_id as user3_10_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:32:36,509 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.User: select user0_.id as id10_1_, user0_.email as email10_1_, user0_.fullname as fullname10_1_, user0_.job as job10_1_, registers1_.user_id as user3_10_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:32:36,509 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [NONE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,509 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [READ]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,510 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,510 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE_NOWAIT]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,510 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [FORCE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,511 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_READ]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:32:36,511 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_WRITE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,511 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_FORCE_INCREMENT]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:32:36,512 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,512 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC_FORCE_INCREMENT]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,513 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Report: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,513 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Report: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,514 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.User.registers: select registers0_.user_id as user3_10_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id9_1_, registers0_.op_id as op2_9_1_, registers0_.user_id as user3_9_1_, registers0_.record_time as record4_9_1_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_ from registry.registers registers0_ inner join registry.ops op1_ on registers0_.op_id=op1_.id where registers0_.user_id=? 
[0;39m[39m2013-10-24 07:32:36,514 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.Op.registers: select registers0_.op_id as op2_8_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id9_1_, registers0_.op_id as op2_9_1_, registers0_.user_id as user3_9_1_, registers0_.record_time as record4_9_1_, user1_.id as id10_0_, user1_.email as email10_0_, user1_.fullname as fullname10_0_, user1_.job as job10_0_ from registry.registers registers0_ inner join registry.users user1_ on registers0_.user_id=user1_.id where registers0_.op_id=? 
[0;39m[39m2013-10-24 07:32:36,515 DEBUG | main | org.hibernate.impl.SessionFactoryObjectFactory          | registered: 501b2dcf-c416-41a8-9107-a7f1537acb3b (unnamed) 
[0;39m[34m2013-10-24 07:32:36,515  INFO | main | org.hibernate.impl.SessionFactoryObjectFactory          | Not binding factory to JNDI, no JNDI name configured 
[0;39m[39m2013-10-24 07:32:36,515 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiated session factory 
[0;39m[39m2013-10-24 07:32:36,515 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | obtaining JTA TransactionManager 
[0;39m[39m2013-10-24 07:32:36,515 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 21 named HQL queries 
[0;39m[39m2013-10-24 07:32:36,517 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Op.findByTitle 
[0;39m[39m2013-10-24 07:32:36,518 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:32:36,524 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Op'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'title'
 
[0;39m[39m2013-10-24 07:32:36,524 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,524 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,525 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (o) -> op0_ 
[0;39m[39m2013-10-24 07:32:36,525 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:32:36,525 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:32:36,525 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : title -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:36,525 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o.title -> op0_.title 
[0;39m[39m2013-10-24 07:32:36,526 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,526 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} op0_.id ) ( FromClause{level=1} registry.ops op0_ ) ( where ( = ( op0_.title op0_.id title ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:36,526 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.ops op0_] 
[0;39m[39m2013-10-24 07:32:36,527 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,527 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'op0_.id as id8_' {alias=o, className=sp.model.Op, tableAlias=op0_}
    |  \-[SQL_TOKEN] SqlFragment: 'op0_.description as descript2_8_, op0_.title as title8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[op0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.ops op0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=registry.ops,tableAlias=op0_,origin=null,columns={,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'op0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=o.title,tableAlias=op0_,className=sp.model.Op,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'op0_.id' {alias=o, className=sp.model.Op, tableAlias=op0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=title, expectedType=org.hibernate.type.StringType@836465}
 
[0;39m[39m2013-10-24 07:32:36,528 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,528 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:32:36,528 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select op0_.id as id8_, op0_.description as descript2_8_, op0_.title as title8_ from registry.ops op0_ where op0_.title=? 
[0;39m[39m2013-10-24 07:32:36,528 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,529 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByOp 
[0;39m[39m2013-10-24 07:32:36,529 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:36,541 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:36,541 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,541 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,542 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:36,542 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,542 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:36,542 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:36,542 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:36,590 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:36,590 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:36,590 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,590 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:36,591 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:36,591 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:36,591 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:36,591 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,591 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:36,592 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:36,592 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:36,592 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:36,592 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,593 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:32:36,593 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,593 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:36,594 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.op_id=? 
[0;39m[39m2013-10-24 07:32:36,594 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,594 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReports 
[0;39m[39m2013-10-24 07:32:36,594 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:36,599 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:32:36,599 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,599 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,599 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:36,600 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,600 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,600 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,600 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,601 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,601 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count report0_.id ) ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:36,601 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:36,601 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,602 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:36,602 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,602 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:36,602 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(report0_.id) as col_0_0_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:32:36,602 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,603 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByIds 
[0;39m[39m2013-10-24 07:32:36,603 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:36,608 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:32:36,608 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,608 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,609 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:36,609 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,609 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,610 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,610 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,610 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,610 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:36,610 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:36,610 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,611 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:36,611 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,611 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:32:36,612 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:32:36,612 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,612 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPeriod 
[0;39m[39m2013-10-24 07:32:36,613 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:36,618 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'startDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:36,618 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,619 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,619 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:36,619 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,619 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,620 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:36,620 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:32:36,620 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,620 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:36,621 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:32:36,621 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,621 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( >= ( report0_.startDate report0_.id startDate ) ? ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:36,622 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:36,622 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,622 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e175f3}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e175f3}
 
[0;39m[39m2013-10-24 07:32:36,623 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,623 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:36,623 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:32:36,623 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,624 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReport 
[0;39m[39m2013-10-24 07:32:36,624 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:32:36,628 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:32:36,628 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,628 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,629 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:36,629 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,629 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,629 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,629 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,630 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,630 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.id report0_.id id ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:36,630 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:36,630 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,631 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:36,631 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,631 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:32:36,632 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:32:36,632 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,632 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getAllReports 
[0;39m[39m2013-10-24 07:32:36,632 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:36,635 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'r'
 
[0;39m[39m2013-10-24 07:32:36,635 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,635 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,636 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:36,636 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:36,636 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,636 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:32:36,637 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:36,637 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,638 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:32:36,638 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,638 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:36,638 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:32:36,638 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,638 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countAll 
[0;39m[39m2013-10-24 07:32:36,639 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:32:36,641 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Register'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'r'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:36,641 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,642 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,642 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:36,642 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,642 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:36,642 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:36,642 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ) 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:36,643 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:36,644 DEBUG | main | org.hibernate.hql.ast.tree.QueryNode                    | getWhereClause() : Creating a new WHERE clause... 
[0;39m[39m2013-10-24 07:32:36,644 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,644 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[THETA_JOINS] SqlNode: '{theta joins}'
          \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
 
[0;39m[39m2013-10-24 07:32:36,644 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,644 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:32:36,644 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id 
[0;39m[39m2013-10-24 07:32:36,645 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,645 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.find 
[0;39m[39m2013-10-24 07:32:36,645 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:32:36,650 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'op'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'op'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'user'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'user'
          \-[BETWEEN] Node: 'between'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'recordTime'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'startDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:36,650 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,650 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,650 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:36,650 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,651 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:32:36,652 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,653 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( and ( and ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:36,653 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:36,653 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,654 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  |  \-[IDENT] IdentNode: 'op' {originalText=op}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |     |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[BETWEEN] BetweenOperatorNode: 'between'
             +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
             +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@72597e}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@72597e}
 
[0;39m[39m2013-10-24 07:32:36,654 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,654 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:32:36,654 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.op_id=? and register0_.user_id=? and (register0_.record_time between ? and ?) 
[0;39m[39m2013-10-24 07:32:36,654 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,655 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getLastIdByUserAndOp 
[0;39m[39m2013-10-24 07:32:36,655 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:32:36,658 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'r'
    |        |  \-[IDENT] Node: 'id'
    |        \-[IDENT] Node: 'id'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 'r'
       |  |  \-[IDENT] Node: 'id'
       |  \-[IDENT] Node: 'id'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:32:36,659 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,659 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,659 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:36,659 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@1d877e5 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:36,660 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@1d877e5 
[0;39m[39m2013-10-24 07:32:36,661 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:32:36,661 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:36,661 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:36,661 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:32:36,661 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,661 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) desc ) ) 
[0;39m[39m2013-10-24 07:32:36,662 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:36,662 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:36,662 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:32:36,662 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,662 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:32:36,663 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as col_0_0_ from registry.registers register0_ order by register0_.id desc 
[0;39m[39m2013-10-24 07:32:36,663 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:36,663 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByUser 
[0;39m[39m2013-10-24 07:32:36,663 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:36,666 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:32:37,084 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,085 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,085 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:37,085 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,085 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,086 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:37,086 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:37,086 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:37,086 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:37,086 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,086 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:37,087 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:37,087 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,088 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:32:37,088 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,088 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:37,088 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:37,089 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,089 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPerformer 
[0;39m[39m2013-10-24 07:32:37,089 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:32:37,093 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'performer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:32:37,094 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,094 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,094 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:37,095 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,095 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,095 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:37,095 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:32:37,095 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,096 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.performer report0_.id performer ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:37,096 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:37,096 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,097 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@836465}
 
[0;39m[39m2013-10-24 07:32:37,097 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,097 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:32:37,097 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.performer=? 
[0;39m[39m2013-10-24 07:32:37,098 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,098 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUserAndOp 
[0;39m[39m2013-10-24 07:32:37,098 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:32:37,106 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'user'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'user'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'op'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:37,106 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,106 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,107 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:37,107 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,107 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:37,107 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:37,108 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:37,108 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:37,108 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:37,108 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,108 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:37,109 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:37,109 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:37,109 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:37,109 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,109 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:37,110 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:37,110 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:37,110 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:37,110 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,111 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( and ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:37,111 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:37,111 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:37,111 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:37,112 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,112 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'op' {originalText=op}
             \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:32:37,113 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,113 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:32:37,113 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? and register0_.op_id=? 
[0;39m[39m2013-10-24 07:32:37,113 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,114 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUser 
[0;39m[39m2013-10-24 07:32:37,114 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:37,119 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:32:37,120 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,120 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,121 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:37,121 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,121 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:37,121 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:32:37,122 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:32:37,122 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:32:37,122 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:37,122 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,123 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:32:37,123 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:37,123 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:32:37,123 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:32:37,124 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,126 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:37,126 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:37,127 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:37,127 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:32:37,127 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,128 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:32:37,128 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,129 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:32:37,129 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? 
[0;39m[39m2013-10-24 07:32:37,129 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,130 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getAll 
[0;39m[39m2013-10-24 07:32:37,130 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:32:37,134 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'r'
       |  \-[IDENT] Node: 'recordTime'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:32:37,135 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,135 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,135 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:37,136 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,136 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,136 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:37,137 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:32:37,137 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,137 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) desc ) ) 
[0;39m[39m2013-10-24 07:32:37,137 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:37,138 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,138 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:32:37,139 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,139 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:32:37,139 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ order by register0_.record_time desc 
[0;39m[39m2013-10-24 07:32:37,139 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,140 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReports 
[0;39m[39m2013-10-24 07:32:37,140 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:37,147 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'performer'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'performer'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'startDate'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:37,148 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,148 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,149 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:37,149 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,149 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,149 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:37,149 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:32:37,150 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,150 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:37,150 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:32:37,150 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,150 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e175f3 
[0;39m[39m2013-10-24 07:32:37,150 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:32:37,151 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,151 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( and ( = ( report0_.performer report0_.id performer ) ? ) ( >= ( report0_.startDate report0_.id startDate ) ? ) ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:32:37,151 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:37,151 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,152 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@836465}
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |     |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e175f3}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e175f3}
 
[0;39m[39m2013-10-24 07:32:37,152 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,152 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:32:37,152 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.performer=? and report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:32:37,152 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,153 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.removeReport 
[0;39m[39m2013-10-24 07:32:37,154 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: delete from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:32:37,156 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'sp'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Report'
    |     \-[ALIAS] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:32:37,157 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,157 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete << begin [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:32:37,157 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:37,157 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> id 
[0;39m[39m2013-10-24 07:32:37,157 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@ae3d62 
[0;39m[39m2013-10-24 07:32:37,158 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> id 
[0;39m[39m2013-10-24 07:32:37,158 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete : finishing up [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:32:37,158 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete >> end [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:32:37,159 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (enterprise.reports)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@ae3d62}
 
[0;39m[39m2013-10-24 07:32:37,159 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,159 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,159 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: User.findByFullname 
[0;39m[39m2013-10-24 07:32:37,160 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:32:37,164 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'fullname'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fullname'
 
[0;39m[39m2013-10-24 07:32:37,164 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,164 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,164 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.User (u) -> user0_ 
[0;39m[39m2013-10-24 07:32:37,165 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:32:37,165 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:32:37,165 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : fullname -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:37,165 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u.fullname -> user0_.fullname 
[0;39m[39m2013-10-24 07:32:37,165 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,166 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} registry.users user0_ ) ( where ( = ( user0_.fullname user0_.id fullname ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:37,166 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.users user0_] 
[0;39m[39m2013-10-24 07:32:37,166 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,167 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id10_' {alias=u, className=sp.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email10_, user0_.fullname as fullname10_, user0_.job as job10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=registry.users,tableAlias=user0_,origin=null,columns={,className=sp.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.fullname' {propertyName=fullname,dereferenceType=ALL,propertyPath=fullname,path=u.fullname,tableAlias=user0_,className=sp.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=sp.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'fullname' {originalText=fullname}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fullname, expectedType=org.hibernate.type.StringType@836465}
 
[0;39m[39m2013-10-24 07:32:37,167 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,167 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:32:37,167 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select user0_.id as id10_, user0_.email as email10_, user0_.fullname as fullname10_, user0_.job as job10_ from registry.users user0_ where user0_.fullname=? 
[0;39m[39m2013-10-24 07:32:37,168 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,168 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByOp 
[0;39m[39m2013-10-24 07:32:37,168 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:37,172 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:32:37,173 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,173 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,173 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:37,173 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,174 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,174 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:32:37,174 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:32:37,174 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:32:37,174 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:32:37,175 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,175 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:32:37,175 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:37,175 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,176 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:32:37,176 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,176 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:32:37,177 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.op_id=? 
[0;39m[39m2013-10-24 07:32:37,177 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,177 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.findByPeriod 
[0;39m[39m2013-10-24 07:32:37,178 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:32:37,182 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'recordTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'startDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:32:37,182 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,183 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,183 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:32:37,183 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,184 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:32:37,184 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@72597e 
[0;39m[39m2013-10-24 07:32:37,184 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:32:37,185 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,185 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) 
[0;39m[39m2013-10-24 07:32:37,185 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:32:37,185 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,186 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@72597e}
          \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@72597e}
 
[0;39m[39m2013-10-24 07:32:37,186 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,186 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:32:37,186 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.record_time between ? and ? 
[0;39m[39m2013-10-24 07:32:37,186 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,187 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getPerformers 
[0;39m[39m2013-10-24 07:32:37,187 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:37,189 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'r'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:32:37,190 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,190 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,190 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:32:37,190 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:32:37,190 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@836465 
[0;39m[39m2013-10-24 07:32:37,191 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:32:37,191 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,191 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} distinct ( report0_.performer report0_.id performer ) ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:32:37,191 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:32:37,191 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:32:37,192 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
    |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:32:37,192 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,192 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:32:37,192 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select distinct report0_.performer as col_0_0_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:32:37,192 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:32:37,192 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 0 named SQL queries 
[0;39m[1;31m2013-10-24 07:32:37,194 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.Register_#recordTime 
[0;39m[1;31m2013-10-24 07:32:37,197 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.User_#fullname 
[0;39m[34m2013-10-24 07:32:37,368  INFO | main | org.apache.solr.client.solrj.impl.HttpClientUtil        | Creating new http client, config:maxConnections=128&maxConnectionsPerHost=32&followRedirects=false 
[0;39m[34m2013-10-24 07:32:38,449  INFO | main | o.s.s.a.intercept.aopalliance.MethodSecurityInterceptor | Validated configuration attributes 
[0;39m[34m2013-10-24 07:32:38,684  INFO | main | o.s.jdbc.datasource.DriverManagerDataSource             | Loaded JDBC driver: com.mysql.jdbc.Driver 
[0;39m[34m2013-10-24 07:32:38,688  INFO | main | o.s.jdbc.datasource.DriverManagerDataSource             | Loaded JDBC driver: com.mysql.jdbc.Driver 
[0;39m[34m2013-10-24 07:32:38,779  INFO | main | o.s.jdbc.datasource.DriverManagerDataSource             | Loaded JDBC driver: com.mysql.jdbc.Driver 
[0;39m[34m2013-10-24 07:32:38,985  INFO | main | o.s.s.web.access.intercept.FilterSecurityInterceptor    | Validated configuration attributes 
[0;39m[34m2013-10-24 07:32:39,149  INFO | main | o.s.security.web.access.channel.ChannelProcessingFilter | Validated configuration attributes 
[0;39m[34m2013-10-24 07:32:39,335  INFO | main | org.springframework.web.context.ContextLoader           | Root WebApplicationContext: initialization completed in 12719 ms 
[0;39m[34m2013-10-24 07:32:39,561  INFO | main | org.springframework.web.servlet.DispatcherServlet       | FrameworkServlet 'report-dispatcher': initialization started 
[0;39m[34m2013-10-24 07:32:39,565  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Refreshing WebApplicationContext for namespace 'report-dispatcher-servlet': startup date [Thu Oct 24 07:32:39 FET 2013]; parent: Root WebApplicationContext 
[0;39m[34m2013-10-24 07:32:39,567  INFO | main | o.s.beans.factory.xml.XmlBeanDefinitionReader           | Loading XML bean definitions from ServletContext resource [/WEB-INF/report-dispatcher-servlet.xml] 
[0;39m[34m2013-10-24 07:32:39,718  INFO | main | o.s.context.annotation.ClassPathBeanDefinitionScanner   | JSR-330 'javax.inject.Named' annotation found and supported for component scanning 
[0;39m[34m2013-10-24 07:32:39,860  INFO | main | o.s.c.support.PropertySourcesPlaceholderConfigurer      | Loading properties file from class path resource [report-servlet.properties] 
[0;39m[34m2013-10-24 07:32:39,866  INFO | main | o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
[0;39m[34m2013-10-24 07:32:39,887  INFO | main | o.s.beans.factory.support.DefaultListableBeanFactory    | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10123f1: defining beans [org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#0,org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,org.springframework.web.servlet.resource.ResourceHttpRequestHandler#1,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#1,org.springframework.web.servlet.resource.ResourceHttpRequestHandler#2,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#2,org.springframework.web.servlet.resource.ResourceHttpRequestHandler#3,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#3,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0,org.springframework.format.support.FormattingConversionServiceFactoryBean#0,org.springframework.validation.beanvalidation.LocalValidatorFactoryBean#0,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0,org.springframework.web.servlet.handler.MappedInterceptor#0,org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0,org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0,org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0,adminController,checklistController,forwardController,homeController,errorController,ajaxController,suggestController,emailController,registryController,solrSuggestController,loginController,reportController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,velocityConfig,viewResolver,messageSource,localeResolver,org.springframework.web.servlet.handler.MappedInterceptor#1,org.springframework.web.servlet.handler.MappedInterceptor#2,handlerMapping,multipartResolver,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@14b9070 
[0;39m[34m2013-10-24 07:32:40,025  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/img/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
[0;39m[34m2013-10-24 07:32:40,074  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/js/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#1' 
[0;39m[34m2013-10-24 07:32:40,081  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/css/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#2' 
[0;39m[34m2013-10-24 07:32:40,088  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/font/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#3' 
[0;39m[34m2013-10-24 07:32:40,142  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/admin/update],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[text/plain;charset=utf-8],custom=[]}" onto public java.lang.String sp.controller.AdminController.updateSystemProperties(java.lang.String,java.lang.String,java.lang.String,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,142  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/admin/ || /admin/manager || /admin],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AdminController.manager(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,146  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/stats],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.ajax.Statistics sp.controller.ChecklistController.getStatistics(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,146  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.checklist(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,147  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/empty],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.emptyChecklist(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,147  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/remove/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.removeFromChecklist(java.lang.Long,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,148  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/remove],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.removeFromChecklistById(java.lang.Long,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,148  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/email],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.sendStatisticsOnEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,java.lang.String,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,149  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/forward],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ForwardController.forward(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,150  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/contact],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.contact(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,151  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/instruction],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.instruction(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,151  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/about],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.about(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,152  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/ || /home],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.home(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,154  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/notsupported],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.notssupported() 
[0;39m[34m2013-10-24 07:32:40,154  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/badrequest],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.badrequest() 
[0;39m[34m2013-10-24 07:32:40,154  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/missing],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.missing() 
[0;39m[34m2013-10-24 07:32:40,155  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.error() 
[0;39m[34m2013-10-24 07:32:40,155  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/access],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.access() 
[0;39m[34m2013-10-24 07:32:40,167  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/watch/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.watchReportById(java.lang.Long,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,168  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/watch],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.watchAll(java.lang.Long[],javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,169  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/uri],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.getUri(java.lang.Long,javax.servlet.http.HttpServletRequest,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,169  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/pager/remove],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.removeFromPager(java.lang.Long,java.lang.String,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,169  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.Report sp.controller.AjaxController.getReport(java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,170  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/remove],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.removeReport(java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,170  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.ajax.AjaxResponse sp.controller.AjaxController.update(sp.model.Report,org.springframework.validation.BindingResult,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,171  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/add],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.ajax.AjaxResponse sp.controller.AjaxController.add(sp.model.Report,org.springframework.validation.BindingResult,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,182  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/prompt-strings],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> sp.controller.SuggestController.getPromptsAsString(java.lang.String,java.lang.Integer,boolean,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,182  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/prompt],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<sp.model.ajax.Prompt>> sp.controller.SuggestController.getPrompts(java.lang.String,java.lang.Integer,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,183  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/ids],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.Long>> sp.controller.SuggestController.getIdsByQuery(java.lang.String,java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,186  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<sp.model.ajax.ResultPager> sp.controller.SuggestController.getReportsByQuery(java.lang.String,sp.util.SpLightPager,java.lang.Integer,java.lang.String,boolean,boolean,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession) 
[0;39m[34m2013-10-24 07:32:40,187  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/count],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.lang.Long> sp.controller.SuggestController.getCount(java.lang.String,boolean,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,189  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/email/statistics],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.EmailController.getHtmlWithStatistics(sp.model.ajax.Statistics,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) 
[0;39m[34m2013-10-24 07:32:40,191  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/registry],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.RegistryController.showRegistry(java.lang.String,java.lang.String,sp.util.SpLazyPager,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,195  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/registry/nothing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.RegistryController.nothingFound(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,199  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr/suggest],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.data.domain.Page<sp.model.Report> sp.controller.SolrSuggestController.suggest(java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,199  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr/cloud],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List sp.controller.SolrSuggestController.getSearchCloud(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,200  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.SolrSuggestController.setupForm(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,202  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr/search],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.data.domain.Page<sp.model.Report> sp.controller.SolrSuggestController.search(java.lang.String,java.lang.Integer,java.lang.String,boolean,sp.util.SpPageable,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,204  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.LoginController.loginForm(boolean,boolean,boolean,org.springframework.security.core.Authentication,java.security.Principal,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,204  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.LoginController.loginHome(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,205  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/logout],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.LoginController.logoutPage(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,214  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/search/nothing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.nothingFound(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,215  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report || /report/search],methods=[GET],params=[new_search],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupForm(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,218  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.doSearch(java.util.Date,java.util.Date,java.lang.String,java.util.Map<java.lang.String, org.springframework.beans.support.PagedListHolder<sp.model.Report>>,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,219  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/search],methods=[GET],params=[search_id],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.exposeList(java.util.Map<java.lang.String, org.springframework.beans.support.PagedListHolder<sp.model.Report>>,java.lang.String,java.lang.String,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,219  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/detail],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupDetailForm(java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,220  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/detail],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupDetailForm(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,220  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/detail/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.detailById(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest) 
[0;39m[34m2013-10-24 07:32:40,220  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/add],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupAddForm(org.springframework.ui.Model,javax.servlet.http.HttpServletResponse) 
[0;39m[34m2013-10-24 07:32:40,221  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.realTimeSearch(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:32:40,221  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/add],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView sp.controller.ReportController.add(sp.model.Report,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
[0;39m[34m2013-10-24 07:32:42,318  INFO | main | o.s.web.servlet.view.velocity.VelocityConfigurer        | Loading Velocity config from [ServletContext resource [/WEB-INF/velocity.properties]] 
[0;39m[34m2013-10-24 07:32:42,324  INFO | main | o.s.web.servlet.view.velocity.VelocityConfigurer        | ClasspathResourceLoader with name 'springMacro' added to configured VelocityEngine 
[0;39m[39m2013-10-24 07:32:42,364 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Initializing Velocity, Calling init()... 
[0;39m[39m2013-10-24 07:32:42,365 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Starting Apache Velocity v1.7 (compiled: 2010-11-19 12:14:37) 
[0;39m[39m2013-10-24 07:32:42,365 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Default Properties File: org/apache/velocity/runtime/defaults/velocity.properties 
[0;39m[39m2013-10-24 07:32:42,365 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | LogSystem has been deprecated. Please use a LogChute implementation. 
[0;39m[39m2013-10-24 07:32:42,378 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceLoader instantiated: org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[34m2013-10-24 07:32:42,380  INFO | main | org.apache.velocity.app.VelocityEngine                  | WebappResourceLoader: added template path - '/WEB-INF/views/' 
[0;39m[39m2013-10-24 07:32:42,381 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceLoader instantiated: org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader 
[0;39m[39m2013-10-24 07:32:42,381 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceLoader instantiated: org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader 
[0;39m[39m2013-10-24 07:32:42,390 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceCache: initialized (class org.apache.velocity.runtime.resource.ResourceCacheImpl) with class java.util.Collections$SynchronizedMap cache map. 
[0;39m[39m2013-10-24 07:32:42,393 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Stop 
[0;39m[39m2013-10-24 07:32:42,396 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Define 
[0;39m[39m2013-10-24 07:32:42,397 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Break 
[0;39m[39m2013-10-24 07:32:42,399 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Evaluate 
[0;39m[39m2013-10-24 07:32:42,400 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Literal 
[0;39m[39m2013-10-24 07:32:42,402 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Macro 
[0;39m[39m2013-10-24 07:32:42,404 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Parse 
[0;39m[39m2013-10-24 07:32:42,406 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Include 
[0;39m[39m2013-10-24 07:32:42,407 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Foreach 
[0;39m[39m2013-10-24 07:32:42,446 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Created '20' parsers. 
[0;39m[39m2013-10-24 07:32:42,454 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/global.vm 
[0;39m[39m2013-10-24 07:32:42,506 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM hint: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:32:42,506 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM hint_sticker: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:32:42,508 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM menu_sticker: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:32:42,508 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM confirm: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:32:42,508 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/global.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,510 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/localizejs.vm 
[0;39m[39m2013-10-24 07:32:42,515 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM validator_l10n: source=/macros/localizejs.vm 
[0;39m[39m2013-10-24 07:32:42,516 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM datepicker_l10n: source=/macros/localizejs.vm 
[0;39m[39m2013-10-24 07:32:42,516 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/localizejs.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,517 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,542 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_uri: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,543 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_action: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,543 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_add: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,543 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_update: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,544 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_delete: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,544 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_stats: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:32:42,544 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/modal.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,544 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/pager.vm 
[0;39m[39m2013-10-24 07:32:42,577 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM pager: source=/macros/pager.vm 
[0;39m[39m2013-10-24 07:32:42,583 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/pager.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,584 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/lazy-pager.vm 
[0;39m[39m2013-10-24 07:32:42,600 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM lazy_pager: source=/macros/lazy-pager.vm 
[0;39m[39m2013-10-24 07:32:42,601 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/lazy-pager.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,616 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/dynamic.vm 
[0;39m[39m2013-10-24 07:32:42,620 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM dynamic_table: source=/macros/dynamic.vm 
[0;39m[39m2013-10-24 07:32:42,620 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM dynamic_row: source=/macros/dynamic.vm 
[0;39m[39m2013-10-24 07:32:42,621 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM dynamic_button_group: source=/macros/dynamic.vm 
[0;39m[39m2013-10-24 07:32:42,621 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/dynamic.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,621 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/ajax-pager.vm 
[0;39m[39m2013-10-24 07:32:42,623 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM ajax_pager: source=/macros/ajax-pager.vm 
[0;39m[39m2013-10-24 07:32:42,624 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/ajax-pager.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:32:42,625 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,694 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springMessage: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,694 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springMessageText: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,695 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springTheme: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,695 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springThemeText: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,695 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springUrl: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,696 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springBind: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,696 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springBindEscaped: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,697 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormInput: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,697 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormPasswordInput: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,697 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormHiddenInput: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,698 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormTextarea: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,699 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormSingleSelect: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,699 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormMultiSelect: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,700 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormRadioButtons: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,701 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormCheckboxes: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,702 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormCheckbox: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,702 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springShowErrors: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springCloseTag: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:32:42,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found org/springframework/web/servlet/view/velocity/spring.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader  
[0;39m[39m2013-10-24 07:32:42,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : allowInline = true : VMs can be defined inline in templates 
[0;39m[39m2013-10-24 07:32:42,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : allowInlineToOverride = true : VMs defined inline may replace previous VM definitions 
[0;39m[39m2013-10-24 07:32:42,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : allowInlineLocal = true : VMs defined inline will be local to their defining template only. 
[0;39m[39m2013-10-24 07:32:42,704 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : autoload on : VM system will automatically reload global library macros 
[0;39m[34m2013-10-24 07:32:42,831  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/update] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,831  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/update.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,832  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/update/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,832  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,832  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/manager] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,832  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/manager.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,832  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/manager/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,833  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,833  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,833  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/admin.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,833  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/admin/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:32:42,834  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/stats] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,835  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/stats.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,835  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/stats/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,835  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,835  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,836  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,836  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,836  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/empty] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,836  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/empty.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,837  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/empty/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,837  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/{id}] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,837  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/{id}.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,837  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/{id}/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,838  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,838  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,838  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,838  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/email] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,838  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/email.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,839  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/email/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:32:42,839  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/forward] onto handler 'forwardController' 
[0;39m[34m2013-10-24 07:32:42,840  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/forward.*] onto handler 'forwardController' 
[0;39m[34m2013-10-24 07:32:42,840  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/forward/] onto handler 'forwardController' 
[0;39m[34m2013-10-24 07:32:42,840  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/contact] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,841  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/contact.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,841  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/contact/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,841  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/instruction] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,841  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/instruction.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,842  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/instruction/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,842  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/about] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,842  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/about.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,843  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/about/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,843  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Root mapping to handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,843  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/home] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,843  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/home.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,844  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/home/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:32:42,845  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/notsupported] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,845  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/notsupported.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,845  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/notsupported/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,845  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/badrequest] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,846  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/badrequest.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,846  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/badrequest/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,846  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/missing] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,846  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/missing.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,847  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/missing/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,847  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/error] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,847  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/error.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,847  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/error/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,848  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/access] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,848  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/access.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,848  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/access/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:32:42,850  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/{id}] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,850  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/{id}.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,850  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/{id}/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,851  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,851  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,851  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,851  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/uri] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,852  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/uri.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,852  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/uri/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,852  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/pager/remove] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,852  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/pager/remove.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,853  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/pager/remove/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,853  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,853  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,853  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,854  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,854  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/remove] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,854  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/remove.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,854  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/remove/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,854  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/update] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,855  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/update.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,855  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/update/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,855  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/add] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,855  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/add.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,856  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/add/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:32:42,857  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt-strings] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,857  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt-strings.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,857  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt-strings/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,858  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,858  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,858  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,859  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/ids] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,859  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/ids.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,859  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/ids/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,859  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,860  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,860  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,860  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,860  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/count] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,860  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/count.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,861  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/count/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:32:42,861  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/email/statistics] onto handler 'emailController' 
[0;39m[34m2013-10-24 07:32:42,862  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/email/statistics.*] onto handler 'emailController' 
[0;39m[34m2013-10-24 07:32:42,862  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/email/statistics/] onto handler 'emailController' 
[0;39m[34m2013-10-24 07:32:42,863  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,863  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry.*] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,863  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,863  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/.*] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,864  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/nothing] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,864  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/nothing.*] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,864  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/nothing/] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:32:42,865  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/suggest] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,866  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/suggest.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,866  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/suggest/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,866  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/cloud] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,866  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/cloud.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,867  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/cloud/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,867  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,867  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,867  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,868  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,868  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/search] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,868  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/search.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,868  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/search/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:32:42,869  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/login] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:32:42,869  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/login.*] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:32:42,870  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/login/] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:32:42,870  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/logout] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:32:42,870  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/logout.*] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:32:42,870  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/logout/] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:32:42,873  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/nothing] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,873  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/nothing.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,873  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/nothing/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,873  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,874  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,874  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,874  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,881  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,882  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,882  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,882  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,882  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,882  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,883  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/{id}] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,883  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/{id}.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,883  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/{id}/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,883  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/add] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,883  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/add.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,884  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/add/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,884  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,886  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,886  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:32:42,971  INFO | main | org.springframework.web.servlet.DispatcherServlet       | FrameworkServlet 'report-dispatcher': initialization completed in 3410 ms 
[0;39m[34m2013-10-24 07:33:48,903  INFO | main | org.springframework.web.context.ContextLoader           | Root WebApplicationContext: initialization started 
[0;39m[34m2013-10-24 07:33:49,058  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Refreshing Root WebApplicationContext: startup date [Thu Oct 24 07:33:49 FET 2013]; root of context hierarchy 
[0;39m[34m2013-10-24 07:33:49,151  INFO | main | o.s.beans.factory.xml.XmlBeanDefinitionReader           | Loading XML bean definitions from ServletContext resource [/WEB-INF/report-context.xml] 
[0;39m[34m2013-10-24 07:33:49,586  INFO | main | o.s.context.annotation.ClassPathBeanDefinitionScanner   | JSR-330 'javax.inject.Named' annotation found and supported for component scanning 
[0;39m[34m2013-10-24 07:33:49,953  INFO | main | o.s.beans.factory.xml.XmlBeanDefinitionReader           | Loading XML bean definitions from ServletContext resource [/WEB-INF/report-security.xml] 
[0;39m[34m2013-10-24 07:33:50,074  INFO | main | o.s.security.core.SpringSecurityCoreVersion             | You are running with Spring Security Core 3.0.5.RELEASE 
[0;39m[34m2013-10-24 07:33:50,075  INFO | main | o.s.security.config.SecurityNamespaceHandler            | Spring Security 'config' module version is 3.0.5.RELEASE 
[0;39m[34m2013-10-24 07:33:50,217  INFO | main | o.s.s.config.http.HttpSecurityBeanDefinitionParser      | Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.session.ConcurrentSessionFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 800, Root bean: class [org.springframework.security.web.authentication.www.BasicAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1200, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1500, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1600, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 1900] 
[0;39m[34m2013-10-24 07:33:50,225  INFO | main | o.s.s.c.method.GlobalMethodSecurityBeanDefinitionParser | Using bean 'expressionHandler' as method ExpressionHandler implementation 
[0;39m[34m2013-10-24 07:33:50,880  INFO | main | o.s.c.support.PropertySourcesPlaceholderConfigurer      | Loading properties file from class path resource [report.properties] 
[0;39m[34m2013-10-24 07:33:50,916  INFO | main | o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
[0;39m[34m2013-10-24 07:33:51,164  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'sp.security.ReportsPermissionEvaluator#f53829' of type [class sp.security.ReportsPermissionEvaluator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,170  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'expressionHandler' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,193  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean '(inner bean)' of type [class org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,213  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean '(inner bean)' of type [class org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,220  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource#0' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,236  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.security.methodSecurityMetadataSourceAdvisor' of type [class org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,309  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,315  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[0;39m[34m2013-10-24 07:33:51,354  INFO | main | o.s.beans.factory.support.DefaultListableBeanFactory    | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@23c0bd: defining beans [suggestRepositoryImpl,opRepositoryImpl,reportRepositoryImpl,userRepositoryImpl,solrRepositoryImpl,registerRepositoryImpl,opServiceImpl,emailServiceImpl,registryServiceImpl,solrServiceImpl,reportServiceImpl,suggestServiceImpl,userServiceImpl,backendState,frontendState,spStatsITextPdfBuilder,spPdfBoxPdfBuilder,propertiesReloader,spStaticBeanInjector,propertyService,managerUtil,reportConfig,bitronixJtaConfig,suggestIndex,suggestIndexCreator,suggestIndexSearcher,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,emailMessageSource,backendProperties,frontendProperties,reportsDS,registryDS,jpaVendorAdapter,jpaDialect,entityManagerFactoryReports,entityManagerFactoryRegistry,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor#0,reportsSolrServer,solrTemplate,org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.security.web.PortMapperImpl#0,org.springframework.security.web.context.HttpSessionSecurityContextRepository#0,org.springframework.security.core.session.SessionRegistryImpl#0,org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy#0,org.springframework.security.authentication.ProviderManager#0,org.springframework.security.web.access.channel.ChannelDecisionManagerImpl#0,org.springframework.security.access.vote.AffirmativeBased#0,org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0,org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0,org.springframework.security.authentication.AnonymousAuthenticationProvider#0,org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices#0,org.springframework.security.authentication.RememberMeAuthenticationProvider#0,org.springframework.security.web.savedrequest.HttpSessionRequestCache#0,org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0,org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0,org.springframework.security.config.http.UserDetailsServiceInjectionBeanPostProcessor#0,org.springframework.security.filterChainProxy,org.springframework.security.authentication.dao.DaoAuthenticationProvider#0,org.springframework.security.authentication.DefaultAuthenticationEventPublisher#0,org.springframework.security.authenticationManager,dataSource,userDetailsService,org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource#0,org.springframework.security.access.vote.AffirmativeBased#1,org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor#0,org.springframework.security.methodSecurityMetadataSourceAdvisor,expressionHandler,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0,emailSession,enterpriseDataSource,registryDataSource,btmConfig,bitronixTransactionManager,transactionManagerNative,userTransaction,transactionManager]; root of factory hierarchy 
[0;39m[39m2013-10-24 07:33:51,507 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | building XA pool for jdbc/enterpriseDS with 4 connection(s) 
[0;39m[39m2013-10-24 07:33:51,572 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'user' to 'netbeans' 
[0;39m[39m2013-10-24 07:33:51,583 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'url' to 'jdbc:mysql://localhost:3306/enterprise?autoReconnect=true&characterEncoding=utf8' 
[0;39m[39m2013-10-24 07:33:51,583 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'password' to 'netbeans' 
[0;39m[39m2013-10-24 07:33:51,583 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'databaseName' to 'enterprise' 
[0;39m[39m2013-10-24 07:33:52,285 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:52,285 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:52,299 DEBUG | main | bitronix.tm.Configuration                               | loading default configuration 
[0;39m[39m2013-10-24 07:33:52,301 DEBUG | main | bitronix.tm.Configuration                               | no configuration file found, using default settings 
[0;39m[39m2013-10-24 07:33:52,324 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:52,324 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:52,349 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:52,349 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:52,373 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:52,374 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:52,382 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | task scheduler backed by ConcurrentSkipListSet 
[0;39m[39m2013-10-24 07:33:52,382 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:32:27 FET 1970 
[0;39m[39m2013-10-24 07:33:52,384 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:52,385 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:32:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 1 
[0;39m[34m2013-10-24 07:33:52,506  INFO | main | bitronix.tm.BitronixTransactionManager                  | Bitronix Transaction Manager version 2.1.3 
[0;39m[39m2013-10-24 07:33:52,506 DEBUG | main | bitronix.tm.BitronixTransactionManager                  | JVM version 1.7.0_21 
[0;39m[34m2013-10-24 07:33:52,506  INFO | main | bitronix.tm.Configuration                               | JVM unique ID: <reports-spring-btm-node0> 
[0;39m[39m2013-10-24 07:33:52,508 DEBUG | main | bitronix.tm.BitronixTransactionManager                  | starting BitronixTransactionManager using a Configuration with [allowMultipleLrc=false, asynchronous2Pc=false, backgroundRecoveryInterval=1, backgroundRecoveryIntervalSeconds=60, currentNodeOnlyRecovery=true, debugZeroResourceTransaction=false, defaultTransactionTimeout=60, disableJmx=false, exceptionAnalyzer=null, filterLogStatus=false, forceBatchingEnabled=true, forcedWriteEnabled=true, gracefulShutdownInterval=60, jndiTransactionSynchronizationRegistryName=java:comp/TransactionSynchronizationRegistry, jndiUserTransactionName=java:comp/UserTransaction, journal=disk, logPart1Filename=tx-logs/tx-part1.btm, logPart2Filename=tx-logs/tx-part2.btm, maxLogSizeInMb=2, resourceConfigurationFilename=null, serverId=reports-spring-btm-node0, skipCorruptedLogs=false, warnAboutZeroResourceTransaction=true] 
[0;39m[39m2013-10-24 07:33:52,511 DEBUG | main | bitronix.tm.TransactionManagerServices                  | using journal disk 
[0;39m[39m2013-10-24 07:33:52,512 DEBUG | main | bitronix.tm.journal.DiskJournal                         | disk journal files max length: 2097173 
[0;39m[39m2013-10-24 07:33:52,520 DEBUG | main | bitronix.tm.journal.TransactionLogHeader                | read header a Bitronix TransactionLogHeader with timestamp=59407690, state=UNCLEAN_LOG_STATE, position=21 
[0;39m[39m2013-10-24 07:33:52,520 DEBUG | main | bitronix.tm.journal.TransactionLogAppender              | spawning disk force batcher thread 
[0;39m[39m2013-10-24 07:33:52,528 DEBUG | main | bitronix.tm.journal.TransactionLogHeader                | read header a Bitronix TransactionLogHeader with timestamp=59407501, state=CLEAN_LOG_STATE, position=21 
[0;39m[39m2013-10-24 07:33:52,529 DEBUG | main | bitronix.tm.journal.DiskJournal                         | logging to file 1: a TransactionLogAppender on tx-part1.btm 
[0;39m[39m2013-10-24 07:33:52,530 DEBUG | main | bitronix.tm.journal.DiskJournal                         | log file activated, forcing file state to disk 
[0;39m[39m2013-10-24 07:33:52,530 DEBUG | main | bitronix.tm.journal.DiskForceWaitQueue                  | enqueued a TransactionLogAppender on tx-part1.btm, 1 TransactionLogAppender waiting for a disk force in bitronix.tm.journal.DiskForceWaitQueue@48993c 
[0;39m[39m2013-10-24 07:33:52,530 DEBUG | main | bitronix.tm.journal.DiskForceBatcherThread              | batching disk force, there are 1 TransactionLogAppender(s) in the wait queue 
[0;39m[39m2013-10-24 07:33:52,532 DEBUG | main | bitronix.tm.journal.DiskForceWaitQueue                  | waiting for a TransactionLogAppender on tx-part1.btm to get dequeued 
[0;39m[39m2013-10-24 07:33:52,532 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | disk force thread is up and running 
[0;39m[39m2013-10-24 07:33:52,533 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | waiting for the wait queue to fill up 
[0;39m[39m2013-10-24 07:33:52,534 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | wait queue is not empty anymore (1 in queue) 
[0;39m[39m2013-10-24 07:33:52,535 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | forcing... 
[0;39m[39m2013-10-24 07:33:52,535 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | returning head TransactionLogAppender 
[0;39m[39m2013-10-24 07:33:52,536 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.TransactionLogAppender              | forcing log writing 
[0;39m[39m2013-10-24 07:33:52,588 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.TransactionLogAppender              | done forcing log 
[0;39m[39m2013-10-24 07:33:52,589 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | clearing list of 1 waiting TransactionLogAppender(s) in bitronix.tm.journal.DiskForceWaitQueue@48993c 
[0;39m[39m2013-10-24 07:33:52,589 DEBUG | main | bitronix.tm.journal.DiskForceBatcherThread              | wait queue got emptied, disk force is done 
[0;39m[31m2013-10-24 07:33:52,589  WARN | main | bitronix.tm.journal.DiskJournal                         | active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? 
[0;39m[39m2013-10-24 07:33:52,590 DEBUG | main | bitronix.tm.journal.DiskJournal                         | disk journal opened 
[0;39m[39m2013-10-24 07:33:52,590 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceBatcherThread              | waiting for the wait queue to fill up 
[0;39m[39m2013-10-24 07:33:52,590 DEBUG | bitronix-disk-force-batcher | bitronix.tm.journal.DiskForceWaitQueue                  | waiting for some TransactionLogAppender to get enqueued 
[0;39m[39m2013-10-24 07:33:52,592 DEBUG | main | bitronix.tm.resource.ResourceLoader                     | no resource configuration file specified 
[0;39m[39m2013-10-24 07:33:52,602 DEBUG | main | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:33:52,602 DEBUG | main | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:33:52,603 DEBUG | main | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:33:52,603 DEBUG | main | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:52,603 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:52,604 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:33:52,604 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:52,604 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:52,605 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:52,605 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:52,605 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:52,606 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:33:52,606 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,487 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,490 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,497 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:33:53,499 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:33:53,499 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:33:53,499 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:33:53,500 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@687c01 
[0;39m[39m2013-10-24 07:33:53,500 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:33:53,501 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,501 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:33:53,501 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,501 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:33:53,502 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,502 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,503 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | transaction manager not running, there is no in-flight transaction 
[0;39m[39m2013-10-24 07:33:53,503 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,503 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,503 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:33:53,504 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:33:53,504 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,504 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,505 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:53,505 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:33:53,505 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:53,505 DEBUG | main | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:33:53,506 DEBUG | main | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:33:53,506 DEBUG | main | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:33:53,506 DEBUG | main | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:33:53,507 DEBUG | main | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:33:53,507 DEBUG | main | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:33:53,507 DEBUG | main | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[34m2013-10-24 07:33:53,508  INFO | main | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 1 resource(s) [jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:33:53,508 DEBUG | main | bitronix.tm.BitronixTransactionManager                  | recovery will run in the background every 60 second(s) 
[0;39m[39m2013-10-24 07:33:53,509 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:32:28 FET 1970 
[0;39m[39m2013-10-24 07:33:53,509 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:33:53,510 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:32:28 FET 1970, total task(s) queued: 2 
[0;39m[34m2013-10-24 07:33:53,573  INFO | main | o.springframework.transaction.jta.JtaTransactionManager | Using JTA UserTransaction: a BitronixTransactionManager with 0 in-flight transaction(s) 
[0;39m[34m2013-10-24 07:33:53,573  INFO | main | o.springframework.transaction.jta.JtaTransactionManager | Using JTA TransactionManager: a BitronixTransactionManager with 0 in-flight transaction(s) 
[0;39m[34m2013-10-24 07:33:53,707  INFO | main | o.s.orm.jpa.LocalContainerEntityManagerFactoryBean      | Building JPA container EntityManagerFactory for persistence unit 'reportPU' 
[0;39m[39m2013-10-24 07:33:53,804 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:53,804 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:53,805 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:53,807 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c5e4bb 
[0;39m[39m2013-10-24 07:33:53,810 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bd8663 
[0;39m[39m2013-10-24 07:33:53,812 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@126adbb 
[0;39m[39m2013-10-24 07:33:53,820 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:53,820 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:53,821 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:53,823 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:53,824 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:53,824 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:53,830 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:53,830 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:53,830 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:53,834 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:53,834 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:53,835 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:53,839 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:53,839 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:53,840 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:53,844 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:53,844 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:53,845 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:53,848 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:53,849 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:53,849 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:53,853 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:53,854 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:53,857 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:53,858 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:53,861 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:53,861 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:53,866 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:53,867 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:53,871 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:53,872 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:53,876 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:53,877 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:53,881 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:53,881 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:53,882 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:53,884 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157d1a0 
[0;39m[39m2013-10-24 07:33:53,891 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:53,891 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:53,891 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:53,893 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12fa3df 
[0;39m[39m2013-10-24 07:33:53,896 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:53,896 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:53,898 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:53,899 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:53,901 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:53,902 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:53,904 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:53,904 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:53,908 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:53,909 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:53,910 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b50aa4 
[0;39m[39m2013-10-24 07:33:53,912 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c08448 
[0;39m[39m2013-10-24 07:33:53,917 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:53,918 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:53,918 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:53,921 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:53,922 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:53,922 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:53,924 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@9cc02f 
[0;39m[39m2013-10-24 07:33:53,927 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:53,927 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:53,928 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:53,931 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:53,932 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:53,932 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:53,934 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@aa90bb 
[0;39m[39m2013-10-24 07:33:53,948 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:53,949 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:53,950 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:53,952 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:53,963 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:53,964 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:53,968 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:53,969 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:53,971 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:53,974 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@cfc4bb 
[0;39m[39m2013-10-24 07:33:53,980 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:53,981 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:53,982 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@155f 
[0;39m[39m2013-10-24 07:33:53,983 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17b130c 
[0;39m[39m2013-10-24 07:33:53,983 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11fb201 
[0;39m[39m2013-10-24 07:33:53,983 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1df9dc7 
[0;39m[39m2013-10-24 07:33:53,983 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ef7bf5 
[0;39m[39m2013-10-24 07:33:53,983 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b3233a 
[0;39m[39m2013-10-24 07:33:53,984 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cdef27 
[0;39m[39m2013-10-24 07:33:53,984 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10ffddb 
[0;39m[34m2013-10-24 07:33:54,037  INFO | main | org.hibernate.annotations.common.Version                | Hibernate Commons Annotations 3.2.0.Final 
[0;39m[34m2013-10-24 07:33:54,048  INFO | main | org.hibernate.cfg.Environment                           | Hibernate 3.6.3.Final 
[0;39m[34m2013-10-24 07:33:54,052  INFO | main | org.hibernate.cfg.Environment                           | hibernate.properties not found 
[0;39m[34m2013-10-24 07:33:54,058  INFO | main | org.hibernate.cfg.Environment                           | Bytecode provider name : javassist 
[0;39m[34m2013-10-24 07:33:54,066  INFO | main | org.hibernate.cfg.Environment                           | using JDK 1.4 java.sql.Timestamp handling 
[0;39m[39m2013-10-24 07:33:54,167 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator] 
[0;39m[39m2013-10-24 07:33:54,168 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator] 
[0;39m[39m2013-10-24 07:33:54,170 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:33:54,170 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:33:54,174 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator] 
[0;39m[39m2013-10-24 07:33:54,175 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned] 
[0;39m[39m2013-10-24 07:33:54,177 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator] 
[0;39m[39m2013-10-24 07:33:54,178 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator] 
[0;39m[39m2013-10-24 07:33:54,180 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator] 
[0;39m[39m2013-10-24 07:33:54,181 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator] 
[0;39m[39m2013-10-24 07:33:54,182 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator] 
[0;39m[39m2013-10-24 07:33:54,183 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator] 
[0;39m[39m2013-10-24 07:33:54,184 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator] 
[0;39m[39m2013-10-24 07:33:54,186 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator] 
[0;39m[39m2013-10-24 07:33:54,187 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator] 
[0;39m[34m2013-10-24 07:33:54,190  INFO | main | org.hibernate.ejb.Version                               | Hibernate EntityManager 3.6.3.Final 
[0;39m[39m2013-10-24 07:33:54,191 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:54,191 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:54,191 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:54,191 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c5e4bb 
[0;39m[39m2013-10-24 07:33:54,192 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bd8663 
[0;39m[39m2013-10-24 07:33:54,192 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@126adbb 
[0;39m[39m2013-10-24 07:33:54,192 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:54,193 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:54,193 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:54,193 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:54,194 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:54,194 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:54,194 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:54,194 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:54,194 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:54,195 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:54,195 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:54,195 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:54,195 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:54,196 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:54,196 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:54,196 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:54,196 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:54,197 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:54,197 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:54,197 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:54,197 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:54,198 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:54,198 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:54,198 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:54,198 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:54,199 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:54,199 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:54,199 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:54,199 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:54,200 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:54,200 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:54,200 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:54,200 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:54,201 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:54,201 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:54,201 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:54,201 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157d1a0 
[0;39m[39m2013-10-24 07:33:54,202 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:54,202 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:54,202 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:54,202 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12fa3df 
[0;39m[39m2013-10-24 07:33:54,203 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:54,203 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:54,203 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:54,204 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:54,204 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:54,205 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:54,205 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:54,205 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:54,206 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:54,206 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:54,206 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b50aa4 
[0;39m[39m2013-10-24 07:33:54,206 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c08448 
[0;39m[39m2013-10-24 07:33:54,206 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:54,207 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:54,207 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:54,207 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:54,207 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:54,208 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:54,208 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@9cc02f 
[0;39m[39m2013-10-24 07:33:54,208 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:54,209 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:54,209 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:54,209 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:54,209 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:54,210 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:54,210 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@aa90bb 
[0;39m[39m2013-10-24 07:33:54,210 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:54,210 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:54,211 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:54,211 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:54,211 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:54,212 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:54,212 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:54,212 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:54,213 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:54,213 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@cfc4bb 
[0;39m[39m2013-10-24 07:33:54,213 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:54,214 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:54,215 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b9451e 
[0;39m[39m2013-10-24 07:33:54,215 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68bb9b 
[0;39m[39m2013-10-24 07:33:54,215 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f4fdf3 
[0;39m[39m2013-10-24 07:33:54,216 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14c63ad 
[0;39m[39m2013-10-24 07:33:54,216 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@241b87 
[0;39m[39m2013-10-24 07:33:54,216 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b4c8d 
[0;39m[39m2013-10-24 07:33:54,217 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14eceb2 
[0;39m[39m2013-10-24 07:33:54,217 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e43d1a 
[0;39m[39m2013-10-24 07:33:54,217 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator] 
[0;39m[39m2013-10-24 07:33:54,218 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator] 
[0;39m[39m2013-10-24 07:33:54,218 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:33:54,218 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:33:54,219 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator] 
[0;39m[39m2013-10-24 07:33:54,219 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned] 
[0;39m[39m2013-10-24 07:33:54,219 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator] 
[0;39m[39m2013-10-24 07:33:54,219 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator] 
[0;39m[39m2013-10-24 07:33:54,220 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator] 
[0;39m[39m2013-10-24 07:33:54,220 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator] 
[0;39m[39m2013-10-24 07:33:54,220 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator] 
[0;39m[39m2013-10-24 07:33:54,221 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator] 
[0;39m[39m2013-10-24 07:33:54,221 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator] 
[0;39m[39m2013-10-24 07:33:54,221 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator] 
[0;39m[39m2013-10-24 07:33:54,221 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator] 
[0;39m[39m2013-10-24 07:33:54,259 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Processing PersistenceUnitInfo [
	name: reportPU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: /solr
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat6-maven-plugin:2.1, parent: sun.misc.Launcher$AppClassLoader@1644028]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18e56c2
	excludeUnlistedClasses: true
	JTA datasource: a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available)
	Non JTA datasource: null
	Transaction type: JTA
	PU root URL: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sp.model.Report]
	Mapping files names []
	Properties [
		hibernate.archive.autodetection: class] 
[0;39m[39m2013-10-24 07:33:54,263 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:33:54,265 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:33:54,274 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Searching mapped entities in jar/par: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes 
[0;39m[39m2013-10-24 07:33:54,276 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.ReportsException 
[0;39m[39m2013-10-24 07:33:54,307 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.SpException 
[0;39m[39m2013-10-24 07:33:54,308 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepository 
[0;39m[39m2013-10-24 07:33:54,312 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepository 
[0;39m[39m2013-10-24 07:33:54,313 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepositoryImpl 
[0;39m[39m2013-10-24 07:33:54,333 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepositoryImpl 
[0;39m[39m2013-10-24 07:33:54,334 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepository 
[0;39m[39m2013-10-24 07:33:54,334 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepositoryImpl 
[0;39m[39m2013-10-24 07:33:54,336 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepository 
[0;39m[39m2013-10-24 07:33:54,337 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepositoryImpl 
[0;39m[39m2013-10-24 07:33:54,338 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepositoryImpl 
[0;39m[39m2013-10-24 07:33:54,341 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepository 
[0;39m[39m2013-10-24 07:33:54,342 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepository 
[0;39m[39m2013-10-24 07:33:54,342 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepositoryImpl 
[0;39m[39m2013-10-24 07:33:54,344 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.system.SystemConstants 
[0;39m[39m2013-10-24 07:33:54,345 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpServiceImpl 
[0;39m[39m2013-10-24 07:33:54,346 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrService 
[0;39m[39m2013-10-24 07:33:54,346 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ReportRESTFacade 
[0;39m[39m2013-10-24 07:33:54,350 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ApplicationConfig 
[0;39m[39m2013-10-24 07:33:54,350 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryService 
[0;39m[39m2013-10-24 07:33:54,351 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailServiceImpl 
[0;39m[39m2013-10-24 07:33:54,353 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryServiceImpl 
[0;39m[39m2013-10-24 07:33:54,354 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailService 
[0;39m[39m2013-10-24 07:33:54,354 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrServiceImpl 
[0;39m[39m2013-10-24 07:33:54,355 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportServiceImpl 
[0;39m[39m2013-10-24 07:33:54,356 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestService 
[0;39m[39m2013-10-24 07:33:54,357 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportService 
[0;39m[39m2013-10-24 07:33:54,358 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestServiceImpl 
[0;39m[39m2013-10-24 07:33:54,359 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserServiceImpl 
[0;39m[39m2013-10-24 07:33:54,360 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserService 
[0;39m[39m2013-10-24 07:33:54,360 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpService 
[0;39m[39m2013-10-24 07:33:54,361 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op_ 
[0;39m[39m2013-10-24 07:33:54,361 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report 
[0;39m[39m2013-10-24 07:33:54,363 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Report 
[0;39m[39m2013-10-24 07:33:54,364 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User 
[0;39m[39m2013-10-24 07:33:54,366 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.User 
[0;39m[39m2013-10-24 07:33:54,367 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.AjaxResponse 
[0;39m[39m2013-10-24 07:33:54,369 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ErrorDetails 
[0;39m[39m2013-10-24 07:33:54,370 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Tuple 
[0;39m[39m2013-10-24 07:33:54,371 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Prompt 
[0;39m[39m2013-10-24 07:33:54,373 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ResultPager 
[0;39m[39m2013-10-24 07:33:54,374 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Statistics 
[0;39m[39m2013-10-24 07:33:54,375 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register 
[0;39m[39m2013-10-24 07:33:54,377 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Register 
[0;39m[39m2013-10-24 07:33:54,377 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.RegisterId 
[0;39m[39m2013-10-24 07:33:54,378 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.RegisterId 
[0;39m[39m2013-10-24 07:33:54,379 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op 
[0;39m[39m2013-10-24 07:33:54,380 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Op 
[0;39m[39m2013-10-24 07:33:54,380 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchable 
[0;39m[39m2013-10-24 07:33:54,381 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchableField 
[0;39m[39m2013-10-24 07:33:54,382 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report_ 
[0;39m[39m2013-10-24 07:33:54,383 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState$GenericStateHolder 
[0;39m[39m2013-10-24 07:33:54,383 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.BackendState 
[0;39m[39m2013-10-24 07:33:54,384 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.FrontendState 
[0;39m[39m2013-10-24 07:33:54,385 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.State 
[0;39m[39m2013-10-24 07:33:54,385 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState 
[0;39m[39m2013-10-24 07:33:54,386 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User_ 
[0;39m[39m2013-10-24 07:33:54,386 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register_ 
[0;39m[39m2013-10-24 07:33:54,387 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatisticsGenerator 
[0;39m[39m2013-10-24 07:33:54,389 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory$DateFormatSymbolsRu 
[0;39m[39m2013-10-24 07:33:54,390 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpHasher 
[0;39m[39m2013-10-24 07:33:54,390 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBuilder 
[0;39m[39m2013-10-24 07:33:54,391 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpContextLoaderListener 
[0;39m[39m2013-10-24 07:33:54,392 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLightPager 
[0;39m[39m2013-10-24 07:33:54,392 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ValidationBootstrap 
[0;39m[39m2013-10-24 07:33:54,393 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ReportDateEditor 
[0;39m[39m2013-10-24 07:33:54,394 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatsITextPdfBuilder 
[0;39m[39m2013-10-24 07:33:54,397 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBoxPdfBuilder 
[0;39m[39m2013-10-24 07:33:54,399 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpSortDefinition 
[0;39m[39m2013-10-24 07:33:54,399 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertiesReloader 
[0;39m[39m2013-10-24 07:33:54,400 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.SpStaticBeanInjector 
[0;39m[39m2013-10-24 07:33:54,401 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.Reloader 
[0;39m[39m2013-10-24 07:33:54,402 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertyService 
[0;39m[39m2013-10-24 07:33:54,402 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.EncodingPostProcessor 
[0;39m[39m2013-10-24 07:33:54,403 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory 
[0;39m[39m2013-10-24 07:33:54,404 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPageable 
[0;39m[39m2013-10-24 07:33:54,405 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLazyPager 
[0;39m[39m2013-10-24 07:33:54,406 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPagedListHolder 
[0;39m[39m2013-10-24 07:33:54,407 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPopulateDb 
[0;39m[39m2013-10-24 07:33:54,409 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ManagerUtil 
[0;39m[39m2013-10-24 07:33:54,410 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateTool 
[0;39m[39m2013-10-24 07:33:54,410 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AdminController 
[0;39m[39m2013-10-24 07:33:54,411 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ChecklistController 
[0;39m[39m2013-10-24 07:33:54,413 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ForwardController 
[0;39m[39m2013-10-24 07:33:54,414 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.HomeController 
[0;39m[39m2013-10-24 07:33:54,414 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ErrorController 
[0;39m[39m2013-10-24 07:33:54,415 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController 
[0;39m[39m2013-10-24 07:33:54,416 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SuggestController 
[0;39m[39m2013-10-24 07:33:54,418 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.EmailController 
[0;39m[39m2013-10-24 07:33:54,419 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.RegistryController 
[0;39m[39m2013-10-24 07:33:54,420 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SolrSuggestController 
[0;39m[39m2013-10-24 07:33:54,422 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.LoginController 
[0;39m[39m2013-10-24 07:33:54,423 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController$1 
[0;39m[39m2013-10-24 07:33:54,424 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ReportController 
[0;39m[39m2013-10-24 07:33:54,426 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig 
[0;39m[39m2013-10-24 07:33:54,427 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.BitronixJtaConfig 
[0;39m[39m2013-10-24 07:33:54,428 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig$1 
[0;39m[39m2013-10-24 07:33:54,429 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.interceptor.UserInterceptor 
[0;39m[39m2013-10-24 07:33:54,430 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReportConstraintValidator 
[0;39m[39m2013-10-24 07:33:54,431 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.SystemPropertyValidator 
[0;39m[39m2013-10-24 07:33:54,432 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReport 
[0;39m[39m2013-10-24 07:33:54,433 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDate 
[0;39m[39m2013-10-24 07:33:54,434 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDateConstraintValidator 
[0;39m[39m2013-10-24 07:33:54,434 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.security.ReportsPermissionEvaluator 
[0;39m[39m2013-10-24 07:33:54,435 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSuggester 
[0;39m[39m2013-10-24 07:33:54,436 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSearcher 
[0;39m[39m2013-10-24 07:33:54,436 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.Index 
[0;39m[39m2013-10-24 07:33:54,437 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndex 
[0;39m[39m2013-10-24 07:33:54,438 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexCreator 
[0;39m[39m2013-10-24 07:33:54,439 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexCreator 
[0;39m[39m2013-10-24 07:33:54,440 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexSearcher 
[0;39m[39m2013-10-24 07:33:54,506 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:33:54,506 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[34m2013-10-24 07:33:54,512  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Report 
[0;39m[34m2013-10-24 07:33:54,542  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getPerformers => select distinct r.performer from Report r 
[0;39m[34m2013-10-24 07:33:54,543  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPerformer => select r from Report r where r.performer = :performer 
[0;39m[34m2013-10-24 07:33:54,543  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReports => select r from Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:33:54,543  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPeriod => select r from Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:33:54,543  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByIds => select r from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:33:54,544  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReport => select r from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:33:54,544  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReports => select count(r) from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:33:54,544  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.removeReport => delete from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:33:54,545  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getAllReports => select r from Report r 
[0;39m[39m2013-10-24 07:33:54,562 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:54,577 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Report 
[0;39m[34m2013-10-24 07:33:54,584  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Report on table reports 
[0;39m[39m2013-10-24 07:33:54,674 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:33:54,681 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:54,684 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:54,687 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:54,693 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=activity, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,693 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property activity with lazy=false 
[0;39m[39m2013-10-24 07:33:54,694 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for activity 
[0;39m[39m2013-10-24 07:33:54,694 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property activity 
[0;39m[39m2013-10-24 07:33:54,694 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=endDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,695 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property endDate with lazy=false 
[0;39m[39m2013-10-24 07:33:54,696 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for endDate 
[0;39m[39m2013-10-24 07:33:54,696 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property endDate 
[0;39m[39m2013-10-24 07:33:54,696 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=performer, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,697 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property performer with lazy=false 
[0;39m[39m2013-10-24 07:33:54,697 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for performer 
[0;39m[39m2013-10-24 07:33:54,697 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property performer 
[0;39m[39m2013-10-24 07:33:54,697 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=startDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,697 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property startDate with lazy=false 
[0;39m[39m2013-10-24 07:33:54,698 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for startDate 
[0;39m[39m2013-10-24 07:33:54,698 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property startDate 
[0;39m[34m2013-10-24 07:33:54,700  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Register 
[0;39m[34m2013-10-24 07:33:54,701  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.find => select r from Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[34m2013-10-24 07:33:54,701  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.findByPeriod => select r from Register r where r.recordTime between :startDate and :endDate 
[0;39m[34m2013-10-24 07:33:54,701  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByOp => select r from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:33:54,701  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByUser => select r from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:33:54,701  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getAll => select r from Register r order by r.recordTime desc 
[0;39m[34m2013-10-24 07:33:54,701  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countAll => select count(r.op) from Register r 
[0;39m[34m2013-10-24 07:33:54,702  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByOp => select count(r.op) from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:33:54,702  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUser => select count(r.op) from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:33:54,702  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUserAndOp => select count(r.op) from Register r where r.user = :user and r.op = :op 
[0;39m[34m2013-10-24 07:33:54,702  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getLastIdByUserAndOp => select r.id.id from Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:33:54,702 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:54,703 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Register 
[0;39m[34m2013-10-24 07:33:54,703  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Register on table registers 
[0;39m[39m2013-10-24 07:33:54,713 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,720 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property id 
[0;39m[39m2013-10-24 07:33:54,720 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,721 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:54,721 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:54,721 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:54,721 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property opId 
[0;39m[39m2013-10-24 07:33:54,722 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,722 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property opId with lazy=false 
[0;39m[39m2013-10-24 07:33:54,722 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for opId 
[0;39m[39m2013-10-24 07:33:54,722 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property opId 
[0;39m[39m2013-10-24 07:33:54,723 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property userId 
[0;39m[39m2013-10-24 07:33:54,723 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,723 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property userId with lazy=false 
[0;39m[39m2013-10-24 07:33:54,724 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for userId 
[0;39m[39m2013-10-24 07:33:54,724 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property userId 
[0;39m[39m2013-10-24 07:33:54,724 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:54,727 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='op_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:33:54,727 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,735 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property op 
[0;39m[39m2013-10-24 07:33:54,736 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=record_time, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,736 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property recordTime with lazy=false 
[0;39m[39m2013-10-24 07:33:54,736 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for recordTime 
[0;39m[39m2013-10-24 07:33:54,737 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property recordTime 
[0;39m[39m2013-10-24 07:33:54,737 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:33:54,737 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,738 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property user 
[0;39m[34m2013-10-24 07:33:54,738  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.User 
[0;39m[34m2013-10-24 07:33:54,738  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: User.findByFullname => select u from User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:33:54,739 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:54,739 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name User 
[0;39m[34m2013-10-24 07:33:54,739  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.User on table users 
[0;39m[39m2013-10-24 07:33:54,748 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:33:54,750 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:54,750 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:54,750 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:54,751 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=email, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,752 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property email with lazy=false 
[0;39m[39m2013-10-24 07:33:54,752 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for email 
[0;39m[39m2013-10-24 07:33:54,752 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property email 
[0;39m[39m2013-10-24 07:33:54,753 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=fullname, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,753 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property fullname with lazy=false 
[0;39m[39m2013-10-24 07:33:54,754 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for fullname 
[0;39m[39m2013-10-24 07:33:54,754 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property fullname 
[0;39m[39m2013-10-24 07:33:54,754 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=job, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,754 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property job with lazy=false 
[0;39m[39m2013-10-24 07:33:54,755 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for job 
[0;39m[39m2013-10-24 07:33:54,755 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property job 
[0;39m[39m2013-10-24 07:33:54,755 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:33:54,756 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,759 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,787 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,788 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,792 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:33:54,794 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:33:54,794 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:33:54,796 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.User.registers 
[0;39m[39m2013-10-24 07:33:54,802 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[34m2013-10-24 07:33:54,803  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Op 
[0;39m[34m2013-10-24 07:33:54,803  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Op.findByTitle => select o from Op o where o.title = :title 
[0;39m[39m2013-10-24 07:33:54,803 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:54,803 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Op 
[0;39m[34m2013-10-24 07:33:54,804  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Op on table ops 
[0;39m[39m2013-10-24 07:33:54,806 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:33:54,806 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:54,807 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:54,807 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:54,807 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=description, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,807 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property description with lazy=false 
[0;39m[39m2013-10-24 07:33:54,807 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for description 
[0;39m[39m2013-10-24 07:33:54,808 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property description 
[0;39m[39m2013-10-24 07:33:54,808 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:33:54,808 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,808 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:33:54,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:33:54,809 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:33:54,809 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:33:54,810 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[39m2013-10-24 07:33:54,810 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=title, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:54,810 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property title with lazy=false 
[0;39m[39m2013-10-24 07:33:54,810 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for title 
[0;39m[39m2013-10-24 07:33:54,811 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property title 
[0;39m[39m2013-10-24 07:33:54,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:54,812 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for activity 
[0;39m[39m2013-10-24 07:33:54,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for endDate 
[0;39m[39m2013-10-24 07:33:54,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for performer 
[0;39m[39m2013-10-24 07:33:54,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for startDate 
[0;39m[39m2013-10-24 07:33:54,813 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for opId 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for userId 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for recordTime 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for email 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for fullname 
[0;39m[39m2013-10-24 07:33:54,814 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for job 
[0;39m[39m2013-10-24 07:33:54,815 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:54,815 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for description 
[0;39m[39m2013-10-24 07:33:54,815 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for title 
[0;39m[39m2013-10-24 07:33:54,816 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:33:54,823 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:54,823 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:54,823 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:33:54,824 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:33:54,824 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.User.registers through a foreign key 
[0;39m[34m2013-10-24 07:33:54,826  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.User.registers -> registers 
[0;39m[39m2013-10-24 07:33:54,828 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.user 
[0;39m[39m2013-10-24 07:33:54,829 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: user_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:33:54,829 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:33:54,830 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.Op.registers through a foreign key 
[0;39m[34m2013-10-24 07:33:54,830  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.Op.registers -> registers 
[0;39m[39m2013-10-24 07:33:54,830 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.op 
[0;39m[39m2013-10-24 07:33:54,831 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: op_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:33:54,831 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:33:54,831 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:33:54,831 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:33:54,832 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:33:54,832 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[34m2013-10-24 07:33:54,834  INFO | main | org.hibernate.cfg.Configuration                         | Hibernate Validator not found: ignoring 
[0;39m[39m2013-10-24 07:33:55,174 DEBUG | main | org.hibernate.ejb.util.NamingHelper                     | No JNDI name configured for binding Ejb3Configuration 
[0;39m[39m2013-10-24 07:33:55,177 DEBUG | main | org.hibernate.cfg.Configuration                         | Preparing to build session factory with filters : {} 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:33:55,178 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:33:55,179 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:33:55,179 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:33:55,179 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:33:55,179 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[39m2013-10-24 07:33:55,206 DEBUG | main | org.hibernate.cfg.Configuration                         | Legacy Validator not present in classpath, ignoring event listener registration 
[0;39m[39m2013-10-24 07:33:55,213 DEBUG | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Search not present in classpath, ignoring event listener registration. 
[0;39m[34m2013-10-24 07:33:55,213  INFO | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled. 
[0;39m[34m2013-10-24 07:33:55,238  INFO | main | org.hibernate.connection.ConnectionProviderFactory      | Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider 
[0;39m[34m2013-10-24 07:33:55,244  INFO | main | o.h.ejb.connection.InjectedDataSourceConnectionProvider | Using provided datasource 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.common.XAPool                      | trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.common.XAPool                      | no current transaction, no connection can be in state NOT_ACCESSIBLE when there is no global transaction context 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:55,245 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,246 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,246 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,246 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,246 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:33:55,246 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,264 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,265 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,265 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[34m2013-10-24 07:33:55,304  INFO | main | org.hibernate.dialect.Dialect                           | Using dialect: org.hibernate.dialect.MySQL5Dialect 
[0;39m[34m2013-10-24 07:33:55,318  INFO | main | org.hibernate.cfg.SettingsFactory                       | Database ->
       name : MySQL
    version : 5.5.32-0ubuntu0.12.04.1
      major : 5
      minor : 5 
[0;39m[34m2013-10-24 07:33:55,318  INFO | main | org.hibernate.cfg.SettingsFactory                       | Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1 
[0;39m[39m2013-10-24 07:33:55,319 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:33:55,319 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,319 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:33:55,319 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,319 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:33:55,319 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,320 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,320 DEBUG | main | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,320 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,320 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,320 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:33:55,321 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:33:55,321 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,321 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:33:55,321 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:55,321 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:33:55,321 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[34m2013-10-24 07:33:55,322  INFO | main | org.hibernate.transaction.TransactionFactoryFactory     | Transaction strategy: org.hibernate.ejb.transaction.JoinableCMTTransactionFactory 
[0;39m[34m2013-10-24 07:33:55,324  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiating TransactionManagerLookup: org.hibernate.transaction.BTMTransactionManagerLookup 
[0;39m[34m2013-10-24 07:33:55,325  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiated TransactionManagerLookup 
[0;39m[34m2013-10-24 07:33:55,325  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic flush during beforeCompletion(): disabled 
[0;39m[34m2013-10-24 07:33:55,326  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic session close at end of transaction: disabled 
[0;39m[34m2013-10-24 07:33:55,326  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch size: 15 
[0;39m[34m2013-10-24 07:33:55,326  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch updates for versioned data: disabled 
[0;39m[34m2013-10-24 07:33:55,327  INFO | main | org.hibernate.cfg.SettingsFactory                       | Scrollable result sets: enabled 
[0;39m[39m2013-10-24 07:33:55,327 DEBUG | main | org.hibernate.cfg.SettingsFactory                       | Wrap result sets: disabled 
[0;39m[34m2013-10-24 07:33:55,327  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC3 getGeneratedKeys(): enabled 
[0;39m[34m2013-10-24 07:33:55,327  INFO | main | org.hibernate.cfg.SettingsFactory                       | Connection release mode: auto 
[0;39m[34m2013-10-24 07:33:55,328  INFO | main | org.hibernate.cfg.SettingsFactory                       | Maximum outer join fetch depth: 2 
[0;39m[34m2013-10-24 07:33:55,328  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default batch fetch size: 1 
[0;39m[34m2013-10-24 07:33:55,328  INFO | main | org.hibernate.cfg.SettingsFactory                       | Generate SQL with comments: disabled 
[0;39m[34m2013-10-24 07:33:55,329  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL updates by primary key: disabled 
[0;39m[34m2013-10-24 07:33:55,329  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL inserts for batching: disabled 
[0;39m[34m2013-10-24 07:33:55,329  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:33:55,331  INFO | main | org.hibernate.hql.ast.ASTQueryTranslatorFactory         | Using ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:33:55,331  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query language substitutions: {} 
[0;39m[34m2013-10-24 07:33:55,332  INFO | main | org.hibernate.cfg.SettingsFactory                       | JPA-QL strict compliance: enabled 
[0;39m[34m2013-10-24 07:33:55,332  INFO | main | org.hibernate.cfg.SettingsFactory                       | Second-level cache: enabled 
[0;39m[34m2013-10-24 07:33:55,332  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query cache: disabled 
[0;39m[34m2013-10-24 07:33:55,332  INFO | main | org.hibernate.cfg.SettingsFactory                       | Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory 
[0;39m[34m2013-10-24 07:33:55,333  INFO | main | org.hibernate.cfg.SettingsFactory                       | Optimize cache for minimal puts: disabled 
[0;39m[34m2013-10-24 07:33:55,333  INFO | main | org.hibernate.cfg.SettingsFactory                       | Structured second-level cache entries: disabled 
[0;39m[34m2013-10-24 07:33:55,338  INFO | main | org.hibernate.cfg.SettingsFactory                       | Echoing all SQL to stdout 
[0;39m[34m2013-10-24 07:33:55,339  INFO | main | org.hibernate.cfg.SettingsFactory                       | Statistics: disabled 
[0;39m[34m2013-10-24 07:33:55,339  INFO | main | org.hibernate.cfg.SettingsFactory                       | Deleted entity synthetic identifier rollback: disabled 
[0;39m[34m2013-10-24 07:33:55,340  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default entity-mode: pojo 
[0;39m[34m2013-10-24 07:33:55,340  INFO | main | org.hibernate.cfg.SettingsFactory                       | Named query checking : enabled 
[0;39m[34m2013-10-24 07:33:55,340  INFO | main | org.hibernate.cfg.SettingsFactory                       | Check Nullability in Core (should be disabled when Bean Validation is on): disabled 
[0;39m[34m2013-10-24 07:33:55,392  INFO | main | org.hibernate.impl.SessionFactoryImpl                   | building session factory 
[0;39m[39m2013-10-24 07:33:55,399 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Statistics initialized [enabled=false]} 
[0;39m[39m2013-10-24 07:33:55,401 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:55,402 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:55,402 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:55,402 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c5e4bb 
[0;39m[39m2013-10-24 07:33:55,403 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bd8663 
[0;39m[39m2013-10-24 07:33:55,403 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@126adbb 
[0;39m[39m2013-10-24 07:33:55,403 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:55,403 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:55,403 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:55,404 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:55,404 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:55,404 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:55,404 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:55,404 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:55,404 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:55,405 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:55,405 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:55,405 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:55,405 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:55,406 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:55,406 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:55,406 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:55,406 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:55,406 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:55,407 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:55,407 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:55,407 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:55,407 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:55,408 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:55,408 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:55,408 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:55,408 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:55,409 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:55,409 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:55,409 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:55,409 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:55,409 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:55,410 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:55,410 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:55,410 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:55,410 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:55,410 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:55,411 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157d1a0 
[0;39m[39m2013-10-24 07:33:55,411 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:55,411 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:55,411 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:55,412 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12fa3df 
[0;39m[39m2013-10-24 07:33:55,412 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:55,412 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:55,412 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:55,412 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:55,413 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:55,413 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:55,413 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:55,413 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:55,413 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:55,413 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:55,414 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b50aa4 
[0;39m[39m2013-10-24 07:33:55,414 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c08448 
[0;39m[39m2013-10-24 07:33:55,414 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:55,414 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:55,415 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:55,415 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:55,415 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:55,415 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:55,415 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@9cc02f 
[0;39m[39m2013-10-24 07:33:55,416 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:55,416 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:55,416 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:55,416 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:55,416 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:55,417 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:55,417 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@aa90bb 
[0;39m[39m2013-10-24 07:33:55,417 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:55,417 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:55,417 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:55,418 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:55,418 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:55,418 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:55,418 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:55,418 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:55,419 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:55,419 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@cfc4bb 
[0;39m[39m2013-10-24 07:33:55,419 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:55,419 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:55,419 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@efd14f 
[0;39m[39m2013-10-24 07:33:55,420 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@96c620 
[0;39m[39m2013-10-24 07:33:55,420 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a96c83 
[0;39m[39m2013-10-24 07:33:55,420 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1131d35 
[0;39m[39m2013-10-24 07:33:55,420 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e2ad2f 
[0;39m[39m2013-10-24 07:33:55,420 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d7eec1 
[0;39m[39m2013-10-24 07:33:55,420 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7be957 
[0;39m[39m2013-10-24 07:33:55,421 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11470da 
[0;39m[39m2013-10-24 07:33:55,421 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@195537f 
[0;39m[34m2013-10-24 07:33:55,421  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [blob] overrides previous : org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:55,421 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@195537f 
[0;39m[34m2013-10-24 07:33:55,421  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:55,421 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9622a 
[0;39m[34m2013-10-24 07:33:55,421  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:55,422 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1863c9b 
[0;39m[34m2013-10-24 07:33:55,422  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:55,422 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@2b3d9a 
[0;39m[34m2013-10-24 07:33:55,422  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [clob] overrides previous : org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:55,422 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b3d9a 
[0;39m[34m2013-10-24 07:33:55,422  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:55,422 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9cb8af 
[0;39m[34m2013-10-24 07:33:55,422  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:55,423 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1210a4c 
[0;39m[34m2013-10-24 07:33:55,423  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:55,423 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1bbe826 
[0;39m[34m2013-10-24 07:33:55,423  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:55,424 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Session factory constructed with filter configurations : {} 
[0;39m[39m2013-10-24 07:33:55,425 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-7-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-7-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-7-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-7-oracle/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_21-b11, hibernate.connection.autocommit=true, user.name=paul, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/i386, classworlds.conf=/home/paul/dev/netbeans-7.3/java/maven/bin/m2.conf, java.version=1.7.0_21, user.timezone=Europe/Minsk, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper.,sun.beans., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-oracle/jre, java.vm.info=mixed mode, os.version=3.2.0-54-generic-pae, hibernate.transaction.factory_class=org.hibernate.ejb.transaction.JoinableCMTTransactionFactory, sun.font.fontmanager=sun.awt.X11FontManager, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.21-b01, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., hibernate.check_nullability=false, java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/paul, java.specification.vendor=Oracle Corporation, java.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/amd64:/usr/lib/jvm/java-7-oracle/jre/lib/i386::/usr/java/packages/lib/i386:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, common.loader=${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=/home/paul/dev/netbeans-7.3/java/maven, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher tomcat6:run-war, java.class.path=/home/paul/dev/netbeans-7.3/java/maven/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, catalina.home=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=i386, java.ext.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/paul/NetBeansProjects/submit-jpa/submit-jpa, line.separator=
, java.vm.name=Java HotSpot(TM) Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, hibernate.transaction.manager_lookup_class=org.hibernate.transaction.BTMTransactionManagerLookup, java.specification.version=1.7, hibernate.show_sql=true} 
[0;39m[39m2013-10-24 07:33:55,448 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:33:55,449 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:33:55,450 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:33:55,560 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Register 
[0;39m[39m2013-10-24 07:33:55,561 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id, op_id, user_id from registry.registers where id =? and op_id =? and user_id =? 
[0;39m[39m2013-10-24 07:33:55,561 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select register_.id, register_.op_id, register_.user_id, register_.record_time as record4_1_ from registry.registers register_ where register_.id=? and register_.op_id=? and register_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,561 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.registers (record_time, id, op_id, user_id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:55,561 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.registers set record_time=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:55,561 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.registers where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Op 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.ops where id =? 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select op_.id, op_.description as descript2_3_, op_.title as title3_ from registry.ops op_ where op_.id=? 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.ops (description, title, id) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.ops set description=?, title=? where id=? 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.ops where id=? 
[0;39m[39m2013-10-24 07:33:55,569 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.ops (description, title) values (?, ?) 
[0;39m[39m2013-10-24 07:33:55,574 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.User 
[0;39m[39m2013-10-24 07:33:55,574 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.users where id =? 
[0;39m[39m2013-10-24 07:33:55,574 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select user_.id, user_.email as email2_, user_.fullname as fullname2_, user_.job as job2_ from registry.users user_ where user_.id=? 
[0;39m[39m2013-10-24 07:33:55,574 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.users (email, fullname, job, id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:55,574 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.users set email=?, fullname=?, job=? where id=? 
[0;39m[39m2013-10-24 07:33:55,575 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.users where id=? 
[0;39m[39m2013-10-24 07:33:55,575 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.users (email, fullname, job) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:33:55,579 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Report 
[0;39m[39m2013-10-24 07:33:55,579 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from enterprise.reports where id =? 
[0;39m[39m2013-10-24 07:33:55,579 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select report_.id, report_.activity as activity0_, report_.endDate as endDate0_, report_.performer as performer0_, report_.startDate as startDate0_ from enterprise.reports report_ where report_.id=? 
[0;39m[39m2013-10-24 07:33:55,579 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into enterprise.reports (activity, endDate, performer, startDate, id) values (?, ?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:55,580 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update enterprise.reports set activity=?, endDate=?, performer=?, startDate=? where id=? 
[0;39m[39m2013-10-24 07:33:55,580 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from enterprise.reports where id=? 
[0;39m[39m2013-10-24 07:33:55,580 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into enterprise.reports (activity, endDate, performer, startDate) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:55,587 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:33:55,588 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set user_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:55,588 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set user_id=null where user_id=? and id=? and op_id=? 
[0;39m[39m2013-10-24 07:33:55,588 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set user_id=null where user_id=? 
[0;39m[39m2013-10-24 07:33:55,589 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:33:55,589 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set op_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:55,589 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set op_id=null where op_id=? and id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:55,589 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set op_id=null where op_id=? 
[0;39m[39m2013-10-24 07:33:55,618 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [NONE]: select register0_.id as id1_2_, register0_.op_id as op2_1_2_, register0_.user_id as user3_1_2_, register0_.record_time as record4_1_2_, op1_.id as id3_0_, op1_.description as descript2_3_0_, op1_.title as title3_0_, user2_.id as id2_1_, user2_.email as email2_1_, user2_.fullname as fullname2_1_, user2_.job as job2_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,619 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [READ]: select register0_.id as id1_2_, register0_.op_id as op2_1_2_, register0_.user_id as user3_1_2_, register0_.record_time as record4_1_2_, op1_.id as id3_0_, op1_.description as descript2_3_0_, op1_.title as title3_0_, user2_.id as id2_1_, user2_.email as email2_1_, user2_.fullname as fullname2_1_, user2_.job as job2_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,619 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE]: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:55,619 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE_NOWAIT]: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:55,620 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [FORCE]: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:55,620 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_READ]: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:55,620 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_WRITE]: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:55,621 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_FORCE_INCREMENT]: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:55,621 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC]: select register0_.id as id1_2_, register0_.op_id as op2_1_2_, register0_.user_id as user3_1_2_, register0_.record_time as record4_1_2_, op1_.id as id3_0_, op1_.description as descript2_3_0_, op1_.title as title3_0_, user2_.id as id2_1_, user2_.email as email2_1_, user2_.fullname as fullname2_1_, user2_.job as job2_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,622 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC_FORCE_INCREMENT]: select register0_.id as id1_2_, register0_.op_id as op2_1_2_, register0_.user_id as user3_1_2_, register0_.record_time as record4_1_2_, op1_.id as id3_0_, op1_.description as descript2_3_0_, op1_.title as title3_0_, user2_.id as id2_1_, user2_.email as email2_1_, user2_.fullname as fullname2_1_, user2_.job as job2_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,630 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Register: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,631 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Register: select register0_.id as id1_0_, register0_.op_id as op2_1_0_, register0_.user_id as user3_1_0_, register0_.record_time as record4_1_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,635 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [NONE]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:55,636 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [READ]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:55,636 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,636 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE_NOWAIT]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,637 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [FORCE]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,637 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_READ]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:55,638 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_WRITE]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,638 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_FORCE_INCREMENT]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,639 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:55,676 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC_FORCE_INCREMENT]: select op0_.id as id3_0_, op0_.description as descript2_3_0_, op0_.title as title3_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:55,679 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Op: select op0_.id as id3_1_, op0_.description as descript2_3_1_, op0_.title as title3_1_, registers1_.op_id as op2_3_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id1_0_, registers1_.op_id as op2_1_0_, registers1_.user_id as user3_1_0_, registers1_.record_time as record4_1_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:33:55,679 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Op: select op0_.id as id3_1_, op0_.description as descript2_3_1_, op0_.title as title3_1_, registers1_.op_id as op2_3_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id1_0_, registers1_.op_id as op2_1_0_, registers1_.user_id as user3_1_0_, registers1_.record_time as record4_1_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:33:55,680 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [NONE]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:55,680 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [READ]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:55,681 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,681 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE_NOWAIT]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,681 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [FORCE]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,682 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_READ]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:55,682 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_WRITE]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,682 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,683 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:55,683 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id2_0_, user0_.email as email2_0_, user0_.fullname as fullname2_0_, user0_.job as job2_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:55,684 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.User: select user0_.id as id2_1_, user0_.email as email2_1_, user0_.fullname as fullname2_1_, user0_.job as job2_1_, registers1_.user_id as user3_2_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id1_0_, registers1_.op_id as op2_1_0_, registers1_.user_id as user3_1_0_, registers1_.record_time as record4_1_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:33:55,685 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.User: select user0_.id as id2_1_, user0_.email as email2_1_, user0_.fullname as fullname2_1_, user0_.job as job2_1_, registers1_.user_id as user3_2_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id1_0_, registers1_.op_id as op2_1_0_, registers1_.user_id as user3_1_0_, registers1_.record_time as record4_1_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:33:55,685 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [NONE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:55,685 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [READ]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:55,686 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,686 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE_NOWAIT]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,687 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [FORCE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,687 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_READ]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:55,687 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_WRITE]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,688 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_FORCE_INCREMENT]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:55,688 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:55,689 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC_FORCE_INCREMENT]: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:55,689 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Report: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:55,690 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Report: select report0_.id as id0_0_, report0_.activity as activity0_0_, report0_.endDate as endDate0_0_, report0_.performer as performer0_0_, report0_.startDate as startDate0_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:55,696 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.User.registers: select registers0_.user_id as user3_2_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id1_1_, registers0_.op_id as op2_1_1_, registers0_.user_id as user3_1_1_, registers0_.record_time as record4_1_1_, op1_.id as id3_0_, op1_.description as descript2_3_0_, op1_.title as title3_0_ from registry.registers registers0_ inner join registry.ops op1_ on registers0_.op_id=op1_.id where registers0_.user_id=? 
[0;39m[39m2013-10-24 07:33:55,697 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.Op.registers: select registers0_.op_id as op2_3_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id1_1_, registers0_.op_id as op2_1_1_, registers0_.user_id as user3_1_1_, registers0_.record_time as record4_1_1_, user1_.id as id2_0_, user1_.email as email2_0_, user1_.fullname as fullname2_0_, user1_.job as job2_0_ from registry.registers registers0_ inner join registry.users user1_ on registers0_.user_id=user1_.id where registers0_.op_id=? 
[0;39m[39m2013-10-24 07:33:55,700 DEBUG | main | org.hibernate.impl.SessionFactoryObjectFactory          | initializing class SessionFactoryObjectFactory 
[0;39m[39m2013-10-24 07:33:55,701 DEBUG | main | org.hibernate.impl.SessionFactoryObjectFactory          | registered: 4b1de294-853c-43e6-87c4-2a61fd784582 (unnamed) 
[0;39m[34m2013-10-24 07:33:55,701  INFO | main | org.hibernate.impl.SessionFactoryObjectFactory          | Not binding factory to JNDI, no JNDI name configured 
[0;39m[39m2013-10-24 07:33:55,702 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiated session factory 
[0;39m[39m2013-10-24 07:33:55,702 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | obtaining JTA TransactionManager 
[0;39m[39m2013-10-24 07:33:55,705 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 21 named HQL queries 
[0;39m[39m2013-10-24 07:33:55,705 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Op.findByTitle 
[0;39m[39m2013-10-24 07:33:55,813 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:33:55,874 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Op'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'title'
 
[0;39m[39m2013-10-24 07:33:55,874 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:55,927 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:55,952 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (o) -> op0_ 
[0;39m[39m2013-10-24 07:33:55,954 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:33:55,964 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:33:55,969 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : title -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:55,970 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o.title -> op0_.title 
[0;39m[39m2013-10-24 07:33:55,975 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:55,976 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} op0_.id ) ( FromClause{level=1} registry.ops op0_ ) ( where ( = ( op0_.title op0_.id title ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:55,988 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.ops op0_] 
[0;39m[39m2013-10-24 07:33:55,988 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:55,991 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'op0_.id as id3_' {alias=o, className=sp.model.Op, tableAlias=op0_}
    |  \-[SQL_TOKEN] SqlFragment: 'op0_.description as descript2_3_, op0_.title as title3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[op0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.ops op0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=registry.ops,tableAlias=op0_,origin=null,columns={,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'op0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=o.title,tableAlias=op0_,className=sp.model.Op,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'op0_.id' {alias=o, className=sp.model.Op, tableAlias=op0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=title, expectedType=org.hibernate.type.StringType@8be9a1}
 
[0;39m[39m2013-10-24 07:33:55,991 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,008 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:33:56,008 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select op0_.id as id3_, op0_.description as descript2_3_, op0_.title as title3_ from registry.ops op0_ where op0_.title=? 
[0;39m[39m2013-10-24 07:33:56,008 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,023 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReports 
[0;39m[39m2013-10-24 07:33:56,024 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:56,028 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:33:56,029 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,029 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,029 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,030 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,032 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,032 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,033 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,034 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,034 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count report0_.id ) ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:56,036 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,036 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,037 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:56,037 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,037 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:56,038 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(report0_.id) as col_0_0_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:33:56,038 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,038 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByOp 
[0;39m[39m2013-10-24 07:33:56,038 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:56,042 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:56,043 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,043 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,044 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,045 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,045 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,045 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:56,048 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:56,048 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:56,048 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,049 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,050 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,050 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,050 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:56,050 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,051 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,051 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,051 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,052 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,052 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,053 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,054 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:33:56,054 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,055 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:56,055 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.op_id=? 
[0;39m[39m2013-10-24 07:33:56,055 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,055 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByIds 
[0;39m[39m2013-10-24 07:33:56,056 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:56,060 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:33:56,061 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,061 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,061 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,062 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,062 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,062 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,062 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,062 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,062 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:56,063 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,063 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,064 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:56,064 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,064 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:56,064 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:33:56,065 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,065 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPeriod 
[0;39m[39m2013-10-24 07:33:56,066 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:56,071 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'startDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:56,072 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,072 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,072 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,073 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,074 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,074 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:56,074 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:33:56,074 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,075 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:56,075 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:33:56,075 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,075 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( >= ( report0_.startDate report0_.id startDate ) ? ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:56,076 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,076 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,077 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e6f3cd}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e6f3cd}
 
[0;39m[39m2013-10-24 07:33:56,078 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,078 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:56,078 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:33:56,078 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,079 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getAllReports 
[0;39m[39m2013-10-24 07:33:56,080 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:56,083 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'r'
 
[0;39m[39m2013-10-24 07:33:56,083 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,084 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,084 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,085 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,085 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,085 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:33:56,085 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,086 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,086 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:33:56,086 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,087 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:56,087 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:33:56,087 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,088 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReport 
[0;39m[39m2013-10-24 07:33:56,088 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:33:56,093 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:33:56,094 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,094 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,094 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,095 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,095 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,095 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,095 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,096 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,096 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.id report0_.id id ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,096 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,097 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,097 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:56,098 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,098 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:33:56,098 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:56,098 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,099 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.find 
[0;39m[39m2013-10-24 07:33:56,100 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:33:56,109 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'op'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'op'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'user'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'user'
          \-[BETWEEN] Node: 'between'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'recordTime'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'startDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:56,109 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,109 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,110 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,110 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,110 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,110 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,111 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,111 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:56,111 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,111 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,111 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:56,112 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,112 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:56,112 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:56,114 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,114 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:56,114 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:33:56,115 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,115 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( and ( and ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:56,115 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,115 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,117 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  |  \-[IDENT] IdentNode: 'op' {originalText=op}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |     |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[BETWEEN] BetweenOperatorNode: 'between'
             +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
             +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
 
[0;39m[39m2013-10-24 07:33:56,117 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,118 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:33:56,118 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_, register0_.record_time as record4_1_ from registry.registers register0_ where register0_.op_id=? and register0_.user_id=? and (register0_.record_time between ? and ?) 
[0;39m[39m2013-10-24 07:33:56,118 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,118 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countAll 
[0;39m[39m2013-10-24 07:33:56,119 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:33:56,123 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Register'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'r'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:56,124 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,124 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,125 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,125 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,126 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,126 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:56,126 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:56,126 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:56,127 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,127 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,127 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ) 
[0;39m[39m2013-10-24 07:33:56,128 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,128 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,128 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,128 DEBUG | main | org.hibernate.hql.ast.tree.QueryNode                    | getWhereClause() : Creating a new WHERE clause... 
[0;39m[39m2013-10-24 07:33:56,129 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,130 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[THETA_JOINS] SqlNode: '{theta joins}'
          \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
 
[0;39m[39m2013-10-24 07:33:56,130 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,130 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:33:56,131 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id 
[0;39m[39m2013-10-24 07:33:56,131 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,131 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByUser 
[0;39m[39m2013-10-24 07:33:56,132 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:56,136 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:33:56,137 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,137 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,138 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,138 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,239 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,239 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:56,239 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,239 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:56,239 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:56,240 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,240 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,240 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,241 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,241 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:33:56,242 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,242 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:56,243 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_, register0_.record_time as record4_1_ from registry.registers register0_ where register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:56,243 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,243 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getLastIdByUserAndOp 
[0;39m[39m2013-10-24 07:33:56,244 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:33:56,251 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'r'
    |        |  \-[IDENT] Node: 'id'
    |        \-[IDENT] Node: 'id'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 'r'
       |  |  \-[IDENT] Node: 'id'
       |  \-[IDENT] Node: 'id'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:33:56,251 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,252 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,252 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,252 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,253 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@f57224 
[0;39m[39m2013-10-24 07:33:56,253 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:33:56,253 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:56,253 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,254 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:56,255 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,256 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@f57224 
[0;39m[39m2013-10-24 07:33:56,256 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:33:56,256 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:56,257 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,257 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:56,257 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,258 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) desc ) ) 
[0;39m[39m2013-10-24 07:33:56,258 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,259 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,260 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:33:56,260 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,261 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:33:56,261 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as col_0_0_ from registry.registers register0_ order by register0_.id desc 
[0;39m[39m2013-10-24 07:33:56,261 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,262 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPerformer 
[0;39m[39m2013-10-24 07:33:56,263 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:33:56,272 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'performer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:33:56,272 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,272 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,272 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,273 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,273 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,273 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:56,273 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:33:56,273 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,273 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.performer report0_.id performer ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,274 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,274 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,274 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@8be9a1}
 
[0;39m[39m2013-10-24 07:33:56,274 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,275 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:33:56,275 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.performer=? 
[0;39m[39m2013-10-24 07:33:56,275 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,275 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUserAndOp 
[0;39m[39m2013-10-24 07:33:56,276 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:33:56,281 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'user'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'user'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'op'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:56,281 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,282 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,282 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,282 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,282 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,282 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:56,283 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,284 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( and ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:56,285 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,448 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,448 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,448 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,449 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'op' {originalText=op}
             \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:33:56,450 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,450 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:33:56,450 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? and register0_.op_id=? 
[0;39m[39m2013-10-24 07:33:56,451 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,451 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUser 
[0;39m[39m2013-10-24 07:33:56,452 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:56,466 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:33:56,467 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,467 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,467 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,468 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,468 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,468 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:56,468 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:56,469 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:56,469 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,469 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,469 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:56,469 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,470 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:56,470 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:56,471 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,472 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,472 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,473 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,473 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:56,473 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,474 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:33:56,474 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,475 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:56,475 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:56,475 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,476 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReports 
[0;39m[39m2013-10-24 07:33:56,487 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:56,510 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'performer'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'performer'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'startDate'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:56,510 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,511 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,511 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,511 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,512 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,512 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:56,524 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:33:56,525 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,525 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:56,525 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:33:56,525 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,526 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:56,526 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:33:56,526 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,526 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( and ( = ( report0_.performer report0_.id performer ) ? ) ( >= ( report0_.startDate report0_.id startDate ) ? ) ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:56,527 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,527 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,528 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id0_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@8be9a1}
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |     |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e6f3cd}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e6f3cd}
 
[0;39m[39m2013-10-24 07:33:56,528 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,529 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:56,529 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id0_, report0_.activity as activity0_, report0_.endDate as endDate0_, report0_.performer as performer0_, report0_.startDate as startDate0_ from enterprise.reports report0_ where report0_.performer=? and report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:33:56,529 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,529 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getAll 
[0;39m[39m2013-10-24 07:33:56,530 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:33:56,568 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'r'
       |  \-[IDENT] Node: 'recordTime'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:33:56,568 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,568 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,569 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,570 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,570 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,571 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:56,571 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:33:56,571 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,571 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) desc ) ) 
[0;39m[39m2013-10-24 07:33:56,572 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,572 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,573 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:33:56,573 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,573 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:33:56,573 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_, register0_.record_time as record4_1_ from registry.registers register0_ order by register0_.record_time desc 
[0;39m[39m2013-10-24 07:33:56,574 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,574 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.removeReport 
[0;39m[39m2013-10-24 07:33:56,584 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: delete from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:33:56,589 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'sp'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Report'
    |     \-[ALIAS] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:33:56,589 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,591 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete << begin [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:33:56,591 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,592 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> id 
[0;39m[39m2013-10-24 07:33:56,592 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,593 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> id 
[0;39m[39m2013-10-24 07:33:56,593 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete : finishing up [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:33:56,593 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete >> end [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:33:56,594 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (enterprise.reports)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:56,595 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,602 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,603 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByOp 
[0;39m[39m2013-10-24 07:33:56,604 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:56,609 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:56,609 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,609 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,610 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,610 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,610 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,611 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:56,611 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:56,611 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:56,611 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:56,612 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,612 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,613 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,613 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,614 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:33:56,614 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,614 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:56,615 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_, register0_.record_time as record4_1_ from registry.registers register0_ where register0_.op_id=? 
[0;39m[39m2013-10-24 07:33:56,615 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,615 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.findByPeriod 
[0;39m[39m2013-10-24 07:33:56,616 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:33:56,620 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'recordTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'startDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:56,620 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,621 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,621 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:56,621 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,621 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:56,622 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:56,622 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:33:56,622 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,622 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,623 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:56,623 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,624 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
          \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
 
[0;39m[39m2013-10-24 07:33:56,624 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,624 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:33:56,624 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id1_, register0_.op_id as op2_1_, register0_.user_id as user3_1_, register0_.record_time as record4_1_ from registry.registers register0_ where register0_.record_time between ? and ? 
[0;39m[39m2013-10-24 07:33:56,624 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,625 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: User.findByFullname 
[0;39m[39m2013-10-24 07:33:56,625 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:33:56,629 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'fullname'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fullname'
 
[0;39m[39m2013-10-24 07:33:56,629 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,629 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,630 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.User (u) -> user0_ 
[0;39m[39m2013-10-24 07:33:56,630 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:33:56,630 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:33:56,630 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : fullname -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:56,630 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u.fullname -> user0_.fullname 
[0;39m[39m2013-10-24 07:33:56,631 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,631 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} registry.users user0_ ) ( where ( = ( user0_.fullname user0_.id fullname ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:56,631 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.users user0_] 
[0;39m[39m2013-10-24 07:33:56,631 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,632 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id2_' {alias=u, className=sp.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_, user0_.fullname as fullname2_, user0_.job as job2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=registry.users,tableAlias=user0_,origin=null,columns={,className=sp.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.fullname' {propertyName=fullname,dereferenceType=ALL,propertyPath=fullname,path=u.fullname,tableAlias=user0_,className=sp.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=sp.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'fullname' {originalText=fullname}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fullname, expectedType=org.hibernate.type.StringType@8be9a1}
 
[0;39m[39m2013-10-24 07:33:56,632 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,632 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:33:56,632 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select user0_.id as id2_, user0_.email as email2_, user0_.fullname as fullname2_, user0_.job as job2_ from registry.users user0_ where user0_.fullname=? 
[0;39m[39m2013-10-24 07:33:56,633 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,633 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getPerformers 
[0;39m[39m2013-10-24 07:33:56,634 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:56,637 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'r'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:33:56,638 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,638 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,638 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:56,639 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:56,639 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:56,639 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:33:56,639 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,639 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} distinct ( report0_.performer report0_.id performer ) ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:33:56,640 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:56,640 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:56,641 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
    |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:33:56,641 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,641 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:56,641 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select distinct report0_.performer as col_0_0_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:33:56,641 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:56,642 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 0 named SQL queries 
[0;39m[1;31m2013-10-24 07:33:56,677 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.Register_#recordTime 
[0;39m[1;31m2013-10-24 07:33:56,687 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.User_#fullname 
[0;39m[39m2013-10-24 07:33:56,757 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | building XA pool for jdbc/registryDS with 4 connection(s) 
[0;39m[39m2013-10-24 07:33:56,758 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'user' to 'netbeans' 
[0;39m[39m2013-10-24 07:33:56,759 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'url' to 'jdbc:mysql://localhost:3306/registry?autoReconnect=true&characterEncoding=utf8' 
[0;39m[39m2013-10-24 07:33:56,759 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'password' to 'netbeans' 
[0;39m[39m2013-10-24 07:33:56,759 DEBUG | main | bitronix.tm.resource.common.XAPool                      | setting vendor property 'databaseName' to 'registry' 
[0;39m[39m2013-10-24 07:33:56,780 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:56,780 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:56,802 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:56,802 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:56,831 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:56,834 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:56,859 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:33:56,859 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:33:56,859 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:32:32 FET 1970 
[0;39m[39m2013-10-24 07:33:56,860 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:56,860 DEBUG | main | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:32:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:33:56,860 DEBUG | main | bitronix.tm.resource.ResourceRegistrar                  | transaction manager is running, recovering resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:33:56,863 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | start of incremental recovery on resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:33:56,863 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:56,864 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:33:56,864 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:56,864 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,864 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,865 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,865 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,865 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:33:56,865 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,866 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,866 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,867 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:33:56,868 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:33:56,868 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:33:56,868 DEBUG | main | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:33:56,868 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | 0 dangling transaction(s) found on resource 
[0;39m[39m2013-10-24 07:33:56,869 DEBUG | main | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:33:56,869 DEBUG | main | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:33:56,869 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | 0 dangling transaction(s) found in journal 
[0;39m[34m2013-10-24 07:33:56,870  INFO | main | bitronix.tm.recovery.IncrementalRecoverer               | incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [jdbc/registryDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:33:56,870 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@9cbd2f 
[0;39m[39m2013-10-24 07:33:56,870 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:33:56,871 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,871 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:33:56,871 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,871 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:33:56,872 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,872 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,872 DEBUG | main | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,872 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,873 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,873 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:33:56,873 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:33:56,873 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,874 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,874 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:56,874 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:33:56,875 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:56,875 DEBUG | main | bitronix.tm.recovery.IncrementalRecoverer               | end of incremental recovery on resource jdbc/registryDS 
[0;39m[34m2013-10-24 07:33:56,890  INFO | main | o.s.orm.jpa.LocalContainerEntityManagerFactoryBean      | Building JPA container EntityManagerFactory for persistence unit 'registryPU' 
[0;39m[39m2013-10-24 07:33:56,891 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:56,891 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:56,891 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:56,892 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c5e4bb 
[0;39m[39m2013-10-24 07:33:56,892 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bd8663 
[0;39m[39m2013-10-24 07:33:56,892 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@126adbb 
[0;39m[39m2013-10-24 07:33:56,904 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:56,905 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:56,905 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:56,905 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:56,905 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:56,906 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:56,906 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:56,906 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:56,906 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:56,907 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:56,908 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:56,908 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:56,909 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,909 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,909 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:56,920 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:56,920 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:56,921 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:56,921 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:56,921 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:56,921 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:56,922 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:56,922 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:56,922 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:56,923 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:56,923 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:56,923 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:56,923 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:56,924 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:56,924 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:56,924 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:56,924 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:56,925 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:56,925 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:56,925 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:56,925 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:56,925 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157d1a0 
[0;39m[39m2013-10-24 07:33:56,926 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:56,926 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:56,926 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:56,926 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12fa3df 
[0;39m[39m2013-10-24 07:33:56,927 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:56,927 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:56,927 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:56,928 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:56,928 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:56,928 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:56,928 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:56,928 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:56,929 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:56,929 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:56,929 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b50aa4 
[0;39m[39m2013-10-24 07:33:56,929 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c08448 
[0;39m[39m2013-10-24 07:33:56,930 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:56,930 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:56,930 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:56,930 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:56,930 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:56,931 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:56,931 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@9cc02f 
[0;39m[39m2013-10-24 07:33:56,931 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:56,931 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:56,931 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:56,932 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:56,932 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:56,932 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:56,933 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@aa90bb 
[0;39m[39m2013-10-24 07:33:56,951 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:56,951 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:56,951 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:56,952 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:56,952 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:56,952 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:56,952 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:56,953 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:56,953 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:56,953 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@cfc4bb 
[0;39m[39m2013-10-24 07:33:56,953 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:56,954 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:56,954 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1bb9309 
[0;39m[39m2013-10-24 07:33:56,954 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b26c27 
[0;39m[39m2013-10-24 07:33:56,954 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@da8ffb 
[0;39m[39m2013-10-24 07:33:56,955 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@122d342 
[0;39m[39m2013-10-24 07:33:56,955 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15bbfc5 
[0;39m[39m2013-10-24 07:33:56,955 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b5ecf 
[0;39m[39m2013-10-24 07:33:56,955 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fd718b 
[0;39m[39m2013-10-24 07:33:56,956 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@299c45 
[0;39m[39m2013-10-24 07:33:56,956 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator] 
[0;39m[39m2013-10-24 07:33:56,956 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator] 
[0;39m[39m2013-10-24 07:33:56,956 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:33:56,957 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator] 
[0;39m[39m2013-10-24 07:33:56,957 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator] 
[0;39m[39m2013-10-24 07:33:56,957 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned] 
[0;39m[39m2013-10-24 07:33:56,957 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator] 
[0;39m[39m2013-10-24 07:33:56,958 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator] 
[0;39m[39m2013-10-24 07:33:56,958 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator] 
[0;39m[39m2013-10-24 07:33:56,958 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator] 
[0;39m[39m2013-10-24 07:33:56,958 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator] 
[0;39m[39m2013-10-24 07:33:56,959 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator] 
[0;39m[39m2013-10-24 07:33:56,959 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator] 
[0;39m[39m2013-10-24 07:33:56,959 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator] 
[0;39m[39m2013-10-24 07:33:56,959 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator] 
[0;39m[39m2013-10-24 07:33:56,960 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Processing PersistenceUnitInfo [
	name: registryPU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: /solr
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat6-maven-plugin:2.1, parent: sun.misc.Launcher$AppClassLoader@1644028]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1d294de
	excludeUnlistedClasses: true
	JTA datasource: a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available)
	Non JTA datasource: null
	Transaction type: JTA
	PU root URL: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sp.model.Op
		sp.model.Register
		sp.model.User]
	Mapping files names []
	Properties [
		hibernate.archive.autodetection: class] 
[0;39m[39m2013-10-24 07:33:56,960 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:33:56,961 DEBUG | main | org.hibernate.ejb.Ejb3Configuration                     | Detect class: true; detect hbm: false 
[0;39m[39m2013-10-24 07:33:56,961 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Searching mapped entities in jar/par: file:/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/reports.app-0.1.2/WEB-INF/classes 
[0;39m[39m2013-10-24 07:33:56,963 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.ReportsException 
[0;39m[39m2013-10-24 07:33:56,963 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.exception.SpException 
[0;39m[39m2013-10-24 07:33:56,964 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepository 
[0;39m[39m2013-10-24 07:33:56,965 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepository 
[0;39m[39m2013-10-24 07:33:56,965 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SuggestRepositoryImpl 
[0;39m[39m2013-10-24 07:33:56,966 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepositoryImpl 
[0;39m[39m2013-10-24 07:33:56,967 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.OpRepository 
[0;39m[39m2013-10-24 07:33:56,967 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepositoryImpl 
[0;39m[39m2013-10-24 07:33:56,968 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.ReportRepository 
[0;39m[39m2013-10-24 07:33:56,968 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepositoryImpl 
[0;39m[39m2013-10-24 07:33:56,969 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepositoryImpl 
[0;39m[39m2013-10-24 07:33:56,970 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.SolrRepository 
[0;39m[39m2013-10-24 07:33:56,971 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.UserRepository 
[0;39m[39m2013-10-24 07:33:56,971 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.repository.RegisterRepositoryImpl 
[0;39m[39m2013-10-24 07:33:56,972 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.system.SystemConstants 
[0;39m[39m2013-10-24 07:33:57,098 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpServiceImpl 
[0;39m[39m2013-10-24 07:33:57,099 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrService 
[0;39m[39m2013-10-24 07:33:57,100 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ReportRESTFacade 
[0;39m[39m2013-10-24 07:33:57,100 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.rest.ApplicationConfig 
[0;39m[39m2013-10-24 07:33:57,101 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryService 
[0;39m[39m2013-10-24 07:33:57,101 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailServiceImpl 
[0;39m[39m2013-10-24 07:33:57,102 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.RegistryServiceImpl 
[0;39m[39m2013-10-24 07:33:57,103 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.EmailService 
[0;39m[39m2013-10-24 07:33:57,103 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SolrServiceImpl 
[0;39m[39m2013-10-24 07:33:57,104 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportServiceImpl 
[0;39m[39m2013-10-24 07:33:57,105 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestService 
[0;39m[39m2013-10-24 07:33:57,105 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.ReportService 
[0;39m[39m2013-10-24 07:33:57,106 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.SuggestServiceImpl 
[0;39m[39m2013-10-24 07:33:57,106 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserServiceImpl 
[0;39m[39m2013-10-24 07:33:57,107 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.UserService 
[0;39m[39m2013-10-24 07:33:57,107 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.service.OpService 
[0;39m[39m2013-10-24 07:33:57,108 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op_ 
[0;39m[39m2013-10-24 07:33:57,108 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report 
[0;39m[39m2013-10-24 07:33:57,111 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Report 
[0;39m[39m2013-10-24 07:33:57,111 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User 
[0;39m[39m2013-10-24 07:33:57,112 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.User 
[0;39m[39m2013-10-24 07:33:57,113 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.AjaxResponse 
[0;39m[39m2013-10-24 07:33:57,113 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ErrorDetails 
[0;39m[39m2013-10-24 07:33:57,114 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Tuple 
[0;39m[39m2013-10-24 07:33:57,115 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Prompt 
[0;39m[39m2013-10-24 07:33:57,115 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.ResultPager 
[0;39m[39m2013-10-24 07:33:57,116 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.ajax.Statistics 
[0;39m[39m2013-10-24 07:33:57,116 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register 
[0;39m[39m2013-10-24 07:33:57,117 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Register 
[0;39m[39m2013-10-24 07:33:57,117 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.RegisterId 
[0;39m[39m2013-10-24 07:33:57,118 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.RegisterId 
[0;39m[39m2013-10-24 07:33:57,118 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Op 
[0;39m[39m2013-10-24 07:33:57,119 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Java element filter matched for sp.model.Op 
[0;39m[39m2013-10-24 07:33:57,119 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchable 
[0;39m[39m2013-10-24 07:33:57,120 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.searchable.ReportSearchableField 
[0;39m[39m2013-10-24 07:33:57,120 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Report_ 
[0;39m[39m2013-10-24 07:33:57,121 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState$GenericStateHolder 
[0;39m[39m2013-10-24 07:33:57,124 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.BackendState 
[0;39m[39m2013-10-24 07:33:57,125 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.FrontendState 
[0;39m[39m2013-10-24 07:33:57,125 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.State 
[0;39m[39m2013-10-24 07:33:57,126 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.dwr.GenericState 
[0;39m[39m2013-10-24 07:33:57,126 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.User_ 
[0;39m[39m2013-10-24 07:33:57,126 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.model.Register_ 
[0;39m[39m2013-10-24 07:33:57,127 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatisticsGenerator 
[0;39m[39m2013-10-24 07:33:57,128 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory$DateFormatSymbolsRu 
[0;39m[39m2013-10-24 07:33:57,128 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpHasher 
[0;39m[39m2013-10-24 07:33:57,129 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBuilder 
[0;39m[39m2013-10-24 07:33:57,129 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpContextLoaderListener 
[0;39m[39m2013-10-24 07:33:57,130 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLightPager 
[0;39m[39m2013-10-24 07:33:57,130 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ValidationBootstrap 
[0;39m[39m2013-10-24 07:33:57,130 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ReportDateEditor 
[0;39m[39m2013-10-24 07:33:57,131 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpStatsITextPdfBuilder 
[0;39m[39m2013-10-24 07:33:57,134 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPdfBoxPdfBuilder 
[0;39m[39m2013-10-24 07:33:57,135 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpSortDefinition 
[0;39m[39m2013-10-24 07:33:57,136 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertiesReloader 
[0;39m[39m2013-10-24 07:33:57,148 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.SpStaticBeanInjector 
[0;39m[39m2013-10-24 07:33:57,150 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.Reloader 
[0;39m[39m2013-10-24 07:33:57,151 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.service.PropertyService 
[0;39m[39m2013-10-24 07:33:57,155 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.EncodingPostProcessor 
[0;39m[39m2013-10-24 07:33:57,156 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateFormatFactory 
[0;39m[39m2013-10-24 07:33:57,160 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPageable 
[0;39m[39m2013-10-24 07:33:57,161 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpLazyPager 
[0;39m[39m2013-10-24 07:33:57,162 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPagedListHolder 
[0;39m[39m2013-10-24 07:33:57,164 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpPopulateDb 
[0;39m[39m2013-10-24 07:33:57,165 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.ManagerUtil 
[0;39m[39m2013-10-24 07:33:57,172 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.util.SpDateTool 
[0;39m[39m2013-10-24 07:33:57,173 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AdminController 
[0;39m[39m2013-10-24 07:33:57,174 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ChecklistController 
[0;39m[39m2013-10-24 07:33:57,175 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ForwardController 
[0;39m[39m2013-10-24 07:33:57,176 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.HomeController 
[0;39m[39m2013-10-24 07:33:57,176 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ErrorController 
[0;39m[39m2013-10-24 07:33:57,177 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController 
[0;39m[39m2013-10-24 07:33:57,178 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SuggestController 
[0;39m[39m2013-10-24 07:33:57,179 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.EmailController 
[0;39m[39m2013-10-24 07:33:57,185 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.RegistryController 
[0;39m[39m2013-10-24 07:33:57,186 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.SolrSuggestController 
[0;39m[39m2013-10-24 07:33:57,186 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.LoginController 
[0;39m[39m2013-10-24 07:33:57,187 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.AjaxController$1 
[0;39m[39m2013-10-24 07:33:57,188 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.controller.ReportController 
[0;39m[39m2013-10-24 07:33:57,196 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig 
[0;39m[39m2013-10-24 07:33:57,197 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.BitronixJtaConfig 
[0;39m[39m2013-10-24 07:33:57,198 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.config.ReportConfig$1 
[0;39m[39m2013-10-24 07:33:57,199 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.interceptor.UserInterceptor 
[0;39m[39m2013-10-24 07:33:57,199 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReportConstraintValidator 
[0;39m[39m2013-10-24 07:33:57,200 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.SystemPropertyValidator 
[0;39m[39m2013-10-24 07:33:57,201 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ValidReport 
[0;39m[39m2013-10-24 07:33:57,201 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDate 
[0;39m[39m2013-10-24 07:33:57,202 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.validation.ReportDateConstraintValidator 
[0;39m[39m2013-10-24 07:33:57,203 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.security.ReportsPermissionEvaluator 
[0;39m[39m2013-10-24 07:33:57,206 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSuggester 
[0;39m[39m2013-10-24 07:33:57,206 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexSearcher 
[0;39m[39m2013-10-24 07:33:57,207 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.Index 
[0;39m[39m2013-10-24 07:33:57,207 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndex 
[0;39m[39m2013-10-24 07:33:57,209 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.IndexCreator 
[0;39m[39m2013-10-24 07:33:57,210 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexCreator 
[0;39m[39m2013-10-24 07:33:57,216 DEBUG | main | org.hibernate.ejb.packaging.AbstractJarVisitor          | Filtering: sp.suggest.SuggestIndexSearcher 
[0;39m[39m2013-10-24 07:33:57,218 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:33:57,218 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[34m2013-10-24 07:33:57,219  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Op 
[0;39m[34m2013-10-24 07:33:57,219  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Op.findByTitle => select o from Op o where o.title = :title 
[0;39m[39m2013-10-24 07:33:57,219 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:57,220 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Op 
[0;39m[34m2013-10-24 07:33:57,220  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Op on table ops 
[0;39m[39m2013-10-24 07:33:57,227 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:33:57,228 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:57,228 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:57,229 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:57,229 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=description, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,229 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property description with lazy=false 
[0;39m[39m2013-10-24 07:33:57,230 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for description 
[0;39m[39m2013-10-24 07:33:57,230 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property description 
[0;39m[39m2013-10-24 07:33:57,230 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:33:57,231 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,231 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,232 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,234 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,235 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:33:57,235 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:33:57,235 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='op'} 
[0;39m[39m2013-10-24 07:33:57,235 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:33:57,236 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[39m2013-10-24 07:33:57,248 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.ops), mappingColumn=title, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,249 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property title with lazy=false 
[0;39m[39m2013-10-24 07:33:57,249 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for title 
[0;39m[39m2013-10-24 07:33:57,249 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property title 
[0;39m[34m2013-10-24 07:33:57,256  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Register 
[0;39m[34m2013-10-24 07:33:57,258  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.find => select r from Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[34m2013-10-24 07:33:57,259  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.findByPeriod => select r from Register r where r.recordTime between :startDate and :endDate 
[0;39m[34m2013-10-24 07:33:57,259  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByOp => select r from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:33:57,259  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getRegistersByUser => select r from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:33:57,259  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getAll => select r from Register r order by r.recordTime desc 
[0;39m[34m2013-10-24 07:33:57,260  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countAll => select count(r.op) from Register r 
[0;39m[34m2013-10-24 07:33:57,260  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByOp => select count(r.op) from Register r where r.op = :op 
[0;39m[34m2013-10-24 07:33:57,260  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUser => select count(r.op) from Register r where r.user = :user 
[0;39m[34m2013-10-24 07:33:57,260  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.countByUserAndOp => select count(r.op) from Register r where r.user = :user and r.op = :op 
[0;39m[34m2013-10-24 07:33:57,262  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Register.getLastIdByUserAndOp => select r.id.id from Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:33:57,262 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:57,262 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Register 
[0;39m[34m2013-10-24 07:33:57,264  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Register on table registers 
[0;39m[39m2013-10-24 07:33:57,267 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,269 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property id 
[0;39m[39m2013-10-24 07:33:57,271 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,272 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:57,272 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:57,272 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:57,273 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property opId 
[0;39m[39m2013-10-24 07:33:57,273 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,280 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property opId with lazy=false 
[0;39m[39m2013-10-24 07:33:57,280 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for opId 
[0;39m[39m2013-10-24 07:33:57,281 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property opId 
[0;39m[39m2013-10-24 07:33:57,281 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Column(s) overridden for property userId 
[0;39m[39m2013-10-24 07:33:57,281 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user_id, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,282 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property userId with lazy=false 
[0;39m[39m2013-10-24 07:33:57,282 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for userId 
[0;39m[39m2013-10-24 07:33:57,282 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property userId 
[0;39m[39m2013-10-24 07:33:57,282 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:57,283 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='op_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:33:57,283 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=op, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,283 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property op 
[0;39m[39m2013-10-24 07:33:57,284 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=record_time, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,284 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property recordTime with lazy=false 
[0;39m[39m2013-10-24 07:33:57,284 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for recordTime 
[0;39m[39m2013-10-24 07:33:57,285 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property recordTime 
[0;39m[39m2013-10-24 07:33:57,285 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} 
[0;39m[39m2013-10-24 07:33:57,285 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.registers), mappingColumn=user, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,286 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property user 
[0;39m[34m2013-10-24 07:33:57,286  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.User 
[0;39m[34m2013-10-24 07:33:57,286  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: User.findByFullname => select u from User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:33:57,286 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:57,287 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name User 
[0;39m[34m2013-10-24 07:33:57,288  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.User on table users 
[0;39m[39m2013-10-24 07:33:57,290 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:33:57,304 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:57,305 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:57,305 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:57,305 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=email, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,306 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property email with lazy=false 
[0;39m[39m2013-10-24 07:33:57,306 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for email 
[0;39m[39m2013-10-24 07:33:57,306 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property email 
[0;39m[39m2013-10-24 07:33:57,307 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=fullname, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,307 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property fullname with lazy=false 
[0;39m[39m2013-10-24 07:33:57,307 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for fullname 
[0;39m[39m2013-10-24 07:33:57,308 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property fullname 
[0;39m[39m2013-10-24 07:33:57,308 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=job, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,308 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property job with lazy=false 
[0;39m[39m2013-10-24 07:33:57,308 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for job 
[0;39m[39m2013-10-24 07:33:57,309 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property job 
[0;39m[39m2013-10-24 07:33:57,309 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:33:57,309 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,310 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=null, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,310 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=element, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,310 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(registry.users), mappingColumn=registers_KEY, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,311 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='registers_KEY', referencedColumn='null', mappedBy='null'} 
[0;39m[39m2013-10-24 07:33:57,311 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:33:57,311 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'} 
[0;39m[39m2013-10-24 07:33:57,311 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Collection role: sp.model.User.registers 
[0;39m[39m2013-10-24 07:33:57,312 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property registers 
[0;39m[34m2013-10-24 07:33:57,312  INFO | main | org.hibernate.cfg.AnnotationBinder                      | Binding entity from annotated class: sp.model.Report 
[0;39m[34m2013-10-24 07:33:57,312  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getPerformers => select distinct r.performer from Report r 
[0;39m[34m2013-10-24 07:33:57,312  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPerformer => select r from Report r where r.performer = :performer 
[0;39m[34m2013-10-24 07:33:57,313  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReports => select r from Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:33:57,313  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByPeriod => select r from Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[34m2013-10-24 07:33:57,313  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getReportsByIds => select r from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:33:57,313  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReport => select r from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:33:57,314  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.hasReports => select count(r) from Report r where r.id IN :ids 
[0;39m[34m2013-10-24 07:33:57,314  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.removeReport => delete from Report r where r.id = :id 
[0;39m[34m2013-10-24 07:33:57,314  INFO | main | org.hibernate.cfg.annotations.QueryBinder               | Binding Named query: Report.getAllReports => select r from Report r 
[0;39m[39m2013-10-24 07:33:57,314 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[0;39m[39m2013-10-24 07:33:57,315 DEBUG | main | org.hibernate.cfg.annotations.EntityBinder              | Import with entity name Report 
[0;39m[34m2013-10-24 07:33:57,315  INFO | main | org.hibernate.cfg.annotations.EntityBinder              | Bind entity sp.model.Report on table reports 
[0;39m[39m2013-10-24 07:33:57,319 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=id, insertable=true, updatable=true, unique=true} 
[0;39m[39m2013-10-24 07:33:57,319 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property id with lazy=false 
[0;39m[39m2013-10-24 07:33:57,320 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for id 
[0;39m[39m2013-10-24 07:33:57,320 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property id 
[0;39m[39m2013-10-24 07:33:57,320 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=activity, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,321 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property activity with lazy=false 
[0;39m[39m2013-10-24 07:33:57,321 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for activity 
[0;39m[39m2013-10-24 07:33:57,321 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property activity 
[0;39m[39m2013-10-24 07:33:57,322 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=endDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,322 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property endDate with lazy=false 
[0;39m[39m2013-10-24 07:33:57,322 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for endDate 
[0;39m[39m2013-10-24 07:33:57,322 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property endDate 
[0;39m[39m2013-10-24 07:33:57,323 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=performer, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,323 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property performer with lazy=false 
[0;39m[39m2013-10-24 07:33:57,323 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for performer 
[0;39m[39m2013-10-24 07:33:57,324 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property performer 
[0;39m[39m2013-10-24 07:33:57,324 DEBUG | main | org.hibernate.cfg.Ejb3Column                            | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(enterprise.reports), mappingColumn=startDate, insertable=true, updatable=true, unique=false} 
[0;39m[39m2013-10-24 07:33:57,324 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | binding property startDate with lazy=false 
[0;39m[39m2013-10-24 07:33:57,325 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | building SimpleValue for startDate 
[0;39m[39m2013-10-24 07:33:57,325 DEBUG | main | org.hibernate.cfg.annotations.PropertyBinder            | Building property startDate 
[0;39m[39m2013-10-24 07:33:57,325 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:57,325 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for description 
[0;39m[39m2013-10-24 07:33:57,325 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for title 
[0;39m[39m2013-10-24 07:33:57,326 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:57,326 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for opId 
[0;39m[39m2013-10-24 07:33:57,326 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for userId 
[0;39m[39m2013-10-24 07:33:57,326 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for recordTime 
[0;39m[39m2013-10-24 07:33:57,327 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:57,327 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for email 
[0;39m[39m2013-10-24 07:33:57,327 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for fullname 
[0;39m[39m2013-10-24 07:33:57,327 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for job 
[0;39m[39m2013-10-24 07:33:57,327 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for id 
[0;39m[39m2013-10-24 07:33:57,328 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for activity 
[0;39m[39m2013-10-24 07:33:57,328 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for endDate 
[0;39m[39m2013-10-24 07:33:57,328 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for performer 
[0;39m[39m2013-10-24 07:33:57,328 DEBUG | main | org.hibernate.cfg.annotations.SimpleValueBinder         | Setting SimpleValue typeName for startDate 
[0;39m[39m2013-10-24 07:33:57,329 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:33:57,329 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:57,329 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:57,329 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:33:57,330 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:33:57,330 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.Op.registers through a foreign key 
[0;39m[34m2013-10-24 07:33:57,330  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.Op.registers -> registers 
[0;39m[39m2013-10-24 07:33:57,330 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.op 
[0;39m[39m2013-10-24 07:33:57,331 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: op_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:33:57,331 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Second pass for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:33:57,331 DEBUG | main | org.hibernate.cfg.annotations.CollectionBinder          | Binding a OneToMany: sp.model.User.registers through a foreign key 
[0;39m[34m2013-10-24 07:33:57,331  INFO | main | org.hibernate.cfg.annotations.CollectionBinder          | Mapping collection: sp.model.User.registers -> registers 
[0;39m[39m2013-10-24 07:33:57,332 DEBUG | main | org.hibernate.cfg.annotations.TableBinder               | Retrieving property sp.model.Register.user 
[0;39m[39m2013-10-24 07:33:57,332 DEBUG | main | org.hibernate.cfg.CollectionSecondPass                  | Mapped collection key: user_id, one-to-many: sp.model.Register 
[0;39m[39m2013-10-24 07:33:57,332 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:33:57,332 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:33:57,333 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:33:57,333 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:33:57,333 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[34m2013-10-24 07:33:57,335  INFO | main | org.hibernate.cfg.Configuration                         | Hibernate Validator not found: ignoring 
[0;39m[39m2013-10-24 07:33:57,382 DEBUG | main | org.hibernate.ejb.util.NamingHelper                     | No JNDI name configured for binding Ejb3Configuration 
[0;39m[39m2013-10-24 07:33:57,382 DEBUG | main | org.hibernate.cfg.Configuration                         | Preparing to build session factory with filters : {} 
[0;39m[39m2013-10-24 07:33:57,382 DEBUG | main | org.hibernate.cfg.Configuration                         | Processing hbm.xml files 
[0;39m[39m2013-10-24 07:33:57,383 DEBUG | main | org.hibernate.cfg.Configuration                         | Process annotated classes 
[0;39m[39m2013-10-24 07:33:57,383 DEBUG | main | org.hibernate.cfg.Configuration                         | processing fk mappings (*ToOne and JoinedSubclass) 
[0;39m[39m2013-10-24 07:33:57,383 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:57,383 DEBUG | main | org.hibernate.cfg.Configuration                         | processing extends queue 
[0;39m[39m2013-10-24 07:33:57,383 DEBUG | main | org.hibernate.cfg.Configuration                         | processing collection mappings 
[0;39m[39m2013-10-24 07:33:57,384 DEBUG | main | org.hibernate.cfg.Configuration                         | processing native query and ResultSetMapping mappings 
[0;39m[39m2013-10-24 07:33:57,384 DEBUG | main | org.hibernate.cfg.Configuration                         | processing association property references 
[0;39m[39m2013-10-24 07:33:57,384 DEBUG | main | org.hibernate.cfg.Configuration                         | processing foreign key constraints 
[0;39m[39m2013-10-24 07:33:57,384 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.Op 
[0;39m[39m2013-10-24 07:33:57,385 DEBUG | main | org.hibernate.cfg.Configuration                         | resolving reference to class: sp.model.User 
[0;39m[39m2013-10-24 07:33:57,416 DEBUG | main | org.hibernate.cfg.Configuration                         | Legacy Validator not present in classpath, ignoring event listener registration 
[0;39m[39m2013-10-24 07:33:57,423 DEBUG | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Search not present in classpath, ignoring event listener registration. 
[0;39m[34m2013-10-24 07:33:57,423  INFO | main | o.h.cfg.search.HibernateSearchEventListenerRegister     | Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled. 
[0;39m[34m2013-10-24 07:33:57,424  INFO | main | org.hibernate.connection.ConnectionProviderFactory      | Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider 
[0;39m[34m2013-10-24 07:33:57,425  INFO | main | o.h.ejb.connection.InjectedDataSourceConnectionProvider | Using provided datasource 
[0;39m[39m2013-10-24 07:33:57,425 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:57,425 DEBUG | main | bitronix.tm.resource.common.XAPool                      | trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:57,425 DEBUG | main | bitronix.tm.resource.common.XAPool                      | no current transaction, no connection can be in state NOT_ACCESSIBLE when there is no global transaction context 
[0;39m[39m2013-10-24 07:33:57,425 DEBUG | main | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:57,426 DEBUG | main | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:33:57,426 DEBUG | main | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:57,426 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,426 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,427 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,427 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,427 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:33:57,427 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,429 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,429 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,429 DEBUG | main | bitronix.tm.resource.jdbc.PoolingDataSource             | acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (3 still available) 
[0;39m[34m2013-10-24 07:33:57,430  INFO | main | org.hibernate.dialect.Dialect                           | Using dialect: org.hibernate.dialect.MySQL5Dialect 
[0;39m[34m2013-10-24 07:33:57,431  INFO | main | org.hibernate.cfg.SettingsFactory                       | Database ->
       name : MySQL
    version : 5.5.32-0ubuntu0.12.04.1
      major : 5
      minor : 5 
[0;39m[34m2013-10-24 07:33:57,431  INFO | main | org.hibernate.cfg.SettingsFactory                       | Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1 
[0;39m[39m2013-10-24 07:33:57,431 DEBUG | main | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:33:57,432 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,432 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:33:57,432 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,432 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:33:57,433 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,433 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,433 DEBUG | main | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,433 DEBUG | main | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,433 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,433 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:33:57,434 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:33:57,434 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,434 DEBUG | main | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:33:57,434 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:33:57,434 DEBUG | main | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:33:57,453 DEBUG | main | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[34m2013-10-24 07:33:57,454  INFO | main | org.hibernate.transaction.TransactionFactoryFactory     | Transaction strategy: org.hibernate.ejb.transaction.JoinableCMTTransactionFactory 
[0;39m[34m2013-10-24 07:33:57,454  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiating TransactionManagerLookup: org.hibernate.transaction.BTMTransactionManagerLookup 
[0;39m[34m2013-10-24 07:33:57,454  INFO | main | o.hibernate.transaction.TransactionManagerLookupFactory | instantiated TransactionManagerLookup 
[0;39m[34m2013-10-24 07:33:57,454  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic flush during beforeCompletion(): disabled 
[0;39m[34m2013-10-24 07:33:57,455  INFO | main | org.hibernate.cfg.SettingsFactory                       | Automatic session close at end of transaction: disabled 
[0;39m[34m2013-10-24 07:33:57,455  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch size: 15 
[0;39m[34m2013-10-24 07:33:57,455  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC batch updates for versioned data: disabled 
[0;39m[34m2013-10-24 07:33:57,455  INFO | main | org.hibernate.cfg.SettingsFactory                       | Scrollable result sets: enabled 
[0;39m[39m2013-10-24 07:33:57,455 DEBUG | main | org.hibernate.cfg.SettingsFactory                       | Wrap result sets: disabled 
[0;39m[34m2013-10-24 07:33:57,455  INFO | main | org.hibernate.cfg.SettingsFactory                       | JDBC3 getGeneratedKeys(): enabled 
[0;39m[34m2013-10-24 07:33:57,456  INFO | main | org.hibernate.cfg.SettingsFactory                       | Connection release mode: auto 
[0;39m[34m2013-10-24 07:33:57,456  INFO | main | org.hibernate.cfg.SettingsFactory                       | Maximum outer join fetch depth: 2 
[0;39m[34m2013-10-24 07:33:57,456  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default batch fetch size: 1 
[0;39m[34m2013-10-24 07:33:57,456  INFO | main | org.hibernate.cfg.SettingsFactory                       | Generate SQL with comments: disabled 
[0;39m[34m2013-10-24 07:33:57,456  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL updates by primary key: disabled 
[0;39m[34m2013-10-24 07:33:57,457  INFO | main | org.hibernate.cfg.SettingsFactory                       | Order SQL inserts for batching: disabled 
[0;39m[34m2013-10-24 07:33:57,457  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:33:57,460  INFO | main | org.hibernate.hql.ast.ASTQueryTranslatorFactory         | Using ASTQueryTranslatorFactory 
[0;39m[34m2013-10-24 07:33:57,460  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query language substitutions: {} 
[0;39m[34m2013-10-24 07:33:57,460  INFO | main | org.hibernate.cfg.SettingsFactory                       | JPA-QL strict compliance: enabled 
[0;39m[34m2013-10-24 07:33:57,460  INFO | main | org.hibernate.cfg.SettingsFactory                       | Second-level cache: enabled 
[0;39m[34m2013-10-24 07:33:57,461  INFO | main | org.hibernate.cfg.SettingsFactory                       | Query cache: disabled 
[0;39m[34m2013-10-24 07:33:57,461  INFO | main | org.hibernate.cfg.SettingsFactory                       | Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory 
[0;39m[34m2013-10-24 07:33:57,461  INFO | main | org.hibernate.cfg.SettingsFactory                       | Optimize cache for minimal puts: disabled 
[0;39m[34m2013-10-24 07:33:57,461  INFO | main | org.hibernate.cfg.SettingsFactory                       | Structured second-level cache entries: disabled 
[0;39m[34m2013-10-24 07:33:57,461  INFO | main | org.hibernate.cfg.SettingsFactory                       | Echoing all SQL to stdout 
[0;39m[34m2013-10-24 07:33:57,462  INFO | main | org.hibernate.cfg.SettingsFactory                       | Statistics: disabled 
[0;39m[34m2013-10-24 07:33:57,462  INFO | main | org.hibernate.cfg.SettingsFactory                       | Deleted entity synthetic identifier rollback: disabled 
[0;39m[34m2013-10-24 07:33:57,462  INFO | main | org.hibernate.cfg.SettingsFactory                       | Default entity-mode: pojo 
[0;39m[34m2013-10-24 07:33:57,462  INFO | main | org.hibernate.cfg.SettingsFactory                       | Named query checking : enabled 
[0;39m[34m2013-10-24 07:33:57,462  INFO | main | org.hibernate.cfg.SettingsFactory                       | Check Nullability in Core (should be disabled when Bean Validation is on): disabled 
[0;39m[34m2013-10-24 07:33:57,474  INFO | main | org.hibernate.impl.SessionFactoryImpl                   | building session factory 
[0;39m[39m2013-10-24 07:33:57,475 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Statistics initialized [enabled=false]} 
[0;39m[39m2013-10-24 07:33:57,475 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:57,475 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:57,475 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3c309 
[0;39m[39m2013-10-24 07:33:57,475 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c5e4bb 
[0;39m[39m2013-10-24 07:33:57,476 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bd8663 
[0;39m[39m2013-10-24 07:33:57,476 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration yes_no -> org.hibernate.type.YesNoType@126adbb 
[0;39m[39m2013-10-24 07:33:57,476 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:57,476 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:57,476 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29cdec 
[0;39m[39m2013-10-24 07:33:57,477 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:57,477 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:57,477 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d31d61 
[0;39m[39m2013-10-24 07:33:57,477 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:57,477 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:57,478 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b569 
[0;39m[39m2013-10-24 07:33:57,478 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:57,478 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration int -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:57,478 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d5b73a 
[0;39m[39m2013-10-24 07:33:57,478 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,478 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,479 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Long -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,479 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:57,479 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:57,479 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bb724a 
[0;39m[39m2013-10-24 07:33:57,479 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:57,480 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:57,480 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1037646 
[0;39m[39m2013-10-24 07:33:57,480 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:57,480 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b848b 
[0;39m[39m2013-10-24 07:33:57,480 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:57,481 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ae80c1 
[0;39m[39m2013-10-24 07:33:57,481 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration string -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:57,481 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.String -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:57,481 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration url -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:57,481 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.net.URL -> org.hibernate.type.UrlType@606ab8 
[0;39m[39m2013-10-24 07:33:57,482 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:57,482 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Date -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:57,482 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:57,482 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa439f 
[0;39m[39m2013-10-24 07:33:57,482 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:57,482 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:57,483 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:57,483 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157d1a0 
[0;39m[39m2013-10-24 07:33:57,483 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:57,483 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:57,483 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@abf050 
[0;39m[39m2013-10-24 07:33:57,484 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12fa3df 
[0;39m[39m2013-10-24 07:33:57,484 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:57,484 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1047a5b 
[0;39m[39m2013-10-24 07:33:57,484 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:57,484 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110edc2 
[0;39m[39m2013-10-24 07:33:57,485 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration timezone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:57,485 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13309e9 
[0;39m[39m2013-10-24 07:33:57,485 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:57,485 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd4585 
[0;39m[39m2013-10-24 07:33:57,485 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:57,486 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16dd1be 
[0;39m[39m2013-10-24 07:33:57,486 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b50aa4 
[0;39m[39m2013-10-24 07:33:57,486 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c08448 
[0;39m[39m2013-10-24 07:33:57,486 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration binary -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:57,486 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration byte[] -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:57,487 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [B -> org.hibernate.type.BinaryType@1b03d90 
[0;39m[39m2013-10-24 07:33:57,487 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:57,488 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:57,488 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@692377 
[0;39m[39m2013-10-24 07:33:57,488 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration image -> org.hibernate.type.ImageType@9cc02f 
[0;39m[39m2013-10-24 07:33:57,488 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:57,489 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration char[] -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:57,489 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [C -> org.hibernate.type.CharArrayType@8b303c 
[0;39m[39m2013-10-24 07:33:57,489 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:57,489 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:57,490 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1793685 
[0;39m[39m2013-10-24 07:33:57,490 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration text -> org.hibernate.type.TextType@aa90bb 
[0;39m[39m2013-10-24 07:33:57,490 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:57,490 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:57,490 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:57,491 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:57,491 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:57,491 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:57,491 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:57,492 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:57,738 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:57,738 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration serializable -> org.hibernate.type.SerializableType@cfc4bb 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19a962c 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@805ffe 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e2f6a 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bb0d8d 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@176af20 
[0;39m[39m2013-10-24 07:33:57,739 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e3742a 
[0;39m[39m2013-10-24 07:33:57,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@dfb174 
[0;39m[39m2013-10-24 07:33:57,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fb53d7 
[0;39m[39m2013-10-24 07:33:57,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@13d7c8f 
[0;39m[39m2013-10-24 07:33:57,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration blob -> org.hibernate.type.BlobType@195537f 
[0;39m[34m2013-10-24 07:33:57,740  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [blob] overrides previous : org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:57,740 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@195537f 
[0;39m[34m2013-10-24 07:33:57,740  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1c616a1 
[0;39m[39m2013-10-24 07:33:57,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9622a 
[0;39m[34m2013-10-24 07:33:57,741  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@42dc6a 
[0;39m[39m2013-10-24 07:33:57,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1863c9b 
[0;39m[34m2013-10-24 07:33:57,741  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@5ac961 
[0;39m[39m2013-10-24 07:33:57,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration clob -> org.hibernate.type.ClobType@2b3d9a 
[0;39m[34m2013-10-24 07:33:57,741  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [clob] overrides previous : org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:57,741 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b3d9a 
[0;39m[34m2013-10-24 07:33:57,742  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@14a42e7 
[0;39m[39m2013-10-24 07:33:57,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9cb8af 
[0;39m[34m2013-10-24 07:33:57,742  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@a21cf2 
[0;39m[39m2013-10-24 07:33:57,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1210a4c 
[0;39m[34m2013-10-24 07:33:57,742  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@1f586fe 
[0;39m[39m2013-10-24 07:33:57,742 DEBUG | main | org.hibernate.type.BasicTypeRegistry                    | Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1bbe826 
[0;39m[34m2013-10-24 07:33:57,742  INFO | main | org.hibernate.type.BasicTypeRegistry                    | Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@c0894d 
[0;39m[39m2013-10-24 07:33:57,743 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Session factory constructed with filter configurations : {} 
[0;39m[39m2013-10-24 07:33:57,743 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-7-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-7-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-7-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-7-oracle/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_21-b11, hibernate.connection.autocommit=true, user.name=paul, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/i386, classworlds.conf=/home/paul/dev/netbeans-7.3/java/maven/bin/m2.conf, java.version=1.7.0_21, user.timezone=Europe/Minsk, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper.,sun.beans., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-oracle/jre, java.vm.info=mixed mode, os.version=3.2.0-54-generic-pae, hibernate.transaction.factory_class=org.hibernate.ejb.transaction.JoinableCMTTransactionFactory, sun.font.fontmanager=sun.awt.X11FontManager, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.21-b01, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., hibernate.check_nullability=false, java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/paul, java.specification.vendor=Oracle Corporation, java.library.path=/usr/lib/jvm/java-7-oracle/jre/lib/amd64:/usr/lib/jvm/java-7-oracle/jre/lib/i386::/usr/java/packages/lib/i386:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, common.loader=${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=/home/paul/dev/netbeans-7.3/java/maven, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher tomcat6:run-war, java.class.path=/home/paul/dev/netbeans-7.3/java/maven/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, catalina.home=/home/paul/NetBeansProjects/submit-jpa/submit-jpa/target/tomcat, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=i386, java.ext.dirs=/usr/lib/jvm/java-7-oracle/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/paul/NetBeansProjects/submit-jpa/submit-jpa, line.separator=
, java.vm.name=Java HotSpot(TM) Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, hibernate.transaction.manager_lookup_class=org.hibernate.transaction.BTMTransactionManagerLookup, java.specification.version=1.7, hibernate.show_sql=true} 
[0;39m[39m2013-10-24 07:33:57,744 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:33:57,745 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:33:57,745 DEBUG | main | o.h.id.factory.DefaultIdentifierGeneratorFactory        | Setting dialect [org.hibernate.dialect.MySQL5Dialect] 
[0;39m[39m2013-10-24 07:33:57,747 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Register 
[0;39m[39m2013-10-24 07:33:57,747 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id, op_id, user_id from registry.registers where id =? and op_id =? and user_id =? 
[0;39m[39m2013-10-24 07:33:57,747 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select register_.id, register_.op_id, register_.user_id, register_.record_time as record4_9_ from registry.registers register_ where register_.id=? and register_.op_id=? and register_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,747 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.registers (record_time, id, op_id, user_id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:57,747 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.registers set record_time=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:57,747 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.registers where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:57,749 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Op 
[0;39m[39m2013-10-24 07:33:57,749 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.ops where id =? 
[0;39m[39m2013-10-24 07:33:57,749 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select op_.id, op_.description as descript2_8_, op_.title as title8_ from registry.ops op_ where op_.id=? 
[0;39m[39m2013-10-24 07:33:57,749 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.ops (description, title, id) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:33:57,749 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.ops set description=?, title=? where id=? 
[0;39m[39m2013-10-24 07:33:57,750 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.ops where id=? 
[0;39m[39m2013-10-24 07:33:57,750 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.ops (description, title) values (?, ?) 
[0;39m[39m2013-10-24 07:33:57,751 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.User 
[0;39m[39m2013-10-24 07:33:57,752 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from registry.users where id =? 
[0;39m[39m2013-10-24 07:33:57,752 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select user_.id, user_.email as email10_, user_.fullname as fullname10_, user_.job as job10_ from registry.users user_ where user_.id=? 
[0;39m[39m2013-10-24 07:33:57,752 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into registry.users (email, fullname, job, id) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:57,752 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update registry.users set email=?, fullname=?, job=? where id=? 
[0;39m[39m2013-10-24 07:33:57,752 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from registry.users where id=? 
[0;39m[39m2013-10-24 07:33:57,752 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into registry.users (email, fullname, job) values (?, ?, ?) 
[0;39m[39m2013-10-24 07:33:57,754 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  | Static SQL for entity: sp.model.Report 
[0;39m[39m2013-10-24 07:33:57,754 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Version select: select id from enterprise.reports where id =? 
[0;39m[39m2013-10-24 07:33:57,754 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Snapshot select: select report_.id, report_.activity as activity11_, report_.endDate as endDate11_, report_.performer as performer11_, report_.startDate as startDate11_ from enterprise.reports report_ where report_.id=? 
[0;39m[39m2013-10-24 07:33:57,754 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Insert 0: insert into enterprise.reports (activity, endDate, performer, startDate, id) values (?, ?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:57,755 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Update 0: update enterprise.reports set activity=?, endDate=?, performer=?, startDate=? where id=? 
[0;39m[39m2013-10-24 07:33:57,755 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Delete 0: delete from enterprise.reports where id=? 
[0;39m[39m2013-10-24 07:33:57,755 DEBUG | main | org.hibernate.persister.entity.AbstractEntityPersister  |  Identity insert: insert into enterprise.reports (activity, endDate, performer, startDate) values (?, ?, ?, ?) 
[0;39m[39m2013-10-24 07:33:57,755 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.User.registers 
[0;39m[39m2013-10-24 07:33:57,755 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set user_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:57,755 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set user_id=null where user_id=? and id=? and op_id=? 
[0;39m[39m2013-10-24 07:33:57,756 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set user_id=null where user_id=? 
[0;39m[39m2013-10-24 07:33:57,756 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    | Static SQL for collection: sp.model.Op.registers 
[0;39m[39m2013-10-24 07:33:57,756 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row insert: update registry.registers set op_id=? where id=? and op_id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:57,756 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  Row delete: update registry.registers set op_id=null where op_id=? and id=? and user_id=? 
[0;39m[39m2013-10-24 07:33:57,756 DEBUG | main | o.h.persister.collection.AbstractCollectionPersister    |  One-shot delete: update registry.registers set op_id=null where op_id=? 
[0;39m[39m2013-10-24 07:33:57,757 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [NONE]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,758 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [READ]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,758 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:57,758 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [UPGRADE_NOWAIT]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:57,759 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [FORCE]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:57,759 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_READ]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:57,759 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_WRITE]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:57,759 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [PESSIMISTIC_FORCE_INCREMENT]: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? for update 
[0;39m[39m2013-10-24 07:33:57,760 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,760 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Register [OPTIMISTIC_FORCE_INCREMENT]: select register0_.id as id9_2_, register0_.op_id as op2_9_2_, register0_.user_id as user3_9_2_, register0_.record_time as record4_9_2_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_, user2_.id as id10_1_, user2_.email as email10_1_, user2_.fullname as fullname10_1_, user2_.job as job10_1_ from registry.registers register0_ inner join registry.ops op1_ on register0_.op_id=op1_.id inner join registry.users user2_ on register0_.user_id=user2_.id where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,761 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Register: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,761 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Register: select register0_.id as id9_0_, register0_.op_id as op2_9_0_, register0_.user_id as user3_9_0_, register0_.record_time as record4_9_0_ from registry.registers register0_ where register0_.id=? and register0_.op_id=? and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,761 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [NONE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:57,762 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [READ]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:57,762 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,763 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [UPGRADE_NOWAIT]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,763 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [FORCE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,763 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_READ]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:57,763 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_WRITE]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,764 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [PESSIMISTIC_FORCE_INCREMENT]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,764 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:57,764 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Op [OPTIMISTIC_FORCE_INCREMENT]: select op0_.id as id8_0_, op0_.description as descript2_8_0_, op0_.title as title8_0_ from registry.ops op0_ where op0_.id=? 
[0;39m[39m2013-10-24 07:33:57,764 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Op: select op0_.id as id8_1_, op0_.description as descript2_8_1_, op0_.title as title8_1_, registers1_.op_id as op2_8_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:33:57,765 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Op: select op0_.id as id8_1_, op0_.description as descript2_8_1_, op0_.title as title8_1_, registers1_.op_id as op2_8_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.ops op0_ left outer join registry.registers registers1_ on op0_.id=registers1_.op_id where op0_.id=? 
[0;39m[39m2013-10-24 07:33:57,765 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [NONE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:57,765 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [READ]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:57,766 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,766 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [UPGRADE_NOWAIT]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,766 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [FORCE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,766 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_READ]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:57,766 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_WRITE]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,767 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,767 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:57,767 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id10_0_, user0_.email as email10_0_, user0_.fullname as fullname10_0_, user0_.job as job10_0_ from registry.users user0_ where user0_.id=? 
[0;39m[39m2013-10-24 07:33:57,768 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.User: select user0_.id as id10_1_, user0_.email as email10_1_, user0_.fullname as fullname10_1_, user0_.job as job10_1_, registers1_.user_id as user3_10_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:33:57,768 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.User: select user0_.id as id10_1_, user0_.email as email10_1_, user0_.fullname as fullname10_1_, user0_.job as job10_1_, registers1_.user_id as user3_10_3_, registers1_.id as id3_, registers1_.op_id as op2_3_, registers1_.user_id as user3_3_, registers1_.id as id9_0_, registers1_.op_id as op2_9_0_, registers1_.user_id as user3_9_0_, registers1_.record_time as record4_9_0_ from registry.users user0_ left outer join registry.registers registers1_ on user0_.id=registers1_.user_id where user0_.id=? 
[0;39m[39m2013-10-24 07:33:57,768 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [NONE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,768 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [READ]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,769 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,769 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [UPGRADE_NOWAIT]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,769 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [FORCE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,769 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_READ]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? lock in share mode 
[0;39m[39m2013-10-24 07:33:57,770 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_WRITE]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,770 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [PESSIMISTIC_FORCE_INCREMENT]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? for update 
[0;39m[39m2013-10-24 07:33:57,770 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,770 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for entity sp.model.Report [OPTIMISTIC_FORCE_INCREMENT]: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,771 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_MERGE on entity sp.model.Report: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,771 DEBUG | main | org.hibernate.loader.entity.EntityLoader                | Static select for action ACTION_REFRESH on entity sp.model.Report: select report0_.id as id11_0_, report0_.activity as activity11_0_, report0_.endDate as endDate11_0_, report0_.performer as performer11_0_, report0_.startDate as startDate11_0_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,771 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.User.registers: select registers0_.user_id as user3_10_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id9_1_, registers0_.op_id as op2_9_1_, registers0_.user_id as user3_9_1_, registers0_.record_time as record4_9_1_, op1_.id as id8_0_, op1_.description as descript2_8_0_, op1_.title as title8_0_ from registry.registers registers0_ inner join registry.ops op1_ on registers0_.op_id=op1_.id where registers0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,772 DEBUG | main | org.hibernate.loader.collection.OneToManyLoader         | Static select for one-to-many sp.model.Op.registers: select registers0_.op_id as op2_8_2_, registers0_.id as id2_, registers0_.op_id as op2_2_, registers0_.user_id as user3_2_, registers0_.id as id9_1_, registers0_.op_id as op2_9_1_, registers0_.user_id as user3_9_1_, registers0_.record_time as record4_9_1_, user1_.id as id10_0_, user1_.email as email10_0_, user1_.fullname as fullname10_0_, user1_.job as job10_0_ from registry.registers registers0_ inner join registry.users user1_ on registers0_.user_id=user1_.id where registers0_.op_id=? 
[0;39m[39m2013-10-24 07:33:57,772 DEBUG | main | org.hibernate.impl.SessionFactoryObjectFactory          | registered: db99a72b-d936-49d8-bc2c-4b24359a2e1e (unnamed) 
[0;39m[34m2013-10-24 07:33:57,772  INFO | main | org.hibernate.impl.SessionFactoryObjectFactory          | Not binding factory to JNDI, no JNDI name configured 
[0;39m[39m2013-10-24 07:33:57,772 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | instantiated session factory 
[0;39m[39m2013-10-24 07:33:57,772 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | obtaining JTA TransactionManager 
[0;39m[39m2013-10-24 07:33:57,772 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 21 named HQL queries 
[0;39m[39m2013-10-24 07:33:57,772 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Op.findByTitle 
[0;39m[39m2013-10-24 07:33:57,773 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:33:57,776 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Op'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'title'
 
[0;39m[39m2013-10-24 07:33:57,776 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,776 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,776 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (o) -> op0_ 
[0;39m[39m2013-10-24 07:33:57,777 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:33:57,777 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o -> op0_.id 
[0;39m[39m2013-10-24 07:33:57,777 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : title -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:57,777 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  o.title -> op0_.title 
[0;39m[39m2013-10-24 07:33:57,777 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,777 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} op0_.id ) ( FromClause{level=1} registry.ops op0_ ) ( where ( = ( op0_.title op0_.id title ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:57,778 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.ops op0_] 
[0;39m[39m2013-10-24 07:33:57,778 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,778 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'op0_.id as id8_' {alias=o, className=sp.model.Op, tableAlias=op0_}
    |  \-[SQL_TOKEN] SqlFragment: 'op0_.description as descript2_8_, op0_.title as title8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[op0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.ops op0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=registry.ops,tableAlias=op0_,origin=null,columns={,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'op0_.title' {propertyName=title,dereferenceType=ALL,propertyPath=title,path=o.title,tableAlias=op0_,className=sp.model.Op,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'op0_.id' {alias=o, className=sp.model.Op, tableAlias=op0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=title, expectedType=org.hibernate.type.StringType@8be9a1}
 
[0;39m[39m2013-10-24 07:33:57,778 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,779 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select o from sp.model.Op o where o.title = :title 
[0;39m[39m2013-10-24 07:33:57,779 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select op0_.id as id8_, op0_.description as descript2_8_, op0_.title as title8_ from registry.ops op0_ where op0_.title=? 
[0;39m[39m2013-10-24 07:33:57,779 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,779 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByOp 
[0;39m[39m2013-10-24 07:33:57,780 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:57,790 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:57,790 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,790 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,791 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,791 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,791 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,791 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:57,791 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:57,791 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,792 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,793 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:57,793 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,793 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,793 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,793 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,794 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:33:57,794 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,794 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:57,794 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.op_id=? 
[0;39m[39m2013-10-24 07:33:57,794 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,795 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReports 
[0;39m[39m2013-10-24 07:33:57,795 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:57,798 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:33:57,798 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,799 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,799 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:57,799 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,799 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,800 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,800 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,800 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,800 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count report0_.id ) ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:57,801 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:57,801 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,801 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:57,801 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,801 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r) from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:57,802 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(report0_.id) as col_0_0_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:33:57,802 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,802 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByIds 
[0;39m[39m2013-10-24 07:33:57,802 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:57,805 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'ids'
 
[0;39m[39m2013-10-24 07:33:57,805 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,805 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,805 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:57,805 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,806 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,806 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,806 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,806 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,806 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( in ( report0_.id report0_.id id ) ( inList ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:57,807 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:57,807 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,807 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=ids, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:57,807 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,807 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id IN :ids 
[0;39m[39m2013-10-24 07:33:57,808 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.id in (?) 
[0;39m[39m2013-10-24 07:33:57,808 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,808 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPeriod 
[0;39m[39m2013-10-24 07:33:57,808 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:57,812 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'startDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:57,812 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,812 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,812 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:57,812 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,813 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,813 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:57,813 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:33:57,813 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,813 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:57,813 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:33:57,814 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,814 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( >= ( report0_.startDate report0_.id startDate ) ? ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:57,814 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:57,814 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,815 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e6f3cd}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e6f3cd}
 
[0;39m[39m2013-10-24 07:33:57,815 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,815 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:57,815 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:33:57,815 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,815 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.hasReport 
[0;39m[39m2013-10-24 07:33:57,816 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:33:57,820 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:33:57,820 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,820 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,820 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:57,821 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,821 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,821 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,821 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,821 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,821 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.id report0_.id id ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:57,822 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:57,822 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,822 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:57,822 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,823 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:33:57,823 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.id=? 
[0;39m[39m2013-10-24 07:33:57,823 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,823 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getAllReports 
[0;39m[39m2013-10-24 07:33:57,823 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:57,825 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'r'
 
[0;39m[39m2013-10-24 07:33:57,825 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,825 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,825 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:57,826 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,826 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,826 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:33:57,826 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:57,826 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,827 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:33:57,827 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,827 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:57,827 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:33:57,827 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,827 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countAll 
[0;39m[39m2013-10-24 07:33:57,828 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:33:57,830 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Register'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'r'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:57,830 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,830 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,831 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,831 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,831 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,831 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:57,831 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:57,831 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:57,832 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,832 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,832 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ) 
[0;39m[39m2013-10-24 07:33:57,832 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,832 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,833 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,833 DEBUG | main | org.hibernate.hql.ast.tree.QueryNode                    | getWhereClause() : Creating a new WHERE clause... 
[0;39m[39m2013-10-24 07:33:57,833 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,833 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[THETA_JOINS] SqlNode: '{theta joins}'
          \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
 
[0;39m[39m2013-10-24 07:33:57,833 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,834 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r 
[0;39m[39m2013-10-24 07:33:57,834 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id 
[0;39m[39m2013-10-24 07:33:57,834 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,834 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.find 
[0;39m[39m2013-10-24 07:33:57,834 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:33:57,839 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'op'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'op'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'user'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'user'
          \-[BETWEEN] Node: 'between'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'recordTime'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'startDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:57,840 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,840 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,840 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,840 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,840 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,841 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:57,842 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:57,842 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,842 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:57,842 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:33:57,842 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,842 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( and ( and ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:57,843 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,843 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,844 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  |  \-[IDENT] IdentNode: 'op' {originalText=op}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |     |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[BETWEEN] BetweenOperatorNode: 'between'
             +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
             +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
 
[0;39m[39m2013-10-24 07:33:57,844 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,844 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op and r.user = :user and (r.recordTime between :startDate and :endDate) 
[0;39m[39m2013-10-24 07:33:57,844 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.op_id=? and register0_.user_id=? and (register0_.record_time between ? and ?) 
[0;39m[39m2013-10-24 07:33:57,845 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,845 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getLastIdByUserAndOp 
[0;39m[39m2013-10-24 07:33:57,846 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:33:57,851 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'r'
    |        |  \-[IDENT] Node: 'id'
    |        \-[IDENT] Node: 'id'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 'r'
       |  |  \-[IDENT] Node: 'id'
       |  \-[IDENT] Node: 'id'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:33:57,851 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,852 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,852 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,852 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,853 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@d31cde 
[0;39m[39m2013-10-24 07:33:57,853 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:33:57,853 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:57,853 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,853 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.ComponentType@d31cde 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | Unresolved property path is now 'id.id' 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id.id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id.id -> register0_.id 
[0;39m[39m2013-10-24 07:33:57,854 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,855 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.id ( register0_.id (register0_.id, register0_.op_id, register0_.user_id) id ) id ) desc ) ) 
[0;39m[39m2013-10-24 07:33:57,855 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,855 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,856 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
    |  |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=r.id.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[DOT] DotNode: 'register0_.id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=r.id,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:33:57,856 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,856 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r.id.id from sp.model.Register r order by r.id.id desc 
[0;39m[39m2013-10-24 07:33:57,856 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as col_0_0_ from registry.registers register0_ order by register0_.id desc 
[0;39m[39m2013-10-24 07:33:57,856 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,857 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByUser 
[0;39m[39m2013-10-24 07:33:57,857 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:57,859 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:33:57,860 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,860 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,860 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,860 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,861 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:57,862 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,862 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,862 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:33:57,862 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,863 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:57,863 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,863 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,863 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReportsByPerformer 
[0;39m[39m2013-10-24 07:33:57,863 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:33:57,866 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'performer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:33:57,866 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,866 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,866 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:57,867 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,867 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:57,867 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:57,867 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:33:57,867 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,867 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( = ( report0_.performer report0_.id performer ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:57,868 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:57,868 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,868 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@8be9a1}
 
[0;39m[39m2013-10-24 07:33:57,868 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,869 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer 
[0;39m[39m2013-10-24 07:33:57,869 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.performer=? 
[0;39m[39m2013-10-24 07:33:57,869 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,869 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUserAndOp 
[0;39m[39m2013-10-24 07:33:57,869 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:33:57,874 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'r'
          |  |  \-[IDENT] Node: 'user'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'user'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'op'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:57,874 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,874 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,874 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,874 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,875 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,875 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:57,875 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:57,875 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:57,875 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,875 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,876 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,877 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:57,877 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,877 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,877 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( and ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:57,877 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,877 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,878 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,878 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,878 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
             |  \-[IDENT] IdentNode: 'op' {originalText=op}
             \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:33:57,878 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,879 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user and r.op = :op 
[0;39m[39m2013-10-24 07:33:57,879 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? and register0_.op_id=? 
[0;39m[39m2013-10-24 07:33:57,879 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,879 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.countByUser 
[0;39m[39m2013-10-24 07:33:57,879 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:57,883 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'r'
    |           \-[IDENT] Node: 'op'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'user'
 
[0;39m[39m2013-10-24 07:33:57,883 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,883 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,883 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceEntityJoin() : generating join for op in sp.model.Register {no alias} parent = [ {null} ] 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Op (no alias) -> op1_ 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.FromClause                   | addJoinByPathMap() : r.op -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}} 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:57,884 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,885 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : user -> org.hibernate.type.ManyToOneType(sp.model.User) 
[0;39m[39m2013-10-24 07:33:57,885 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property user in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:57,885 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [user] 
[0;39m[39m2013-10-24 07:33:57,885 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.user -> register0_.user_id 
[0;39m[39m2013-10-24 07:33:57,885 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,885 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} ( count ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ) ) ( FromClause{level=1} ( registry.registers register0_ registry.ops op1_ ) ) ( where ( = ( register0_.user_id (register0_.id, register0_.op_id, register0_.user_id) user ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:57,886 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,886 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using unprocessed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,886 DEBUG | main | org.hibernate.hql.ast.util.SyntheticAndFactory          | Using processed WHERE-fragment [register0_.op_id=op1_.id] 
[0;39m[39m2013-10-24 07:33:57,886 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,887 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.ops,registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=EOF,propertyPath=op,path=r.op,tableAlias=op1_,className=sp.model.Op,classAlias=null}
    |  |     +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  |     \-[IDENT] IdentNode: 'op' {originalText=op}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_, op1_], fromElementsByPath=[r.op], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'registry.ops op1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=registry.ops,tableAlias=op1_,origin=registry.registers register0_,columns={register0_.op_id ,className=sp.model.Op}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'register0_.op_id=op1_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.user_id' {propertyName=user,dereferenceType=0,propertyPath=user,path=r.user,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=user, expectedType=org.hibernate.type.ManyToOneType(sp.model.User)}
 
[0;39m[39m2013-10-24 07:33:57,887 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,887 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select count(r.op) from sp.model.Register r where r.user = :user 
[0;39m[39m2013-10-24 07:33:57,887 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select count(register0_.op_id) as col_0_0_ from registry.registers register0_, registry.ops op1_ where register0_.op_id=op1_.id and register0_.user_id=? 
[0;39m[39m2013-10-24 07:33:57,887 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,888 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getAll 
[0;39m[39m2013-10-24 07:33:57,888 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:33:57,890 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'r'
       |  \-[IDENT] Node: 'recordTime'
       \-[DESCENDING] Node: 'desc'
 
[0;39m[39m2013-10-24 07:33:57,891 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:57,891 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,891 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:57,891 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,891 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:57,892 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:57,892 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:33:57,892 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,892 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( order ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) desc ) ) 
[0;39m[39m2013-10-24 07:33:57,892 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:57,892 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:57,893 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
       |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
       |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
       \-[DESCENDING] SqlNode: 'desc'
 
[0;39m[39m2013-10-24 07:33:58,330 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,331 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r order by r.recordTime desc 
[0;39m[39m2013-10-24 07:33:58,331 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ order by register0_.record_time desc 
[0;39m[39m2013-10-24 07:33:58,331 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,331 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getReports 
[0;39m[39m2013-10-24 07:33:58,331 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:58,338 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Report'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'r'
          |  |  |  \-[IDENT] Node: 'performer'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'performer'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'r'
          |     |  \-[IDENT] Node: 'startDate'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'startDate'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'r'
             |  \-[IDENT] Node: 'endDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:58,338 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,338 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,338 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:58,339 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:58,339 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:58,339 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:58,339 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:33:58,339 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:58,339 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : startDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:58,340 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.startDate -> report0_.startDate 
[0;39m[39m2013-10-24 07:33:58,340 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:58,340 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : endDate -> org.hibernate.type.DateType@e6f3cd 
[0;39m[39m2013-10-24 07:33:58,340 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.endDate -> report0_.endDate 
[0;39m[39m2013-10-24 07:33:58,340 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,341 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} report0_.id ) ( FromClause{level=1} enterprise.reports report0_ ) ( where ( and ( and ( = ( report0_.performer report0_.id performer ) ? ) ( >= ( report0_.startDate report0_.id startDate ) ? ) ) ( <= ( report0_.endDate report0_.id endDate ) ? ) ) ) ) 
[0;39m[39m2013-10-24 07:33:58,341 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:58,341 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,341 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'report0_.id as id11_' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  \-[SQL_TOKEN] SqlFragment: 'report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=performer, expectedType=org.hibernate.type.StringType@8be9a1}
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'report0_.startDate' {propertyName=startDate,dereferenceType=ALL,propertyPath=startDate,path=r.startDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |     |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |     |  \-[IDENT] IdentNode: 'startDate' {originalText=startDate}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.DateType@e6f3cd}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'report0_.endDate' {propertyName=endDate,dereferenceType=ALL,propertyPath=endDate,path=r.endDate,tableAlias=report0_,className=sp.model.Report,classAlias=r}
             |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
             |  \-[IDENT] IdentNode: 'endDate' {originalText=endDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.DateType@e6f3cd}
 
[0;39m[39m2013-10-24 07:33:58,342 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,342 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Report r where r.performer = :performer and r.startDate >= :startDate and r.endDate <= :endDate 
[0;39m[39m2013-10-24 07:33:58,342 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select report0_.id as id11_, report0_.activity as activity11_, report0_.endDate as endDate11_, report0_.performer as performer11_, report0_.startDate as startDate11_ from enterprise.reports report0_ where report0_.performer=? and report0_.startDate>=? and report0_.endDate<=? 
[0;39m[39m2013-10-24 07:33:58,342 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,342 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.removeReport 
[0;39m[39m2013-10-24 07:33:58,344 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: delete from sp.model.Report r where r.id = :id 
[0;39m[39m2013-10-24 07:33:58,346 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'sp'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Report'
    |     \-[ALIAS] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'
 
[0;39m[39m2013-10-24 07:33:58,346 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,346 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete << begin [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:33:58,347 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:58,347 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> id 
[0;39m[39m2013-10-24 07:33:58,347 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : id -> org.hibernate.type.LongType@165797a 
[0;39m[39m2013-10-24 07:33:58,347 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.id -> id 
[0;39m[39m2013-10-24 07:33:58,347 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete : finishing up [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:33:58,347 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | delete >> end [level=1, statement=delete] 
[0;39m[39m2013-10-24 07:33:58,348 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (enterprise.reports)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'enterprise.reports' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=r.id,tableAlias=report0_,className=sp.model.Report,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=r, className=sp.model.Report, tableAlias=report0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@165797a}
 
[0;39m[39m2013-10-24 07:33:58,348 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,349 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,349 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: User.findByFullname 
[0;39m[39m2013-10-24 07:33:58,349 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:33:58,352 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'fullname'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fullname'
 
[0;39m[39m2013-10-24 07:33:58,352 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,353 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,353 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.User (u) -> user0_ 
[0;39m[39m2013-10-24 07:33:58,353 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:33:58,353 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u -> user0_.id 
[0;39m[39m2013-10-24 07:33:58,353 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : fullname -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:58,353 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  u.fullname -> user0_.fullname 
[0;39m[39m2013-10-24 07:33:58,354 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,354 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} registry.users user0_ ) ( where ( = ( user0_.fullname user0_.id fullname ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:58,354 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.users user0_] 
[0;39m[39m2013-10-24 07:33:58,354 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,355 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id10_' {alias=u, className=sp.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email10_, user0_.fullname as fullname10_, user0_.job as job10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=registry.users,tableAlias=user0_,origin=null,columns={,className=sp.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.fullname' {propertyName=fullname,dereferenceType=ALL,propertyPath=fullname,path=u.fullname,tableAlias=user0_,className=sp.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=sp.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'fullname' {originalText=fullname}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fullname, expectedType=org.hibernate.type.StringType@8be9a1}
 
[0;39m[39m2013-10-24 07:33:58,355 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,355 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select u from sp.model.User u where u.fullname = :fullname 
[0;39m[39m2013-10-24 07:33:58,355 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select user0_.id as id10_, user0_.email as email10_, user0_.fullname as fullname10_, user0_.job as job10_ from registry.users user0_ where user0_.fullname=? 
[0;39m[39m2013-10-24 07:33:58,355 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,356 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.getRegistersByOp 
[0;39m[39m2013-10-24 07:33:58,356 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:58,358 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'op'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'op'
 
[0;39m[39m2013-10-24 07:33:58,359 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,359 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,359 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:58,359 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:58,359 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:58,360 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : op -> org.hibernate.type.ManyToOneType(sp.model.Op) 
[0;39m[39m2013-10-24 07:33:58,360 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | dereferenceShortcut() : property op in sp.model.Register does not require a join. 
[0;39m[39m2013-10-24 07:33:58,360 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | terminal propertyPath = [op] 
[0;39m[39m2013-10-24 07:33:58,360 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.op -> register0_.op_id 
[0;39m[39m2013-10-24 07:33:58,360 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,360 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( = ( register0_.op_id (register0_.id, register0_.op_id, register0_.user_id) op ) ? ) ) ) 
[0;39m[39m2013-10-24 07:33:58,361 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:58,361 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,361 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'register0_.op_id' {propertyName=op,dereferenceType=0,propertyPath=op,path=r.op,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'op' {originalText=op}
          \-[NAMED_PARAM] ParameterNode: '?' {name=op, expectedType=org.hibernate.type.ManyToOneType(sp.model.Op)}
 
[0;39m[39m2013-10-24 07:33:58,361 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,361 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.op = :op 
[0;39m[39m2013-10-24 07:33:58,362 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.op_id=? 
[0;39m[39m2013-10-24 07:33:58,362 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,362 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Register.findByPeriod 
[0;39m[39m2013-10-24 07:33:58,362 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:33:58,366 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sp'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Register'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'recordTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'startDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'endDate'
 
[0;39m[39m2013-10-24 07:33:58,366 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,366 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,367 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Register (r) -> register0_ 
[0;39m[39m2013-10-24 07:33:58,367 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:58,367 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> (register0_.id, register0_.op_id, register0_.user_id) 
[0;39m[39m2013-10-24 07:33:58,368 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : recordTime -> org.hibernate.type.TimestampType@c78e3a 
[0;39m[39m2013-10-24 07:33:58,368 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.recordTime -> register0_.record_time 
[0;39m[39m2013-10-24 07:33:58,368 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,369 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} (register0_.id, register0_.op_id, register0_.user_id) ) ( FromClause{level=1} registry.registers register0_ ) ( where ( between ( register0_.record_time (register0_.id, register0_.op_id, register0_.user_id) recordTime ) ? ? ) ) ) 
[0;39m[39m2013-10-24 07:33:58,369 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [registry.registers register0_] 
[0;39m[39m2013-10-24 07:33:58,369 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,370 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (registry.registers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_' {alias=r, className=sp.model.Register, tableAlias=register0_}
    |  \-[SQL_TOKEN] SqlFragment: 'register0_.record_time as record4_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[register0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'registry.registers register0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=registry.registers,tableAlias=register0_,origin=null,columns={,className=sp.model.Register}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'register0_.record_time' {propertyName=recordTime,dereferenceType=ALL,propertyPath=recordTime,path=r.recordTime,tableAlias=register0_,className=sp.model.Register,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: '(register0_.id, register0_.op_id, register0_.user_id)' {alias=r, className=sp.model.Register, tableAlias=register0_}
          |  \-[IDENT] IdentNode: 'recordTime' {originalText=recordTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=startDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
          \-[NAMED_PARAM] ParameterNode: '?' {name=endDate, expectedType=org.hibernate.type.TimestampType@c78e3a}
 
[0;39m[39m2013-10-24 07:33:58,370 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,370 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select r from sp.model.Register r where r.recordTime between :startDate and :endDate 
[0;39m[39m2013-10-24 07:33:58,370 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select register0_.id as id9_, register0_.op_id as op2_9_, register0_.user_id as user3_9_, register0_.record_time as record4_9_ from registry.registers register0_ where register0_.record_time between ? and ? 
[0;39m[39m2013-10-24 07:33:58,371 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,371 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking named query: Report.getPerformers 
[0;39m[39m2013-10-24 07:33:58,371 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | parse() - HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:58,375 DEBUG | main | org.hibernate.hql.ast.AST                               | --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sp'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Report'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'r'
             \-[IDENT] Node: 'performer'
 
[0;39m[39m2013-10-24 07:33:58,375 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,375 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select << begin [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,376 DEBUG | main | org.hibernate.hql.ast.tree.FromElement                  | FromClause{level=1} :  sp.model.Report (r) -> report0_ 
[0;39m[39m2013-10-24 07:33:58,376 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r -> report0_.id 
[0;39m[39m2013-10-24 07:33:58,376 DEBUG | main | org.hibernate.hql.ast.tree.DotNode                      | getDataType() : performer -> org.hibernate.type.StringType@8be9a1 
[0;39m[39m2013-10-24 07:33:58,377 DEBUG | main | org.hibernate.hql.ast.tree.FromReferenceNode            | Resolved :  r.performer -> report0_.performer 
[0;39m[39m2013-10-24 07:33:58,377 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select : finishing up [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,377 DEBUG | main | org.hibernate.hql.ast.HqlSqlWalker                      | processQuery() :  ( SELECT ( {select clause} distinct ( report0_.performer report0_.id performer ) ) ( FromClause{level=1} enterprise.reports report0_ ) ) 
[0;39m[39m2013-10-24 07:33:58,377 DEBUG | main | org.hibernate.hql.ast.util.JoinProcessor                | Using FROM fragment [enterprise.reports report0_] 
[0;39m[39m2013-10-24 07:33:58,377 DEBUG | main | org.hibernate.hql.antlr.HqlSqlBaseWalker                | select >> end [level=1, statement=select] 
[0;39m[39m2013-10-24 07:33:58,378 DEBUG | main | org.hibernate.hql.ast.AST                               | --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (enterprise.reports)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'report0_.performer' {propertyName=performer,dereferenceType=ALL,propertyPath=performer,path=r.performer,tableAlias=report0_,className=sp.model.Report,classAlias=r}
    |  |  +-[ALIAS_REF] IdentNode: 'report0_.id' {alias=r, className=sp.model.Report, tableAlias=report0_}
    |  |  \-[IDENT] IdentNode: 'performer' {originalText=performer}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[report0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'enterprise.reports report0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=enterprise.reports,tableAlias=report0_,origin=null,columns={,className=sp.model.Report}}
 
[0;39m[39m2013-10-24 07:33:58,378 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,378 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | HQL: select distinct r.performer from sp.model.Report r 
[0;39m[39m2013-10-24 07:33:58,379 DEBUG | main | org.hibernate.hql.ast.QueryTranslatorImpl               | SQL: select distinct report0_.performer as col_0_0_ from enterprise.reports report0_ 
[0;39m[39m2013-10-24 07:33:58,379 DEBUG | main | org.hibernate.hql.ast.ErrorCounter                      | throwQueryException() : no errors 
[0;39m[39m2013-10-24 07:33:58,379 DEBUG | main | org.hibernate.impl.SessionFactoryImpl                   | Checking 0 named SQL queries 
[0;39m[1;31m2013-10-24 07:33:58,381 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.Register_#recordTime 
[0;39m[1;31m2013-10-24 07:33:58,382 ERROR | main | org.hibernate.ejb.metamodel.MetadataContext             | Unable to locate static metamodel field : sp.model.User_#fullname 
[0;39m[34m2013-10-24 07:33:58,501  INFO | main | org.apache.solr.client.solrj.impl.HttpClientUtil        | Creating new http client, config:maxConnections=128&maxConnectionsPerHost=32&followRedirects=false 
[0;39m[34m2013-10-24 07:34:00,238  INFO | main | o.s.s.a.intercept.aopalliance.MethodSecurityInterceptor | Validated configuration attributes 
[0;39m[34m2013-10-24 07:34:00,598  INFO | main | o.s.jdbc.datasource.DriverManagerDataSource             | Loaded JDBC driver: com.mysql.jdbc.Driver 
[0;39m[34m2013-10-24 07:34:00,601  INFO | main | o.s.jdbc.datasource.DriverManagerDataSource             | Loaded JDBC driver: com.mysql.jdbc.Driver 
[0;39m[34m2013-10-24 07:34:00,673  INFO | main | o.s.jdbc.datasource.DriverManagerDataSource             | Loaded JDBC driver: com.mysql.jdbc.Driver 
[0;39m[34m2013-10-24 07:34:00,832  INFO | main | o.s.s.web.access.intercept.FilterSecurityInterceptor    | Validated configuration attributes 
[0;39m[34m2013-10-24 07:34:01,004  INFO | main | o.s.security.web.access.channel.ChannelProcessingFilter | Validated configuration attributes 
[0;39m[34m2013-10-24 07:34:01,184  INFO | main | org.springframework.web.context.ContextLoader           | Root WebApplicationContext: initialization completed in 12274 ms 
[0;39m[34m2013-10-24 07:34:01,345  INFO | main | org.springframework.web.servlet.DispatcherServlet       | FrameworkServlet 'report-dispatcher': initialization started 
[0;39m[34m2013-10-24 07:34:01,347  INFO | main | o.s.web.context.support.XmlWebApplicationContext        | Refreshing WebApplicationContext for namespace 'report-dispatcher-servlet': startup date [Thu Oct 24 07:34:01 FET 2013]; parent: Root WebApplicationContext 
[0;39m[34m2013-10-24 07:34:01,349  INFO | main | o.s.beans.factory.xml.XmlBeanDefinitionReader           | Loading XML bean definitions from ServletContext resource [/WEB-INF/report-dispatcher-servlet.xml] 
[0;39m[34m2013-10-24 07:34:01,520  INFO | main | o.s.context.annotation.ClassPathBeanDefinitionScanner   | JSR-330 'javax.inject.Named' annotation found and supported for component scanning 
[0;39m[34m2013-10-24 07:34:01,660  INFO | main | o.s.c.support.PropertySourcesPlaceholderConfigurer      | Loading properties file from class path resource [report-servlet.properties] 
[0;39m[34m2013-10-24 07:34:01,666  INFO | main | o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
[0;39m[34m2013-10-24 07:34:01,689  INFO | main | o.s.beans.factory.support.DefaultListableBeanFactory    | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1025697: defining beans [org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#0,org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,org.springframework.web.servlet.resource.ResourceHttpRequestHandler#1,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#1,org.springframework.web.servlet.resource.ResourceHttpRequestHandler#2,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#2,org.springframework.web.servlet.resource.ResourceHttpRequestHandler#3,org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#3,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping#0,org.springframework.format.support.FormattingConversionServiceFactoryBean#0,org.springframework.validation.beanvalidation.LocalValidatorFactoryBean#0,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#0,org.springframework.web.servlet.handler.MappedInterceptor#0,org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0,org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0,org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0,adminController,checklistController,forwardController,homeController,errorController,ajaxController,suggestController,emailController,registryController,solrSuggestController,loginController,reportController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,velocityConfig,viewResolver,messageSource,localeResolver,org.springframework.web.servlet.handler.MappedInterceptor#1,org.springframework.web.servlet.handler.MappedInterceptor#2,handlerMapping,multipartResolver,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@23c0bd 
[0;39m[34m2013-10-24 07:34:01,898  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/img/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
[0;39m[34m2013-10-24 07:34:01,938  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/js/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#1' 
[0;39m[34m2013-10-24 07:34:01,942  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/css/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#2' 
[0;39m[34m2013-10-24 07:34:01,949  INFO | main | o.s.web.servlet.handler.SimpleUrlHandlerMapping         | Mapped URL path [/resources/font/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#3' 
[0;39m[34m2013-10-24 07:34:02,011  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/admin/update],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[text/plain;charset=utf-8],custom=[]}" onto public java.lang.String sp.controller.AdminController.updateSystemProperties(java.lang.String,java.lang.String,java.lang.String,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,012  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/admin/ || /admin/manager || /admin],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AdminController.manager(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,015  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.checklist(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,016  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/empty],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.emptyChecklist(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,016  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/remove/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.removeFromChecklist(java.lang.Long,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,017  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/remove],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.removeFromChecklistById(java.lang.Long,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,017  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/email],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ChecklistController.sendStatisticsOnEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,java.lang.String,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,017  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/checklist/stats],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.ajax.Statistics sp.controller.ChecklistController.getStatistics(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,018  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/forward],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ForwardController.forward(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,019  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/contact],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.contact(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,020  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/instruction],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.instruction(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,020  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/about],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.about(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,020  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/ || /home],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.HomeController.home(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,022  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/notsupported],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.notssupported() 
[0;39m[34m2013-10-24 07:34:02,023  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/badrequest],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.badrequest() 
[0;39m[34m2013-10-24 07:34:02,023  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/missing],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.missing() 
[0;39m[34m2013-10-24 07:34:02,023  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.error() 
[0;39m[34m2013-10-24 07:34:02,024  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/access],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ErrorController.access() 
[0;39m[34m2013-10-24 07:34:02,034  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.Report sp.controller.AjaxController.getReport(java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,035  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/watch/{id}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.watchReportById(java.lang.Long,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,035  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/watch],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.watchAll(java.lang.Long[],javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,035  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/uri],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.getUri(java.lang.Long,javax.servlet.http.HttpServletRequest,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,036  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/pager/remove],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.removeFromPager(java.lang.Long,java.lang.String,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,036  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/remove],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.AjaxController.removeReport(java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,037  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.ajax.AjaxResponse sp.controller.AjaxController.update(sp.model.Report,org.springframework.validation.BindingResult,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,037  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/ajax/add],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public sp.model.ajax.AjaxResponse sp.controller.AjaxController.add(sp.model.Report,org.springframework.validation.BindingResult,java.util.Locale,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,048  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<sp.model.ajax.ResultPager> sp.controller.SuggestController.getReportsByQuery(java.lang.String,sp.util.SpLightPager,java.lang.Integer,java.lang.String,boolean,boolean,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession) 
[0;39m[34m2013-10-24 07:34:02,048  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/prompt],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<sp.model.ajax.Prompt>> sp.controller.SuggestController.getPrompts(java.lang.String,java.lang.Integer,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,049  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/ids],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.Long>> sp.controller.SuggestController.getIdsByQuery(java.lang.String,java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,050  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/prompt-strings],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> sp.controller.SuggestController.getPromptsAsString(java.lang.String,java.lang.Integer,boolean,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,050  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest/ajax/count],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.lang.Long> sp.controller.SuggestController.getCount(java.lang.String,boolean,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,051  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/email/statistics],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.EmailController.getHtmlWithStatistics(sp.model.ajax.Statistics,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) 
[0;39m[34m2013-10-24 07:34:02,053  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/registry/nothing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.RegistryController.nothingFound(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,054  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/registry],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.RegistryController.showRegistry(java.lang.String,java.lang.String,sp.util.SpLazyPager,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,058  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.SolrSuggestController.setupForm(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,058  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr/suggest],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.data.domain.Page<sp.model.Report> sp.controller.SolrSuggestController.suggest(java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,059  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr/cloud],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List sp.controller.SolrSuggestController.getSearchCloud(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,059  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/suggest-solr/search],methods=[GET || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.data.domain.Page<sp.model.Report> sp.controller.SolrSuggestController.search(java.lang.String,java.lang.Integer,java.lang.String,boolean,sp.util.SpPageable,javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,061  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.LoginController.loginHome(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,062  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/logout],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.LoginController.logoutPage(javax.servlet.http.HttpSession,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,062  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.LoginController.loginForm(boolean,boolean,boolean,org.springframework.security.core.Authentication,java.security.Principal,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,070  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.doSearch(java.util.Date,java.util.Date,java.lang.String,java.util.Map<java.lang.String, org.springframework.beans.support.PagedListHolder<sp.model.Report>>,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,071  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/search/nothing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.nothingFound(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,072  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report || /report/search],methods=[GET],params=[new_search],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupForm(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,072  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/search],methods=[GET],params=[search_id],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.exposeList(java.util.Map<java.lang.String, org.springframework.beans.support.PagedListHolder<sp.model.Report>>,java.lang.String,java.lang.String,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,080  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/detail],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupDetailForm(java.lang.Long,org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,081  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/detail],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupDetailForm(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,082  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/detail/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.detailById(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest) 
[0;39m[34m2013-10-24 07:34:02,082  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/add],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.setupAddForm(org.springframework.ui.Model,javax.servlet.http.HttpServletResponse) 
[0;39m[34m2013-10-24 07:34:02,083  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/suggest],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String sp.controller.ReportController.realTimeSearch(org.springframework.ui.Model) 
[0;39m[34m2013-10-24 07:34:02,084  INFO | main | o.s.w.s.m.m.annotation.RequestMappingHandlerMapping     | Mapped "{[/report/add],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView sp.controller.ReportController.add(sp.model.Report,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
[0;39m[34m2013-10-24 07:34:03,447  INFO | main | o.s.web.servlet.view.velocity.VelocityConfigurer        | Loading Velocity config from [ServletContext resource [/WEB-INF/velocity.properties]] 
[0;39m[34m2013-10-24 07:34:03,453  INFO | main | o.s.web.servlet.view.velocity.VelocityConfigurer        | ClasspathResourceLoader with name 'springMacro' added to configured VelocityEngine 
[0;39m[39m2013-10-24 07:34:03,469 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Initializing Velocity, Calling init()... 
[0;39m[39m2013-10-24 07:34:03,469 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Starting Apache Velocity v1.7 (compiled: 2010-11-19 12:14:37) 
[0;39m[39m2013-10-24 07:34:03,469 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Default Properties File: org/apache/velocity/runtime/defaults/velocity.properties 
[0;39m[39m2013-10-24 07:34:03,469 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | LogSystem has been deprecated. Please use a LogChute implementation. 
[0;39m[39m2013-10-24 07:34:03,482 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceLoader instantiated: org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[34m2013-10-24 07:34:03,484  INFO | main | org.apache.velocity.app.VelocityEngine                  | WebappResourceLoader: added template path - '/WEB-INF/views/' 
[0;39m[39m2013-10-24 07:34:03,485 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceLoader instantiated: org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader 
[0;39m[39m2013-10-24 07:34:03,485 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceLoader instantiated: org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader 
[0;39m[39m2013-10-24 07:34:03,494 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceCache: initialized (class org.apache.velocity.runtime.resource.ResourceCacheImpl) with class java.util.Collections$SynchronizedMap cache map. 
[0;39m[39m2013-10-24 07:34:03,496 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Stop 
[0;39m[39m2013-10-24 07:34:03,498 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Define 
[0;39m[39m2013-10-24 07:34:03,500 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Break 
[0;39m[39m2013-10-24 07:34:03,502 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Evaluate 
[0;39m[39m2013-10-24 07:34:03,504 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Literal 
[0;39m[39m2013-10-24 07:34:03,507 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Macro 
[0;39m[39m2013-10-24 07:34:03,510 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Parse 
[0;39m[39m2013-10-24 07:34:03,513 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Include 
[0;39m[39m2013-10-24 07:34:03,515 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Loaded System Directive: org.apache.velocity.runtime.directive.Foreach 
[0;39m[39m2013-10-24 07:34:03,571 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Created '20' parsers. 
[0;39m[39m2013-10-24 07:34:03,582 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/global.vm 
[0;39m[39m2013-10-24 07:34:03,636 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM hint: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:34:03,637 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM hint_sticker: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:34:03,638 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM menu_sticker: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:34:03,639 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM confirm: source=/macros/global.vm 
[0;39m[39m2013-10-24 07:34:03,639 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/global.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,640 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/localizejs.vm 
[0;39m[39m2013-10-24 07:34:03,646 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM validator_l10n: source=/macros/localizejs.vm 
[0;39m[39m2013-10-24 07:34:03,646 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM datepicker_l10n: source=/macros/localizejs.vm 
[0;39m[39m2013-10-24 07:34:03,646 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/localizejs.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,647 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,667 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_uri: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,668 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_action: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,669 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_add: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,670 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_update: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,670 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_delete: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,671 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM modal_stats: source=/macros/modal.vm 
[0;39m[39m2013-10-24 07:34:03,671 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/modal.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,671 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/pager.vm 
[0;39m[39m2013-10-24 07:34:03,690 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM pager: source=/macros/pager.vm 
[0;39m[39m2013-10-24 07:34:03,691 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/pager.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,691 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/lazy-pager.vm 
[0;39m[39m2013-10-24 07:34:03,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM lazy_pager: source=/macros/lazy-pager.vm 
[0;39m[39m2013-10-24 07:34:03,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/lazy-pager.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,703 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/dynamic.vm 
[0;39m[39m2013-10-24 07:34:03,708 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM dynamic_table: source=/macros/dynamic.vm 
[0;39m[39m2013-10-24 07:34:03,708 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM dynamic_row: source=/macros/dynamic.vm 
[0;39m[39m2013-10-24 07:34:03,708 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM dynamic_button_group: source=/macros/dynamic.vm 
[0;39m[39m2013-10-24 07:34:03,709 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/dynamic.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,709 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : /macros/ajax-pager.vm 
[0;39m[39m2013-10-24 07:34:03,711 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM ajax_pager: source=/macros/ajax-pager.vm 
[0;39m[39m2013-10-24 07:34:03,711 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /macros/ajax-pager.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:34:03,711 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : adding VMs from VM library : org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,756 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springMessage: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,756 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springMessageText: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,756 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springTheme: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,757 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springThemeText: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,757 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springUrl: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,758 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springBind: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,758 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springBindEscaped: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,759 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormInput: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,759 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormPasswordInput: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,759 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormHiddenInput: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,760 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormTextarea: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,761 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormSingleSelect: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,762 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormMultiSelect: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,763 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormRadioButtons: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,763 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormCheckboxes: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,764 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springFormCheckbox: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,764 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springShowErrors: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,764 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : added VM springCloseTag: source=org/springframework/web/servlet/view/velocity/spring.vm 
[0;39m[39m2013-10-24 07:34:03,765 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found org/springframework/web/servlet/view/velocity/spring.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader  
[0;39m[39m2013-10-24 07:34:03,765 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : allowInline = true : VMs can be defined inline in templates 
[0;39m[39m2013-10-24 07:34:03,765 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : allowInlineToOverride = true : VMs defined inline may replace previous VM definitions 
[0;39m[39m2013-10-24 07:34:03,765 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : allowInlineLocal = true : VMs defined inline will be local to their defining template only. 
[0;39m[39m2013-10-24 07:34:03,765 DEBUG | main | org.apache.velocity.app.VelocityEngine                  | Velocimacro : autoload on : VM system will automatically reload global library macros 
[0;39m[34m2013-10-24 07:34:03,944  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/update] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,944  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/update.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,944  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/update/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,944  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,945  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/manager] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,945  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/manager.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,945  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/manager/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,945  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,945  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,945  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/admin.*] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,946  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/admin/admin/] onto handler 'adminController' 
[0;39m[34m2013-10-24 07:34:03,947  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,947  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,947  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,947  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,948  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/empty] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,948  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/empty.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,948  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/empty/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,949  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/{id}] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,949  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/{id}.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,949  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/{id}/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,949  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,949  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,950  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/remove/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,950  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/email] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,950  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/email.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,950  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/email/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,951  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/stats] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,951  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/stats.*] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,951  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/checklist/stats/] onto handler 'checklistController' 
[0;39m[34m2013-10-24 07:34:03,952  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/forward] onto handler 'forwardController' 
[0;39m[34m2013-10-24 07:34:03,952  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/forward.*] onto handler 'forwardController' 
[0;39m[34m2013-10-24 07:34:03,952  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/forward/] onto handler 'forwardController' 
[0;39m[34m2013-10-24 07:34:03,953  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/contact] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,953  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/contact.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,953  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/contact/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,953  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/instruction] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,953  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/instruction.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,954  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/instruction/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,954  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/about] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,954  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/about.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,954  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/about/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,955  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Root mapping to handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,955  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/home] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,955  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/home.*] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,955  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/home/] onto handler 'homeController' 
[0;39m[34m2013-10-24 07:34:03,956  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/notsupported] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,956  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/notsupported.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,956  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/notsupported/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,957  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/badrequest] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,957  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/badrequest.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,957  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/badrequest/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,957  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/missing] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,957  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/missing.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,957  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/missing/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,958  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/error] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,958  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/error.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,958  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/error/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,958  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/access] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,958  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/access.*] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,959  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/access/] onto handler 'errorController' 
[0;39m[34m2013-10-24 07:34:03,960  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,961  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,961  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,961  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,961  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/{id}] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,961  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/{id}.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,962  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/{id}/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,962  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,962  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,962  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/watch/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,962  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/uri] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,963  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/uri.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,963  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/uri/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,963  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/pager/remove] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,963  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/pager/remove.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,963  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/pager/remove/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,963  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/remove] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,964  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/remove.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,964  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/remove/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,964  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/update] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,964  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/update.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,965  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/update/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,965  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/add] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,965  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/add.*] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,965  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/ajax/add/] onto handler 'ajaxController' 
[0;39m[34m2013-10-24 07:34:03,966  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,968  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,968  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,968  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,969  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,969  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,969  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,969  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/ids] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,970  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/ids.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,970  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/ids/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,970  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt-strings] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,970  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt-strings.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,971  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/prompt-strings/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,971  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/count] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,971  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/count.*] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,971  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/ajax/count/] onto handler 'suggestController' 
[0;39m[34m2013-10-24 07:34:03,972  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/email/statistics] onto handler 'emailController' 
[0;39m[34m2013-10-24 07:34:03,972  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/email/statistics.*] onto handler 'emailController' 
[0;39m[34m2013-10-24 07:34:03,973  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/email/statistics/] onto handler 'emailController' 
[0;39m[34m2013-10-24 07:34:03,973  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/nothing] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,974  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/nothing.*] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,974  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/nothing/] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,974  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,974  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry.*] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,975  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,975  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/registry/.*] onto handler 'registryController' 
[0;39m[34m2013-10-24 07:34:03,976  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,976  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,977  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,977  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,977  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/suggest] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,978  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/suggest.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,978  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/suggest/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,979  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/cloud] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,979  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/cloud.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,979  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/cloud/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,979  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/search] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,981  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/search.*] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,982  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/suggest-solr/search/] onto handler 'solrSuggestController' 
[0;39m[34m2013-10-24 07:34:03,982  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/login] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:34:03,983  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/login.*] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:34:03,983  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/login/] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:34:03,983  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/logout] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:34:03,992  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/logout.*] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:34:03,992  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/logout/] onto handler 'loginController' 
[0;39m[34m2013-10-24 07:34:03,994  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,995  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,995  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,995  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/nothing] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,996  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/nothing.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,996  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/search/nothing/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,996  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,996  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,997  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,997  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,997  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,997  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,998  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,998  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/{id}] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,998  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/{id}.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,998  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/detail/{id}/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,999  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/add] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,999  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/add.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:03,999  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/add/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:04,000  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:04,000  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest.*] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:04,000  INFO | main | o.s.w.s.mvc.annotation.DefaultAnnotationHandlerMapping  | Mapped URL path [/report/suggest/] onto handler 'reportController' 
[0;39m[34m2013-10-24 07:34:04,076  INFO | main | org.springframework.web.servlet.DispatcherServlet       | FrameworkServlet 'report-dispatcher': initialization completed in 2731 ms 
[0;39m[39m2013-10-24 07:34:52,415 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:32:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:52,415 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:52,415 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59550549, now time: 59547643 
[0;39m[39m2013-10-24 07:34:52,415 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dc1fdb - closing time: 59547551, now time: 59547643 
[0;39m[39m2013-10-24 07:34:52,416 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dc1fdb 
[0;39m[39m2013-10-24 07:34:52,416 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dc1fdb 
[0;39m[39m2013-10-24 07:34:52,416 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dc1fdb 
[0;39m[39m2013-10-24 07:34:52,427 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d5498c - closing time: 59547576, now time: 59547643 
[0;39m[39m2013-10-24 07:34:52,428 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d5498c 
[0;39m[39m2013-10-24 07:34:52,428 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d5498c 
[0;39m[39m2013-10-24 07:34:52,428 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d5498c 
[0;39m[39m2013-10-24 07:34:52,429 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9b324 - closing time: 59547601, now time: 59547643 
[0;39m[39m2013-10-24 07:34:52,429 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9b324 
[0;39m[39m2013-10-24 07:34:52,429 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9b324 
[0;39m[39m2013-10-24 07:34:52,429 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9b324 
[0;39m[39m2013-10-24 07:34:52,430 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:34:52,447 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:34:52,447 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:34:52,458 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:34:52,458 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:34:52,469 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:34:52,469 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:34:52,469 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:52,469 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:33:27 FET 1970 
[0;39m[39m2013-10-24 07:34:52,469 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:52,470 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:32:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:34:52,470 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:33:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:34:52,470 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:32:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:52,470 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:34:53,971 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:32:28 FET 1970 
[0;39m[39m2013-10-24 07:34:53,971 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:34:53,971 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:33:28 FET 1970 
[0;39m[39m2013-10-24 07:34:53,971 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:33:28 FET 1970 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:32:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:33:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,972 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:32:28 FET 1970 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,973 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,974 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,974 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:34:53,974 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,975 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,975 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,975 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:34:53,975 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:34:53,975 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:34:53,975 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@178a364 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,976 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,977 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:53,978 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:53,979 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:53,979 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:53,979 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:53,979 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:34:53,979 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,399 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,399 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,399 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:34:54,399 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@115a9d 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:34:54,400 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,401 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:34:54,401 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,401 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,401 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,401 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,401 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:34:54,402 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:34:54,403 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:34:56,974 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:32:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:56,974 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:56,974 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59609205, now time: 59552202 
[0;39m[39m2013-10-24 07:34:56,974 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b94698 - closing time: 59552030, now time: 59552202 
[0;39m[39m2013-10-24 07:34:56,974 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b94698 
[0;39m[39m2013-10-24 07:34:56,975 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b94698 
[0;39m[39m2013-10-24 07:34:56,975 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b94698 
[0;39m[39m2013-10-24 07:34:56,975 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e7ed8 - closing time: 59552058, now time: 59552202 
[0;39m[39m2013-10-24 07:34:56,975 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e7ed8 
[0;39m[39m2013-10-24 07:34:56,975 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e7ed8 
[0;39m[39m2013-10-24 07:34:56,976 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e7ed8 
[0;39m[39m2013-10-24 07:34:56,976 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c907a - closing time: 59552086, now time: 59552202 
[0;39m[39m2013-10-24 07:34:56,976 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c907a 
[0;39m[39m2013-10-24 07:34:56,976 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c907a 
[0;39m[39m2013-10-24 07:34:56,976 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c907a 
[0;39m[39m2013-10-24 07:34:56,977 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:34:56,986 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:34:56,986 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:34:56,996 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:34:56,996 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:34:57,006 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:34:57,006 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:34:57,006 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:57,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:33:32 FET 1970 
[0;39m[39m2013-10-24 07:34:57,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:57,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:32:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:34:57,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:33:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:34:57,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:32:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:34:57,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:35:43,111 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /templates/home.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:35:43,114 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /layout/layout.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[34m2013-10-24 07:35:43,136  INFO | http-8090-1 | o.a.velocity.tools.view.servlet.ServletToolboxManager   | Using config file '/WEB-INF/toolbox.xml' 
[0;39m[31m2013-10-24 07:35:43,136  WARN | http-8090-1 | org.apache.velocity.tools.view.XMLToolboxManager        | XMLToolboxManager has been deprecated. Please use org.apache.velocity.tools.ToolboxFactory instead. 
[0;39m[31m2013-10-24 07:35:43,136  WARN | http-8090-1 | o.a.velocity.tools.view.servlet.ServletToolboxManager   | ServletToolboxManager has been deprecated. Please use org.apache.velocity.tools.ToolboxFactory instead. 
[0;39m[39m2013-10-24 07:35:43,188 DEBUG | http-8090-1 | org.apache.commons.beanutils.BeanUtils                  | BeanUtils.populate(org.apache.velocity.tools.view.DataInfo@9e5c2e, {type=string}) 
[0;39m[39m2013-10-24 07:35:43,192 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'string' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,194 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'app_version' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,195 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string '0.1.2' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,196 DEBUG | http-8090-1 | org.apache.commons.beanutils.BeanUtils                  | BeanUtils.populate(org.apache.velocity.tools.view.DataInfo@1f870c2, {type=string}) 
[0;39m[39m2013-10-24 07:35:43,196 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'string' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,196 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'app_name' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,196 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'Reports!' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,196 DEBUG | http-8090-1 | org.apache.commons.beanutils.BeanUtils                  | BeanUtils.populate(org.apache.velocity.tools.view.DataInfo@1b30d10, {type=boolean}) 
[0;39m[39m2013-10-24 07:35:43,197 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'boolean' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,197 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'debug' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,197 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'true' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,202 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'datetool' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,202 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'request' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,203 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'sp.util.SpDateTool' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,207 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'math' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,207 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'request' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,208 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'org.apache.velocity.tools.generic.MathTool' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,210 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'esc' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,210 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'request' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,210 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'org.apache.velocity.tools.generic.EscapeTool' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,211 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'sort' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,212 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'request' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,212 DEBUG | http-8090-1 | org.apache.commons.beanutils.ConvertUtils               | Convert string 'org.apache.velocity.tools.generic.SortTool' to class 'java.lang.String' 
[0;39m[39m2013-10-24 07:35:43,213 DEBUG | http-8090-1 | o.a.velocity.tools.view.servlet.ServletToolboxManager   | Toolbox setup complete. 
[0;39m[39m2013-10-24 07:35:43,216 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /templates/home.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:35:43,237 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /layout/layout.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:35:43,242 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /layout/header.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:35:43,247 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | RHS of #set statement is null. Context will not be modified. /macros/global.vm[line 66, column 1] 
[0;39m[39m2013-10-24 07:35:43,248 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | Left side ($query) of '!=' operation has null value. If it is a reference, it may not be in the context or its toString() returned null. /macros/global.vm[line 67, column 31] 
[0;39m[39m2013-10-24 07:35:43,248 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | Left side ($query.indexOf('&lang=')) of '!=' operation has null value. If it is a reference, it may not be in the context or its toString() returned null. /macros/global.vm[line 68, column 51] 
[0;39m[39m2013-10-24 07:35:43,248 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | RHS of #set statement is null. Context will not be modified. /macros/global.vm[line 69, column 1] 
[0;39m[39m2013-10-24 07:35:43,248 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | Left side of math operation ($low_index) has a null value. /macros/global.vm[line 70, column 55] 
[0;39m[39m2013-10-24 07:35:43,248 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | RHS of #set statement is null. Context will not be modified. /macros/global.vm[line 70, column 1] 
[0;39m[39m2013-10-24 07:35:43,249 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | RHS of #set statement is null. Context will not be modified. /macros/global.vm[line 72, column 1] 
[0;39m[39m2013-10-24 07:35:43,250 DEBUG | http-8090-1 | org.apache.velocity.app.VelocityEngine                  | ResourceManager : found /layout/footer.vm with loader org.apache.velocity.tools.view.WebappResourceLoader 
[0;39m[39m2013-10-24 07:35:52,525 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:33:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:52,526 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:52,527 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59609630, now time: 59607754 
[0;39m[39m2013-10-24 07:35:52,527 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2cfead - closing time: 59607674, now time: 59607754 
[0;39m[39m2013-10-24 07:35:52,528 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2cfead 
[0;39m[39m2013-10-24 07:35:52,530 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2cfead 
[0;39m[39m2013-10-24 07:35:52,530 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2cfead 
[0;39m[39m2013-10-24 07:35:52,530 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11dfb79 - closing time: 59607685, now time: 59607754 
[0;39m[39m2013-10-24 07:35:52,531 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11dfb79 
[0;39m[39m2013-10-24 07:35:52,531 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11dfb79 
[0;39m[39m2013-10-24 07:35:52,531 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11dfb79 
[0;39m[39m2013-10-24 07:35:52,531 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1120d82 - closing time: 59607696, now time: 59607754 
[0;39m[39m2013-10-24 07:35:52,532 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1120d82 
[0;39m[39m2013-10-24 07:35:52,532 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1120d82 
[0;39m[39m2013-10-24 07:35:52,532 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1120d82 
[0;39m[39m2013-10-24 07:35:52,533 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:35:52,571 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:35:52,572 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:35:52,651 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:35:52,651 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:35:52,664 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:35:52,664 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:35:52,664 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:52,665 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:34:27 FET 1970 
[0;39m[39m2013-10-24 07:35:52,665 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:52,665 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:33:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:35:52,665 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:34:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:35:52,665 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:33:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:52,665 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:35:53,666 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:33:28 FET 1970 
[0;39m[39m2013-10-24 07:35:53,666 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:35:53,666 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:34:28 FET 1970 
[0;39m[39m2013-10-24 07:35:53,666 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:34:28 FET 1970 
[0;39m[39m2013-10-24 07:35:53,667 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:35:53,667 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:33:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:35:53,667 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:34:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:35:53,667 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:33:28 FET 1970 
[0;39m[39m2013-10-24 07:35:53,667 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:35:53,703 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:35:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:35:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:35:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:35:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:35:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:35:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:35:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:35:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:35:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@10ab3f2 
[0;39m[39m2013-10-24 07:35:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:35:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:35:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,710 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,711 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,711 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,711 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,711 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:35:53,711 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:35:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:35:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:35:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:35:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@c057ba 
[0;39m[39m2013-10-24 07:35:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:35:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:35:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:35:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:35:53,733 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:35:53,733 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:35:57,168 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:33:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:57,168 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:57,168 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59668937, now time: 59612396 
[0;39m[39m2013-10-24 07:35:57,169 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bfa6fc - closing time: 59612214, now time: 59612396 
[0;39m[39m2013-10-24 07:35:57,169 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bfa6fc 
[0;39m[39m2013-10-24 07:35:57,169 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bfa6fc 
[0;39m[39m2013-10-24 07:35:57,169 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bfa6fc 
[0;39m[39m2013-10-24 07:35:57,169 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8f4acd - closing time: 59612223, now time: 59612396 
[0;39m[39m2013-10-24 07:35:57,170 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8f4acd 
[0;39m[39m2013-10-24 07:35:57,170 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8f4acd 
[0;39m[39m2013-10-24 07:35:57,170 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8f4acd 
[0;39m[39m2013-10-24 07:35:57,170 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1990c44 - closing time: 59612233, now time: 59612396 
[0;39m[39m2013-10-24 07:35:57,171 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1990c44 
[0;39m[39m2013-10-24 07:35:57,171 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1990c44 
[0;39m[39m2013-10-24 07:35:57,171 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1990c44 
[0;39m[39m2013-10-24 07:35:57,171 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:35:57,181 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:35:57,181 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:35:57,190 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:35:57,190 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:35:57,200 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:35:57,201 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:35:57,201 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:57,201 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:34:32 FET 1970 
[0;39m[39m2013-10-24 07:35:57,201 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:57,201 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:33:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:35:57,201 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:34:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:35:57,202 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:33:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:35:57,202 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:36:52,721 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:34:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:52,722 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:52,722 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59668959, now time: 59667950 
[0;39m[39m2013-10-24 07:36:52,723 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e501aa - closing time: 59667798, now time: 59667950 
[0;39m[39m2013-10-24 07:36:52,723 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e501aa 
[0;39m[39m2013-10-24 07:36:52,724 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e501aa 
[0;39m[39m2013-10-24 07:36:52,724 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1e501aa 
[0;39m[39m2013-10-24 07:36:52,725 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@37b31e - closing time: 59667878, now time: 59667950 
[0;39m[39m2013-10-24 07:36:52,725 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@37b31e 
[0;39m[39m2013-10-24 07:36:52,726 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@37b31e 
[0;39m[39m2013-10-24 07:36:52,726 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@37b31e 
[0;39m[39m2013-10-24 07:36:52,727 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1cdcebe - closing time: 59667891, now time: 59667950 
[0;39m[39m2013-10-24 07:36:52,727 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1cdcebe 
[0;39m[39m2013-10-24 07:36:52,728 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1cdcebe 
[0;39m[39m2013-10-24 07:36:52,728 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1cdcebe 
[0;39m[39m2013-10-24 07:36:52,729 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:36:52,741 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:36:52,741 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:36:52,759 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:36:52,760 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:36:52,772 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:36:52,773 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:36:52,773 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:52,773 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:35:28 FET 1970 
[0;39m[39m2013-10-24 07:36:52,774 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:52,774 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:34:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:36:52,774 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:35:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:36:52,774 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:34:27 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:52,775 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:36:53,775 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:34:28 FET 1970 
[0;39m[39m2013-10-24 07:36:53,775 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:35:28 FET 1970 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:35:28 FET 1970 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:34:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:36:53,776 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:35:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:34:28 FET 1970 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:36:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:36:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:36:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:36:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:36:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1897da1 
[0;39m[39m2013-10-24 07:36:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:36:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:36:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:36:53,812 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,812 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,812 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,812 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,812 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,813 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:36:53,813 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:36:53,813 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,813 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,813 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,813 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:36:53,814 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,815 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,815 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,815 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,815 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,815 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:36:53,815 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,833 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,833 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,833 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:36:53,834 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:36:53,834 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:36:53,834 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:36:53,834 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@534d33 
[0;39m[39m2013-10-24 07:36:53,834 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:36:53,834 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,835 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:36:53,835 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,835 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:36:53,835 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,835 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,835 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,836 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:36:53,837 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:36:53,838 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:36:53,838 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:36:53,838 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:36:53,838 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:36:57,278 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:34:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:57,278 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:57,278 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59729041, now time: 59672506 
[0;39m[39m2013-10-24 07:36:57,278 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f183c0 - closing time: 59672408, now time: 59672506 
[0;39m[39m2013-10-24 07:36:57,279 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f183c0 
[0;39m[39m2013-10-24 07:36:57,279 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f183c0 
[0;39m[39m2013-10-24 07:36:57,279 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f183c0 
[0;39m[39m2013-10-24 07:36:57,279 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1410367 - closing time: 59672418, now time: 59672506 
[0;39m[39m2013-10-24 07:36:57,279 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1410367 
[0;39m[39m2013-10-24 07:36:57,279 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1410367 
[0;39m[39m2013-10-24 07:36:57,280 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1410367 
[0;39m[39m2013-10-24 07:36:57,280 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@6b7188 - closing time: 59672428, now time: 59672506 
[0;39m[39m2013-10-24 07:36:57,280 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@6b7188 
[0;39m[39m2013-10-24 07:36:57,280 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@6b7188 
[0;39m[39m2013-10-24 07:36:57,281 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@6b7188 
[0;39m[39m2013-10-24 07:36:57,281 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:36:57,291 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:36:57,291 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:36:57,301 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:36:57,301 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:36:57,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:36:57,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:36:57,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:57,311 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:35:32 FET 1970 
[0;39m[39m2013-10-24 07:36:57,311 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:57,311 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:34:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:36:57,312 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:35:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:36:57,312 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:34:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:36:57,312 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:37:52,828 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:35:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:52,828 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:52,828 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59729064, now time: 59728056 
[0;39m[39m2013-10-24 07:37:52,829 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1c42b7 - closing time: 59727969, now time: 59728056 
[0;39m[39m2013-10-24 07:37:52,829 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1c42b7 
[0;39m[39m2013-10-24 07:37:52,829 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1c42b7 
[0;39m[39m2013-10-24 07:37:52,829 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1c42b7 
[0;39m[39m2013-10-24 07:37:52,829 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8d6a5c - closing time: 59727987, now time: 59728056 
[0;39m[39m2013-10-24 07:37:52,830 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8d6a5c 
[0;39m[39m2013-10-24 07:37:52,830 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8d6a5c 
[0;39m[39m2013-10-24 07:37:52,830 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8d6a5c 
[0;39m[39m2013-10-24 07:37:52,830 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19f498e - closing time: 59728000, now time: 59728056 
[0;39m[39m2013-10-24 07:37:52,830 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19f498e 
[0;39m[39m2013-10-24 07:37:52,830 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19f498e 
[0;39m[39m2013-10-24 07:37:52,831 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19f498e 
[0;39m[39m2013-10-24 07:37:52,831 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:37:52,843 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:37:52,844 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:37:52,857 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:37:52,857 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:37:52,869 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:37:52,869 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:37:52,870 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:52,870 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:36:28 FET 1970 
[0;39m[39m2013-10-24 07:37:52,870 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:52,870 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:35:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:37:52,870 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:36:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:37:52,871 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:35:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:52,871 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:37:53,871 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:35:28 FET 1970 
[0;39m[39m2013-10-24 07:37:53,872 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:37:53,872 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:36:28 FET 1970 
[0;39m[39m2013-10-24 07:37:53,872 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:37:53,872 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:36:28 FET 1970 
[0;39m[39m2013-10-24 07:37:53,872 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:37:53,872 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:35:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:36:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:35:28 FET 1970 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:37:53,873 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,879 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,880 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:37:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:37:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:37:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:37:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:37:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@deac49 
[0;39m[39m2013-10-24 07:37:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:37:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:37:53,886 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,904 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,904 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,904 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:37:53,908 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:37:53,908 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:37:53,909 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:37:53,909 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@85675c 
[0;39m[39m2013-10-24 07:37:53,909 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:37:53,910 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,913 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:37:53,913 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,913 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:37:53,914 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,914 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,914 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,915 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,915 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,915 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:37:53,915 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:37:53,916 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,916 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,916 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:53,916 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:37:53,916 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:37:53,917 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:37:53,917 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:37:53,917 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:37:53,917 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:37:53,917 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:37:53,918 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:37:53,918 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:37:53,918 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:37:53,918 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:37:53,919 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:37:57,374 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:35:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59789112, now time: 59732602 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@44e915 - closing time: 59732519, now time: 59732602 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@44e915 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@44e915 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@44e915 
[0;39m[39m2013-10-24 07:37:57,375 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8831a8 - closing time: 59732528, now time: 59732602 
[0;39m[39m2013-10-24 07:37:57,376 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8831a8 
[0;39m[39m2013-10-24 07:37:57,376 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8831a8 
[0;39m[39m2013-10-24 07:37:57,376 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8831a8 
[0;39m[39m2013-10-24 07:37:57,376 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8c6854 - closing time: 59732538, now time: 59732602 
[0;39m[39m2013-10-24 07:37:57,376 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8c6854 
[0;39m[39m2013-10-24 07:37:57,376 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8c6854 
[0;39m[39m2013-10-24 07:37:57,377 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8c6854 
[0;39m[39m2013-10-24 07:37:57,377 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:37:57,385 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:37:57,386 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:37:57,393 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:37:57,394 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:37:57,401 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:37:57,402 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:37:57,402 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:57,402 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:36:32 FET 1970 
[0;39m[39m2013-10-24 07:37:57,402 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:57,402 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:35:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:37:57,403 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:36:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:37:57,403 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:35:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:37:57,403 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:38:52,921 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:36:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:52,922 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:52,922 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59789144, now time: 59788149 
[0;39m[39m2013-10-24 07:38:52,922 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@56bdc2 - closing time: 59788071, now time: 59788149 
[0;39m[39m2013-10-24 07:38:52,923 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@56bdc2 
[0;39m[39m2013-10-24 07:38:52,923 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@56bdc2 
[0;39m[39m2013-10-24 07:38:52,923 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@56bdc2 
[0;39m[39m2013-10-24 07:38:52,924 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@637edd - closing time: 59788084, now time: 59788149 
[0;39m[39m2013-10-24 07:38:52,925 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@637edd 
[0;39m[39m2013-10-24 07:38:52,925 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@637edd 
[0;39m[39m2013-10-24 07:38:52,926 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@637edd 
[0;39m[39m2013-10-24 07:38:52,927 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@190e9b7 - closing time: 59788096, now time: 59788149 
[0;39m[39m2013-10-24 07:38:52,927 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@190e9b7 
[0;39m[39m2013-10-24 07:38:52,928 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@190e9b7 
[0;39m[39m2013-10-24 07:38:52,928 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@190e9b7 
[0;39m[39m2013-10-24 07:38:52,928 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:38:52,942 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:38:52,942 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:38:52,951 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:38:52,951 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:38:52,959 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:38:52,959 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:38:52,959 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:52,959 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:37:28 FET 1970 
[0;39m[39m2013-10-24 07:38:52,959 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:52,960 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:36:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:38:52,960 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:37:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:38:52,960 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:36:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:52,960 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:36:28 FET 1970 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:37:28 FET 1970 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:37:28 FET 1970 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:38:53,961 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:36:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:37:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:36:28 FET 1970 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:38:53,962 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:38:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1398d89 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:38:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:38:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:38:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,968 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,968 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,968 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,968 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,968 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:38:53,968 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,991 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,992 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,992 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:38:53,992 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1686948 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,993 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:38:53,994 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:38:53,995 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:38:53,996 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:38:53,996 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:38:53,996 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:38:53,996 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:38:53,996 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:38:53,996 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:38:57,463 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:36:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:57,464 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:57,464 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59849194, now time: 59792691 
[0;39m[39m2013-10-24 07:38:57,464 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d81b9e - closing time: 59792613, now time: 59792691 
[0;39m[39m2013-10-24 07:38:57,464 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d81b9e 
[0;39m[39m2013-10-24 07:38:57,464 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d81b9e 
[0;39m[39m2013-10-24 07:38:57,464 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d81b9e 
[0;39m[39m2013-10-24 07:38:57,465 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d4365 - closing time: 59792621, now time: 59792691 
[0;39m[39m2013-10-24 07:38:57,465 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d4365 
[0;39m[39m2013-10-24 07:38:57,465 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d4365 
[0;39m[39m2013-10-24 07:38:57,465 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d4365 
[0;39m[39m2013-10-24 07:38:57,465 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2be9b4 - closing time: 59792629, now time: 59792691 
[0;39m[39m2013-10-24 07:38:57,465 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2be9b4 
[0;39m[39m2013-10-24 07:38:57,466 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2be9b4 
[0;39m[39m2013-10-24 07:38:57,466 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2be9b4 
[0;39m[39m2013-10-24 07:38:57,466 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:38:57,473 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:38:57,473 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:38:57,481 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:38:57,481 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:38:57,489 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:38:57,489 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:37:32 FET 1970 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:36:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:37:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:36:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:38:57,490 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:39:53,007 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:37:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59849222, now time: 59848235 
[0;39m[39m2013-10-24 07:39:53,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1414b97 - closing time: 59848169, now time: 59848235 
[0;39m[39m2013-10-24 07:39:53,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1414b97 
[0;39m[39m2013-10-24 07:39:53,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1414b97 
[0;39m[39m2013-10-24 07:39:53,009 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1414b97 
[0;39m[39m2013-10-24 07:39:53,009 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19db50d - closing time: 59848178, now time: 59848235 
[0;39m[39m2013-10-24 07:39:53,010 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19db50d 
[0;39m[39m2013-10-24 07:39:53,010 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19db50d 
[0;39m[39m2013-10-24 07:39:53,010 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@19db50d 
[0;39m[39m2013-10-24 07:39:53,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@131e0fd - closing time: 59848186, now time: 59848235 
[0;39m[39m2013-10-24 07:39:53,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@131e0fd 
[0;39m[39m2013-10-24 07:39:53,012 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@131e0fd 
[0;39m[39m2013-10-24 07:39:53,012 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@131e0fd 
[0;39m[39m2013-10-24 07:39:53,013 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:39:53,029 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:39:53,029 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:39:53,042 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:39:53,043 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:39:53,053 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:39:53,053 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:39:53,053 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,054 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:38:28 FET 1970 
[0;39m[39m2013-10-24 07:39:53,054 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,054 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:37:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:39:53,054 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:38:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:39:53,054 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:37:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,055 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:39:53,555 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:37:28 FET 1970 
[0;39m[39m2013-10-24 07:39:53,555 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:39:53,555 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:38:28 FET 1970 
[0;39m[39m2013-10-24 07:39:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:38:28 FET 1970 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:37:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:38:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:39:53,556 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:37:28 FET 1970 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,557 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,558 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:39:53,558 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,558 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,559 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,559 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:39:53,559 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:39:53,559 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:39:53,559 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:39:53,559 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1f13d53 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,560 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,561 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,562 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,563 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,563 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,563 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,563 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:39:53,563 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,580 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,580 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,580 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@dbdc5b 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,581 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,582 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:39:53,583 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:39:53,584 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:39:53,584 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:39:53,584 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:39:57,558 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:37:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:57,558 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:57,558 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59908789, now time: 59852786 
[0;39m[39m2013-10-24 07:39:57,559 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@601232 - closing time: 59852701, now time: 59852786 
[0;39m[39m2013-10-24 07:39:57,559 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@601232 
[0;39m[39m2013-10-24 07:39:57,559 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@601232 
[0;39m[39m2013-10-24 07:39:57,559 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@601232 
[0;39m[39m2013-10-24 07:39:57,560 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b907bc - closing time: 59852709, now time: 59852786 
[0;39m[39m2013-10-24 07:39:57,560 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b907bc 
[0;39m[39m2013-10-24 07:39:57,560 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b907bc 
[0;39m[39m2013-10-24 07:39:57,560 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b907bc 
[0;39m[39m2013-10-24 07:39:57,560 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1950882 - closing time: 59852717, now time: 59852786 
[0;39m[39m2013-10-24 07:39:57,561 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1950882 
[0;39m[39m2013-10-24 07:39:57,561 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1950882 
[0;39m[39m2013-10-24 07:39:57,561 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1950882 
[0;39m[39m2013-10-24 07:39:57,561 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:39:57,572 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:39:57,573 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:39:57,580 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:39:57,580 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:39:57,590 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:39:57,590 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:39:57,591 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:57,591 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:38:32 FET 1970 
[0;39m[39m2013-10-24 07:39:57,591 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:57,591 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:37:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:39:57,591 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:38:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:39:57,592 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:37:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:39:57,592 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:40:53,111 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:38:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,111 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,111 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59908810, now time: 59908339 
[0;39m[39m2013-10-24 07:40:53,111 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@cf61b8 - closing time: 59908256, now time: 59908339 
[0;39m[39m2013-10-24 07:40:53,112 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@cf61b8 
[0;39m[39m2013-10-24 07:40:53,112 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@cf61b8 
[0;39m[39m2013-10-24 07:40:53,112 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@cf61b8 
[0;39m[39m2013-10-24 07:40:53,112 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f8d26a - closing time: 59908270, now time: 59908339 
[0;39m[39m2013-10-24 07:40:53,112 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f8d26a 
[0;39m[39m2013-10-24 07:40:53,113 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f8d26a 
[0;39m[39m2013-10-24 07:40:53,113 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f8d26a 
[0;39m[39m2013-10-24 07:40:53,113 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bb840b - closing time: 59908280, now time: 59908339 
[0;39m[39m2013-10-24 07:40:53,114 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bb840b 
[0;39m[39m2013-10-24 07:40:53,114 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bb840b 
[0;39m[39m2013-10-24 07:40:53,114 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1bb840b 
[0;39m[39m2013-10-24 07:40:53,114 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:40:53,121 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:40:53,122 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:40:53,136 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:40:53,136 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:40:53,145 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:40:53,145 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:40:53,145 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,146 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:39:28 FET 1970 
[0;39m[39m2013-10-24 07:40:53,146 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,146 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:38:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:40:53,146 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:39:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:40:53,146 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:38:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,146 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:38:28 FET 1970 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:39:28 FET 1970 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:39:28 FET 1970 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:40:53,647 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:40:53,648 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:40:53,648 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:38:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:40:53,680 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:39:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:40:53,680 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:38:28 FET 1970 
[0;39m[39m2013-10-24 07:40:53,681 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:40:53,648 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:40:53,682 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,682 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,683 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:40:53,684 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,684 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,684 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,684 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:40:53,685 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:40:53,685 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:40:53,685 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:40:53,685 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1dcf4a6 
[0;39m[39m2013-10-24 07:40:53,685 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:40:53,685 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:40:53,686 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,687 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:40:53,688 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1fc8f41 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:40:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:40:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:40:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:40:57,682 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:38:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:57,682 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:57,682 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 59968915, now time: 59912910 
[0;39m[39m2013-10-24 07:40:57,682 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@212395 - closing time: 59912800, now time: 59912910 
[0;39m[39m2013-10-24 07:40:57,683 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@212395 
[0;39m[39m2013-10-24 07:40:57,683 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@212395 
[0;39m[39m2013-10-24 07:40:57,683 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@212395 
[0;39m[39m2013-10-24 07:40:57,683 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14c1974 - closing time: 59912807, now time: 59912910 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14c1974 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14c1974 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14c1974 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f7712e - closing time: 59912818, now time: 59912910 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f7712e 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f7712e 
[0;39m[39m2013-10-24 07:40:57,684 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@f7712e 
[0;39m[39m2013-10-24 07:40:57,685 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:40:57,691 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:40:57,691 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:40:57,697 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:40:57,697 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:40:57,703 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:39:32 FET 1970 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:38:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:39:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:40:57,704 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:38:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:40:57,705 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:41:53,222 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:39:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,223 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,223 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 59968935, now time: 59968451 
[0;39m[39m2013-10-24 07:41:53,224 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b0f345 - closing time: 59968349, now time: 59968451 
[0;39m[39m2013-10-24 07:41:53,224 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b0f345 
[0;39m[39m2013-10-24 07:41:53,224 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b0f345 
[0;39m[39m2013-10-24 07:41:53,225 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b0f345 
[0;39m[39m2013-10-24 07:41:53,226 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@13a4530 - closing time: 59968363, now time: 59968451 
[0;39m[39m2013-10-24 07:41:53,226 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@13a4530 
[0;39m[39m2013-10-24 07:41:53,227 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@13a4530 
[0;39m[39m2013-10-24 07:41:53,227 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@13a4530 
[0;39m[39m2013-10-24 07:41:53,228 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@106810e - closing time: 59968372, now time: 59968451 
[0;39m[39m2013-10-24 07:41:53,228 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@106810e 
[0;39m[39m2013-10-24 07:41:53,229 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@106810e 
[0;39m[39m2013-10-24 07:41:53,229 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@106810e 
[0;39m[39m2013-10-24 07:41:53,230 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:41:53,248 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:41:53,249 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:41:53,261 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:41:53,261 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:41:53,267 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:41:53,268 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:41:53,268 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,268 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:40:28 FET 1970 
[0;39m[39m2013-10-24 07:41:53,268 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,268 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:39:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:41:53,268 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:40:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:41:53,269 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:39:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,269 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:41:53,769 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:39:28 FET 1970 
[0;39m[39m2013-10-24 07:41:53,769 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:41:53,770 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:40:28 FET 1970 
[0;39m[39m2013-10-24 07:41:53,770 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:40:28 FET 1970 
[0;39m[39m2013-10-24 07:41:53,770 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:41:53,770 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:39:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:41:53,770 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:40:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:41:53,771 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:39:28 FET 1970 
[0;39m[39m2013-10-24 07:41:53,771 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:41:53,771 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:41:53,772 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:41:53,772 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:41:53,772 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:41:53,773 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,773 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,773 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:41:53,773 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,774 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,774 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,774 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,774 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,775 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:41:53,775 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,775 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,776 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,776 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@18f8358 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,777 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:41:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:41:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,778 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:41:53,779 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,780 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,781 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,781 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,781 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,781 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:41:53,781 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,799 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,799 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,799 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:41:53,800 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:41:53,800 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:41:53,800 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:41:53,800 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@7173a3 
[0;39m[39m2013-10-24 07:41:53,800 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,801 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:53,802 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:41:53,803 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:41:53,804 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:41:57,772 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:39:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:57,772 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:57,772 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60029007, now time: 59973000 
[0;39m[39m2013-10-24 07:41:57,773 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5f06e0 - closing time: 59972918, now time: 59973000 
[0;39m[39m2013-10-24 07:41:57,773 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5f06e0 
[0;39m[39m2013-10-24 07:41:57,773 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5f06e0 
[0;39m[39m2013-10-24 07:41:57,773 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5f06e0 
[0;39m[39m2013-10-24 07:41:57,774 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c9a06f - closing time: 59972925, now time: 59973000 
[0;39m[39m2013-10-24 07:41:57,774 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c9a06f 
[0;39m[39m2013-10-24 07:41:57,774 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c9a06f 
[0;39m[39m2013-10-24 07:41:57,774 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c9a06f 
[0;39m[39m2013-10-24 07:41:57,774 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d4d81 - closing time: 59972931, now time: 59973000 
[0;39m[39m2013-10-24 07:41:57,775 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d4d81 
[0;39m[39m2013-10-24 07:41:57,775 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d4d81 
[0;39m[39m2013-10-24 07:41:57,775 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d4d81 
[0;39m[39m2013-10-24 07:41:57,775 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:41:57,781 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:41:57,781 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:41:57,788 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:41:57,788 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:41:57,794 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:41:57,794 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:41:57,794 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:57,795 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:40:33 FET 1970 
[0;39m[39m2013-10-24 07:41:57,795 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:57,795 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:39:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:41:57,795 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:40:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:41:57,795 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:39:32 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:41:57,795 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:42:53,314 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:40:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,315 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,315 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 60029030, now time: 60028543 
[0;39m[39m2013-10-24 07:42:53,316 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@199e13a - closing time: 60028475, now time: 60028543 
[0;39m[39m2013-10-24 07:42:53,316 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@199e13a 
[0;39m[39m2013-10-24 07:42:53,316 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@199e13a 
[0;39m[39m2013-10-24 07:42:53,316 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@199e13a 
[0;39m[39m2013-10-24 07:42:53,317 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@378ef8 - closing time: 60028488, now time: 60028543 
[0;39m[39m2013-10-24 07:42:53,318 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@378ef8 
[0;39m[39m2013-10-24 07:42:53,318 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@378ef8 
[0;39m[39m2013-10-24 07:42:53,319 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@378ef8 
[0;39m[39m2013-10-24 07:42:53,319 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b7f338 - closing time: 60028495, now time: 60028543 
[0;39m[39m2013-10-24 07:42:53,320 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b7f338 
[0;39m[39m2013-10-24 07:42:53,321 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b7f338 
[0;39m[39m2013-10-24 07:42:53,321 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1b7f338 
[0;39m[39m2013-10-24 07:42:53,322 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:42:53,338 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:42:53,338 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:42:53,346 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:42:53,347 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:42:53,355 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:42:53,355 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:42:53,356 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,356 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:41:28 FET 1970 
[0;39m[39m2013-10-24 07:42:53,356 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,356 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:40:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:42:53,356 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:41:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:42:53,356 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:40:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,357 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:42:53,857 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:40:28 FET 1970 
[0;39m[39m2013-10-24 07:42:53,857 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:42:53,857 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:41:28 FET 1970 
[0;39m[39m2013-10-24 07:42:53,857 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:42:53,857 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:41:28 FET 1970 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:40:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:41:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:40:28 FET 1970 
[0;39m[39m2013-10-24 07:42:53,858 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:42:53,860 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,860 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,860 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,860 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1be3aa4 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:42:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:42:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:42:53,881 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@10cd041 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,882 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:42:53,883 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:42:53,884 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:42:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:42:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:42:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:42:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:42:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:42:53,885 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:42:57,860 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:40:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:57,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:57,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60089090, now time: 60033088 
[0;39m[39m2013-10-24 07:42:57,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3c6c5a - closing time: 60033008, now time: 60033088 
[0;39m[39m2013-10-24 07:42:57,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3c6c5a 
[0;39m[39m2013-10-24 07:42:57,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3c6c5a 
[0;39m[39m2013-10-24 07:42:57,861 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3c6c5a 
[0;39m[39m2013-10-24 07:42:57,861 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1383c3c - closing time: 60033015, now time: 60033088 
[0;39m[39m2013-10-24 07:42:57,861 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1383c3c 
[0;39m[39m2013-10-24 07:42:57,861 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1383c3c 
[0;39m[39m2013-10-24 07:42:57,861 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1383c3c 
[0;39m[39m2013-10-24 07:42:57,862 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cdcee - closing time: 60033022, now time: 60033088 
[0;39m[39m2013-10-24 07:42:57,862 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cdcee 
[0;39m[39m2013-10-24 07:42:57,862 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cdcee 
[0;39m[39m2013-10-24 07:42:57,862 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cdcee 
[0;39m[39m2013-10-24 07:42:57,862 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:42:57,868 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:42:57,868 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:42:57,876 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:42:57,876 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:42:57,882 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:42:57,882 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:42:57,882 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:57,883 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:41:33 FET 1970 
[0;39m[39m2013-10-24 07:42:57,883 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:57,883 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:40:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:42:57,883 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:41:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:42:57,883 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:40:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:42:57,884 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:43:53,402 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:41:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,403 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,403 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 60089112, now time: 60088631 
[0;39m[39m2013-10-24 07:43:53,403 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b9c2d - closing time: 60088565, now time: 60088631 
[0;39m[39m2013-10-24 07:43:53,403 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b9c2d 
[0;39m[39m2013-10-24 07:43:53,404 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b9c2d 
[0;39m[39m2013-10-24 07:43:53,404 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b9c2d 
[0;39m[39m2013-10-24 07:43:53,404 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1997336 - closing time: 60088574, now time: 60088631 
[0;39m[39m2013-10-24 07:43:53,405 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1997336 
[0;39m[39m2013-10-24 07:43:53,405 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1997336 
[0;39m[39m2013-10-24 07:43:53,405 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1997336 
[0;39m[39m2013-10-24 07:43:53,406 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7da30c - closing time: 60088583, now time: 60088631 
[0;39m[39m2013-10-24 07:43:53,406 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7da30c 
[0;39m[39m2013-10-24 07:43:53,406 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7da30c 
[0;39m[39m2013-10-24 07:43:53,407 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7da30c 
[0;39m[39m2013-10-24 07:43:53,407 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:43:53,419 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:43:53,420 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:43:53,427 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:43:53,427 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:43:53,432 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:43:53,432 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:43:53,432 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,433 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:42:28 FET 1970 
[0;39m[39m2013-10-24 07:43:53,433 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,433 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:41:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:43:53,433 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:42:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:43:53,433 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:41:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,433 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:41:28 FET 1970 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:42:28 FET 1970 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:42:28 FET 1970 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:43:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:41:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:42:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:41:28 FET 1970 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,935 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:43:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:43:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:43:53,938 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,940 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:43:53,941 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:43:53,941 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:43:53,942 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:43:53,942 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@e36d71 
[0;39m[39m2013-10-24 07:43:53,942 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:43:53,942 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,943 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:43:53,943 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,943 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:43:53,943 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,944 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,944 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,944 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,944 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,944 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,945 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:43:53,946 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,963 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@76f08a 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,964 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:43:53,965 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:43:53,966 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:43:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:43:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:43:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:43:53,967 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:43:57,937 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:41:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:57,937 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:57,937 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60149173, now time: 60093165 
[0;39m[39m2013-10-24 07:43:57,938 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@aa33dc - closing time: 60093095, now time: 60093165 
[0;39m[39m2013-10-24 07:43:57,938 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@aa33dc 
[0;39m[39m2013-10-24 07:43:57,938 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@aa33dc 
[0;39m[39m2013-10-24 07:43:57,938 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@aa33dc 
[0;39m[39m2013-10-24 07:43:57,939 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1206b80 - closing time: 60093103, now time: 60093165 
[0;39m[39m2013-10-24 07:43:57,939 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1206b80 
[0;39m[39m2013-10-24 07:43:57,939 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1206b80 
[0;39m[39m2013-10-24 07:43:57,939 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1206b80 
[0;39m[39m2013-10-24 07:43:57,939 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11253d6 - closing time: 60093109, now time: 60093165 
[0;39m[39m2013-10-24 07:43:57,940 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11253d6 
[0;39m[39m2013-10-24 07:43:57,940 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11253d6 
[0;39m[39m2013-10-24 07:43:57,940 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@11253d6 
[0;39m[39m2013-10-24 07:43:57,940 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:43:57,946 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:43:57,946 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:43:57,951 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:43:57,951 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:43:57,956 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:42:33 FET 1970 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:41:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:42:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:43:57,957 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:41:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:43:57,958 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:44:53,476 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:42:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,477 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,477 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 60149193, now time: 60148704 
[0;39m[39m2013-10-24 07:44:53,477 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac11ce - closing time: 60148647, now time: 60148704 
[0;39m[39m2013-10-24 07:44:53,478 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac11ce 
[0;39m[39m2013-10-24 07:44:53,478 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac11ce 
[0;39m[39m2013-10-24 07:44:53,479 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac11ce 
[0;39m[39m2013-10-24 07:44:53,480 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@b4b005 - closing time: 60148654, now time: 60148704 
[0;39m[39m2013-10-24 07:44:53,480 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@b4b005 
[0;39m[39m2013-10-24 07:44:53,480 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@b4b005 
[0;39m[39m2013-10-24 07:44:53,481 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@b4b005 
[0;39m[39m2013-10-24 07:44:53,482 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bce5ae - closing time: 60148659, now time: 60148704 
[0;39m[39m2013-10-24 07:44:53,482 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bce5ae 
[0;39m[39m2013-10-24 07:44:53,482 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bce5ae 
[0;39m[39m2013-10-24 07:44:53,483 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bce5ae 
[0;39m[39m2013-10-24 07:44:53,483 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:44:53,497 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:44:53,497 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:44:53,513 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:44:53,514 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:44:53,521 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:44:53,521 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:44:53,521 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,521 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:43:28 FET 1970 
[0;39m[39m2013-10-24 07:44:53,521 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,522 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:42:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:44:53,522 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:43:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:44:53,522 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:42:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,522 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:44:53,522 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:42:28 FET 1970 
[0;39m[39m2013-10-24 07:44:53,523 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:44:53,523 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:43:28 FET 1970 
[0;39m[39m2013-10-24 07:44:53,523 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:43:28 FET 1970 
[0;39m[39m2013-10-24 07:44:53,523 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:44:53,523 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:42:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:44:53,524 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:43:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:44:53,524 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:42:28 FET 1970 
[0;39m[39m2013-10-24 07:44:53,524 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:44:53,524 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:44:53,524 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:44:53,525 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:44:53,525 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:44:53,525 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,525 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,526 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:44:53,526 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,526 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,526 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,526 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,526 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,527 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:44:53,527 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,527 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,528 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,528 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:44:53,528 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:44:53,528 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:44:53,528 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@c079cb 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,529 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,530 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:44:53,531 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,532 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,532 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,532 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,532 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,532 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:44:53,532 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,551 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,551 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,551 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:44:53,552 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:44:53,552 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:44:53,552 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 with XID null 
[0;39m[39m2013-10-24 07:44:53,552 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@133d72 
[0;39m[39m2013-10-24 07:44:53,552 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 from null 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,553 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@1a528f0 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:53,554 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:44:53,555 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:44:53,556 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:44:53,556 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:44:58,025 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:42:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:58,026 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:58,026 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60208758, now time: 60153253 
[0;39m[39m2013-10-24 07:44:58,026 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12716cb - closing time: 60153174, now time: 60153253 
[0;39m[39m2013-10-24 07:44:58,026 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12716cb 
[0;39m[39m2013-10-24 07:44:58,026 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12716cb 
[0;39m[39m2013-10-24 07:44:58,026 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12716cb 
[0;39m[39m2013-10-24 07:44:58,027 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16eae9c - closing time: 60153179, now time: 60153253 
[0;39m[39m2013-10-24 07:44:58,027 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16eae9c 
[0;39m[39m2013-10-24 07:44:58,027 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16eae9c 
[0;39m[39m2013-10-24 07:44:58,027 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16eae9c 
[0;39m[39m2013-10-24 07:44:58,028 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9ce6cf - closing time: 60153184, now time: 60153253 
[0;39m[39m2013-10-24 07:44:58,028 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9ce6cf 
[0;39m[39m2013-10-24 07:44:58,028 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9ce6cf 
[0;39m[39m2013-10-24 07:44:58,028 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9ce6cf 
[0;39m[39m2013-10-24 07:44:58,029 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:44:58,035 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:44:58,035 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:44:58,041 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:44:58,041 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:44:58,046 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:44:58,046 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:43:33 FET 1970 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:42:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:43:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:42:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:44:58,047 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:45:53,565 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:43:28 FET 1970 
[0;39m[39m2013-10-24 07:45:53,566 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:45:53,566 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:44:28 FET 1970 
[0;39m[39m2013-10-24 07:45:53,566 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:45:53,566 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:44:28 FET 1970 
[0;39m[39m2013-10-24 07:45:53,566 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:45:53,567 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:45:53,567 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:45:53,567 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:43:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:45:53,568 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:45:53,568 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:44:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:45:53,568 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,569 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:43:28 FET 1970 
[0;39m[39m2013-10-24 07:45:53,569 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,569 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:45:53,569 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:45:53,570 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:43:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,570 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,570 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,571 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,571 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 - closing time: 60208782, now time: 60208798 
[0;39m[39m2013-10-24 07:45:53,571 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,571 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:45:53,571 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,572 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:45:53,572 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,572 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16cf346 
[0;39m[39m2013-10-24 07:45:53,572 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:45:53,572 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,573 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@159838f - closing time: 60208724, now time: 60208798 
[0;39m[39m2013-10-24 07:45:53,573 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@159838f 
[0;39m[39m2013-10-24 07:45:53,573 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,573 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@159838f 
[0;39m[39m2013-10-24 07:45:53,573 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@159838f 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ec70b - closing time: 60208741, now time: 60208798 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ec70b 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ec70b 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:45:53,574 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ec70b 
[0;39m[39m2013-10-24 07:45:53,575 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:45:53,575 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1d795f9 
[0;39m[39m2013-10-24 07:45:53,575 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:45:53,575 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,575 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,576 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,577 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:45:53,577 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:45:53,577 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,577 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,577 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,578 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:45:53,578 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:45:53,578 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:45:53,578 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:45:53,582 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@179ff7c - closing time: 60208748, now time: 60208798 
[0;39m[39m2013-10-24 07:45:53,582 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@179ff7c 
[0;39m[39m2013-10-24 07:45:53,583 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@179ff7c 
[0;39m[39m2013-10-24 07:45:53,583 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@179ff7c 
[0;39m[39m2013-10-24 07:45:53,583 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 4 idle connection(s) 
[0;39m[39m2013-10-24 07:45:53,610 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:53,611 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:53,620 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:53,621 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:53,633 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:53,634 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:53,646 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:53,647 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:53,648 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,648 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,648 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,648 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:44:28 FET 1970 
[0;39m[39m2013-10-24 07:45:53,649 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:45:53,650 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,650 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,650 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,651 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,651 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,651 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:45:53,652 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:43:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:44:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:45:53,695 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f with XID null 
[0;39m[39m2013-10-24 07:45:53,696 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:43:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:45:53,696 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:45:53,696 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:45:53,696 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f with XID null 
[0;39m[39m2013-10-24 07:45:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1c12b61 
[0;39m[39m2013-10-24 07:45:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@4f3b9a 
[0;39m[39m2013-10-24 07:45:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f from null 
[0;39m[39m2013-10-24 07:45:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f from null 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@4f3b9a 
[0;39m[39m2013-10-24 07:45:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:45:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:45:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:45:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:45:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:45:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:45:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:45:58,197 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:43:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:58,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:58,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60268805, now time: 60213425 
[0;39m[39m2013-10-24 07:45:58,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d2371d - closing time: 60213262, now time: 60213425 
[0;39m[39m2013-10-24 07:45:58,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d2371d 
[0;39m[39m2013-10-24 07:45:58,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d2371d 
[0;39m[39m2013-10-24 07:45:58,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1d2371d 
[0;39m[39m2013-10-24 07:45:58,199 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d5095 - closing time: 60213268, now time: 60213425 
[0;39m[39m2013-10-24 07:45:58,199 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d5095 
[0;39m[39m2013-10-24 07:45:58,199 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d5095 
[0;39m[39m2013-10-24 07:45:58,199 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2d5095 
[0;39m[39m2013-10-24 07:45:58,199 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@489ef2 - closing time: 60213274, now time: 60213425 
[0;39m[39m2013-10-24 07:45:58,199 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@489ef2 
[0;39m[39m2013-10-24 07:45:58,200 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@489ef2 
[0;39m[39m2013-10-24 07:45:58,200 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@489ef2 
[0;39m[39m2013-10-24 07:45:58,200 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:45:58,205 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:58,205 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:58,211 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:58,211 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:58,216 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:44:33 FET 1970 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:43:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:44:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:45:58,217 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:43:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:45:58,218 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:46:53,737 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:44:28 FET 1970 
[0;39m[39m2013-10-24 07:46:53,738 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:46:53,739 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:45:28 FET 1970 
[0;39m[39m2013-10-24 07:46:53,739 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:46:53,739 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:45:28 FET 1970 
[0;39m[39m2013-10-24 07:46:53,740 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:46:53,740 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:46:53,741 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:46:53,741 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:46:53,741 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:44:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:46:53,742 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,742 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:45:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:46:53,742 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,743 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:44:28 FET 1970 
[0;39m[39m2013-10-24 07:46:53,743 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:46:53,743 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:46:53,744 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,744 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:44:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,745 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,745 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,746 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,746 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f - closing time: 60268926, now time: 60268974 
[0;39m[39m2013-10-24 07:46:53,746 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,747 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:46:53,747 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,747 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:46:53,748 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:46:53,748 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16a193f 
[0;39m[39m2013-10-24 07:46:53,749 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,750 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5aca08 - closing time: 60268848, now time: 60268974 
[0;39m[39m2013-10-24 07:46:53,750 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5aca08 
[0;39m[39m2013-10-24 07:46:53,751 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,751 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5aca08 
[0;39m[39m2013-10-24 07:46:53,752 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@5aca08 
[0;39m[39m2013-10-24 07:46:53,752 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,752 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:46:53,753 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd62a7 - closing time: 60268861, now time: 60268974 
[0;39m[39m2013-10-24 07:46:53,753 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd62a7 
[0;39m[39m2013-10-24 07:46:53,753 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd62a7 
[0;39m[39m2013-10-24 07:46:53,754 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd62a7 
[0;39m[39m2013-10-24 07:46:53,755 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e0411b - closing time: 60268874, now time: 60268974 
[0;39m[39m2013-10-24 07:46:53,755 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e0411b 
[0;39m[39m2013-10-24 07:46:53,754 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:46:53,756 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e0411b 
[0;39m[39m2013-10-24 07:46:53,757 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:46:53,757 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@e0411b 
[0;39m[39m2013-10-24 07:46:53,758 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:46:53,758 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@d25931 
[0;39m[39m2013-10-24 07:46:53,759 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 4 idle connection(s) 
[0;39m[39m2013-10-24 07:46:53,759 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:46:53,759 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,760 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:46:53,760 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,761 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:46:53,761 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,761 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,762 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,762 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,763 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,763 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:46:53,764 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:46:53,764 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,764 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,765 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,765 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:46:53,765 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:46:53,765 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:46:53,765 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:46:53,769 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:53,769 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:53,775 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:53,776 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:53,782 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:53,782 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:53,788 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:53,788 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:53,788 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,788 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,788 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:45:29 FET 1970 
[0;39m[39m2013-10-24 07:46:53,788 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:46:53,789 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,807 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,807 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,807 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:46:53,807 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:44:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea with XID null 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:45:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:44:28 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea with XID null 
[0;39m[39m2013-10-24 07:46:53,808 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1770712 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@193ed65 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea from null 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea from null 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,809 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@193ed65 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:53,810 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:46:53,811 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:46:58,310 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:44:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:58,310 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:58,310 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60328992, now time: 60273538 
[0;39m[39m2013-10-24 07:46:58,310 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6a385 - closing time: 60273432, now time: 60273538 
[0;39m[39m2013-10-24 07:46:58,310 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6a385 
[0;39m[39m2013-10-24 07:46:58,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6a385 
[0;39m[39m2013-10-24 07:46:58,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6a385 
[0;39m[39m2013-10-24 07:46:58,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@a422b4 - closing time: 60273438, now time: 60273538 
[0;39m[39m2013-10-24 07:46:58,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@a422b4 
[0;39m[39m2013-10-24 07:46:58,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@a422b4 
[0;39m[39m2013-10-24 07:46:58,311 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@a422b4 
[0;39m[39m2013-10-24 07:46:58,312 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@116cf0c - closing time: 60273444, now time: 60273538 
[0;39m[39m2013-10-24 07:46:58,312 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@116cf0c 
[0;39m[39m2013-10-24 07:46:58,312 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@116cf0c 
[0;39m[39m2013-10-24 07:46:58,312 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@116cf0c 
[0;39m[39m2013-10-24 07:46:58,312 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:46:58,317 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:58,317 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:58,322 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:58,322 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:58,327 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:46:58,327 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:46:58,327 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:58,328 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:45:33 FET 1970 
[0;39m[39m2013-10-24 07:46:58,328 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:58,328 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:44:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:46:58,328 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:45:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:46:58,328 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:44:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:46:58,328 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:47:53,847 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:45:28 FET 1970 
[0;39m[39m2013-10-24 07:47:53,847 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:47:53,848 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:46:28 FET 1970 
[0;39m[39m2013-10-24 07:47:53,848 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:46:28 FET 1970 
[0;39m[39m2013-10-24 07:47:53,849 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:47:53,849 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:45:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:47:53,850 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:46:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:47:53,850 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:45:28 FET 1970 
[0;39m[39m2013-10-24 07:47:53,850 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:47:53,851 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:45:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,851 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,851 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea - closing time: 60329038, now time: 60329079 
[0;39m[39m2013-10-24 07:47:53,852 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:47:53,852 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:47:53,852 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:47:53,853 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@16180ea 
[0;39m[39m2013-10-24 07:47:53,853 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:47:53,854 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:47:53,854 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1350496 - closing time: 60329003, now time: 60329079 
[0;39m[39m2013-10-24 07:47:53,854 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:47:53,854 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1350496 
[0;39m[39m2013-10-24 07:47:53,855 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,855 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1350496 
[0;39m[39m2013-10-24 07:47:53,855 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,855 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1350496 
[0;39m[39m2013-10-24 07:47:53,856 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:47:53,856 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,857 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12d500 - closing time: 60329010, now time: 60329079 
[0;39m[39m2013-10-24 07:47:53,857 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,857 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12d500 
[0;39m[39m2013-10-24 07:47:53,857 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,858 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12d500 
[0;39m[39m2013-10-24 07:47:53,858 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,858 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12d500 
[0;39m[39m2013-10-24 07:47:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,859 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14fbbbf - closing time: 60329015, now time: 60329079 
[0;39m[39m2013-10-24 07:47:53,859 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:47:53,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14fbbbf 
[0;39m[39m2013-10-24 07:47:53,860 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,860 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14fbbbf 
[0;39m[39m2013-10-24 07:47:53,861 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@14fbbbf 
[0;39m[39m2013-10-24 07:47:53,861 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,862 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 4 idle connection(s) 
[0;39m[39m2013-10-24 07:47:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:47:53,862 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@687b7d 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:47:53,863 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,864 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:47:53,865 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:47:53,866 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:47:53,868 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:53,869 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:53,876 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:53,876 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:53,887 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:53,888 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:53,900 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:53,901 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:53,902 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,902 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,902 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:46:29 FET 1970 
[0;39m[39m2013-10-24 07:47:53,903 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,903 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:47:53,904 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,905 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,906 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,906 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,906 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,906 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:47:53,907 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,933 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:45:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:46:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 with XID null 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:45:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:47:53,934 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 with XID null 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1fb2f35 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@c726d6 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 from null 
[0;39m[39m2013-10-24 07:47:53,935 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 from null 
[0;39m[39m2013-10-24 07:47:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,936 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:47:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@c726d6 
[0;39m[39m2013-10-24 07:47:53,937 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,938 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,938 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:53,938 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:47:53,938 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:47:53,938 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:47:53,939 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:47:58,436 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:45:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:58,436 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:58,437 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60389093, now time: 60333664 
[0;39m[39m2013-10-24 07:47:58,437 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6dd3d - closing time: 60333544, now time: 60333664 
[0;39m[39m2013-10-24 07:47:58,437 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6dd3d 
[0;39m[39m2013-10-24 07:47:58,437 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6dd3d 
[0;39m[39m2013-10-24 07:47:58,437 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@c6dd3d 
[0;39m[39m2013-10-24 07:47:58,438 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@101eff0 - closing time: 60333549, now time: 60333664 
[0;39m[39m2013-10-24 07:47:58,438 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@101eff0 
[0;39m[39m2013-10-24 07:47:58,438 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@101eff0 
[0;39m[39m2013-10-24 07:47:58,439 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@101eff0 
[0;39m[39m2013-10-24 07:47:58,440 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dd526f - closing time: 60333554, now time: 60333664 
[0;39m[39m2013-10-24 07:47:58,440 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dd526f 
[0;39m[39m2013-10-24 07:47:58,440 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dd526f 
[0;39m[39m2013-10-24 07:47:58,440 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@dd526f 
[0;39m[39m2013-10-24 07:47:58,441 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:47:58,448 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:58,449 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:58,462 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:58,462 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:58,480 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:47:58,480 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:47:58,480 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:58,481 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:46:33 FET 1970 
[0;39m[39m2013-10-24 07:47:58,481 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:58,481 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:45:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:47:58,481 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:46:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:47:58,481 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:45:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:47:58,482 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:48:54,000 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:46:28 FET 1970 
[0;39m[39m2013-10-24 07:48:54,001 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:48:54,001 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:47:28 FET 1970 
[0;39m[39m2013-10-24 07:48:54,001 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:48:54,001 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:47:28 FET 1970 
[0;39m[39m2013-10-24 07:48:54,002 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:48:54,002 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:48:54,002 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:48:54,003 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:46:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:48:54,003 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:48:54,003 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:47:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:48:54,003 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,004 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:46:28 FET 1970 
[0;39m[39m2013-10-24 07:48:54,004 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:48:54,004 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,004 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:46:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,005 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:48:54,005 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,005 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,005 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 - closing time: 60389166, now time: 60389233 
[0;39m[39m2013-10-24 07:48:54,006 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,006 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:48:54,006 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,007 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:48:54,007 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,007 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@12f0ea9 
[0;39m[39m2013-10-24 07:48:54,008 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,008 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:48:54,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@36a5e9 - closing time: 60389103, now time: 60389233 
[0;39m[39m2013-10-24 07:48:54,008 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,008 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@36a5e9 
[0;39m[39m2013-10-24 07:48:54,009 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@36a5e9 
[0;39m[39m2013-10-24 07:48:54,009 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@36a5e9 
[0;39m[39m2013-10-24 07:48:54,009 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,010 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,010 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18e5c40 - closing time: 60389114, now time: 60389233 
[0;39m[39m2013-10-24 07:48:54,010 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:48:54,010 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18e5c40 
[0;39m[39m2013-10-24 07:48:54,010 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18e5c40 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18e5c40 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1824942 - closing time: 60389128, now time: 60389233 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1824942 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@97ab9a 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1824942 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:48:54,011 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1824942 
[0;39m[39m2013-10-24 07:48:54,012 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,012 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:48:54,012 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 4 idle connection(s) 
[0;39m[39m2013-10-24 07:48:54,012 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,013 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:48:54,014 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:48:54,017 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:54,018 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:54,024 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:54,024 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:54,030 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:54,030 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:54,038 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:54,038 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:54,038 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,039 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,039 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:47:29 FET 1970 
[0;39m[39m2013-10-24 07:48:54,039 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,039 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:48:54,040 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,040 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,040 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,040 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,040 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,041 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:48:54,041 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,061 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,061 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,061 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:48:54,061 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:46:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 with XID null 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:47:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:46:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (3 still available) 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 with XID null 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:48:54,062 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@653a17 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@933e47 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from null 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from null 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,063 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@933e47 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:48:54,064 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:48:54,065 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:48:58,564 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:46:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:58,564 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:58,564 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60449242, now time: 60393792 
[0;39m[39m2013-10-24 07:48:58,565 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@ddcc8a - closing time: 60393675, now time: 60393792 
[0;39m[39m2013-10-24 07:48:58,565 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@ddcc8a 
[0;39m[39m2013-10-24 07:48:58,565 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@ddcc8a 
[0;39m[39m2013-10-24 07:48:58,565 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@ddcc8a 
[0;39m[39m2013-10-24 07:48:58,566 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3f1168 - closing time: 60393689, now time: 60393792 
[0;39m[39m2013-10-24 07:48:58,566 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3f1168 
[0;39m[39m2013-10-24 07:48:58,566 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3f1168 
[0;39m[39m2013-10-24 07:48:58,567 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@3f1168 
[0;39m[39m2013-10-24 07:48:58,567 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8bca8e - closing time: 60393707, now time: 60393792 
[0;39m[39m2013-10-24 07:48:58,567 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8bca8e 
[0;39m[39m2013-10-24 07:48:58,567 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8bca8e 
[0;39m[39m2013-10-24 07:48:58,567 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@8bca8e 
[0;39m[39m2013-10-24 07:48:58,568 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:48:58,573 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:58,574 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:58,578 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:58,579 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:58,583 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:48:58,583 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:48:58,583 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:58,584 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:47:33 FET 1970 
[0;39m[39m2013-10-24 07:48:58,584 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:58,584 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:46:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:48:58,584 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:47:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:48:58,584 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:46:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:48:58,584 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:49:53,600 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:47:28 FET 1970 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:48:28 FET 1970 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:48:28 FET 1970 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:47:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:48:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:49:53,601 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:47:28 FET 1970 
[0;39m[39m2013-10-24 07:49:53,602 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:49:53,602 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:49:53,602 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:49:53,602 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:49:53,602 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:49:53,602 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:49:53,603 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,604 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,604 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,604 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1bd8091 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,605 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,606 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:49:53,607 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,608 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,609 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:49:53,609 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,631 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,631 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,631 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:49:53,632 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 with XID null 
[0;39m[39m2013-10-24 07:49:53,632 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:49:53,632 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 with XID null 
[0;39m[39m2013-10-24 07:49:53,632 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@1812388 
[0;39m[39m2013-10-24 07:49:53,632 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@933e47 
[0;39m[39m2013-10-24 07:49:53,632 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from null 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from null 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,633 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@933e47 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:49:53,634 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:49:53,635 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:49:54,102 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:47:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:54,102 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:54,102 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 - closing time: 60508862, now time: 60449330 
[0;39m[39m2013-10-24 07:49:54,102 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@143db6b - closing time: 60449252, now time: 60449330 
[0;39m[39m2013-10-24 07:49:54,103 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@143db6b 
[0;39m[39m2013-10-24 07:49:54,103 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@143db6b 
[0;39m[39m2013-10-24 07:49:54,103 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@143db6b 
[0;39m[39m2013-10-24 07:49:54,103 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18d2d1 - closing time: 60449257, now time: 60449330 
[0;39m[39m2013-10-24 07:49:54,104 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18d2d1 
[0;39m[39m2013-10-24 07:49:54,104 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18d2d1 
[0;39m[39m2013-10-24 07:49:54,104 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@18d2d1 
[0;39m[39m2013-10-24 07:49:54,104 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b6ac1 - closing time: 60449265, now time: 60449330 
[0;39m[39m2013-10-24 07:49:54,104 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b6ac1 
[0;39m[39m2013-10-24 07:49:54,105 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b6ac1 
[0;39m[39m2013-10-24 07:49:54,105 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@2b6ac1 
[0;39m[39m2013-10-24 07:49:54,105 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:49:54,140 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:49:54,141 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:49:54,145 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:49:54,146 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:49:54,150 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:49:54,151 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:49:54,151 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:54,151 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:48:29 FET 1970 
[0;39m[39m2013-10-24 07:49:54,151 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:54,151 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:47:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:49:54,152 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:48:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:49:54,152 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:47:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:54,152 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:49:58,653 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:47:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:58,653 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:58,654 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60508835, now time: 60453881 
[0;39m[39m2013-10-24 07:49:58,654 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@167c9d8 - closing time: 60453801, now time: 60453881 
[0;39m[39m2013-10-24 07:49:58,654 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@167c9d8 
[0;39m[39m2013-10-24 07:49:58,654 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@167c9d8 
[0;39m[39m2013-10-24 07:49:58,654 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@167c9d8 
[0;39m[39m2013-10-24 07:49:58,655 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7f3758 - closing time: 60453806, now time: 60453881 
[0;39m[39m2013-10-24 07:49:58,655 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7f3758 
[0;39m[39m2013-10-24 07:49:58,655 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7f3758 
[0;39m[39m2013-10-24 07:49:58,655 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@7f3758 
[0;39m[39m2013-10-24 07:49:58,656 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@4be5f8 - closing time: 60453811, now time: 60453881 
[0;39m[39m2013-10-24 07:49:58,656 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@4be5f8 
[0;39m[39m2013-10-24 07:49:58,656 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@4be5f8 
[0;39m[39m2013-10-24 07:49:58,656 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@4be5f8 
[0;39m[39m2013-10-24 07:49:58,657 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:49:58,662 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:49:58,662 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:49:58,666 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:49:58,667 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:49:58,672 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:49:58,672 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:49:58,672 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:58,672 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:48:33 FET 1970 
[0;39m[39m2013-10-24 07:49:58,673 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:58,673 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:47:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:49:58,673 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:48:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:49:58,673 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:47:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:49:58,673 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:50:53,692 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a RecoveryTask scheduled for Thu Jan 01 19:48:28 FET 1970 
[0;39m[39m2013-10-24 07:50:53,692 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | running recovery 
[0;39m[39m2013-10-24 07:50:53,693 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.RecoveryTask                          | rescheduling recovery for Thu Jan 01 19:49:28 FET 1970 
[0;39m[39m2013-10-24 07:50:53,693 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling recovery task for Thu Jan 01 19:49:28 FET 1970 
[0;39m[39m2013-10-24 07:50:53,693 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by bitronix.tm.recovery.Recoverer@99ccb5 
[0;39m[39m2013-10-24 07:50:53,694 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a RecoveryTask scheduled for Thu Jan 01 19:48:28 FET 1970, total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:50:53,694 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a RecoveryTask scheduled for Thu Jan 01 19:49:28 FET 1970, total task(s) queued: 3 
[0;39m[39m2013-10-24 07:50:53,694 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a RecoveryTask scheduled for Thu Jan 01 19:48:28 FET 1970 
[0;39m[39m2013-10-24 07:50:53,695 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:50:53,696 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.TransactionLogCursor                | end of transaction log file reached at 21 
[0;39m[39m2013-10-24 07:50:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.journal.DiskJournal                         | collected dangling records of a TransactionLogAppender on tx-part1.btm, committing: 0, committed: 0, delta: 0 
[0;39m[39m2013-10-24 07:50:53,697 DEBUG | bitronix-recovery-thread | bitronix.tm.BitronixTransactionManager                  | oldest in-flight transaction's timestamp: -9223372036854775808 
[0;39m[39m2013-10-24 07:50:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/registryDS 
[0;39m[39m2013-10-24 07:50:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,698 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:50:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,699 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,700 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,701 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,701 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:50:53,702 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM registers' connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,703 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,704 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/registryDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 with XID null 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@a9278d 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:50:53,705 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 from null 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,706 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@48685c 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/registryDS 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | performing recovery on jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:50:53,707 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | running recovery on a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | getting a IN_POOL connection from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | waiting for IN_POOL connections count to be > 0, currently is 4 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | found IN_POOL connection a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | getting connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,708 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | connection com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 was in state IN_POOL, testing it 
[0;39m[39m2013-10-24 07:50:53,709 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testing with query 'SELECT 1 FROM reports' connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,727 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | testQuery successfully tested connection of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | got connection handle from a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with STARTRSCAN 
[0;39m[39m2013-10-24 07:50:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | STARTRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 with XID null 
[0;39m[39m2013-10-24 07:50:53,728 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | recovering with ENDRSCAN 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.RecoveryHelper                     | ENDRSCAN recovered 0 xid(s) on an XAResourceHolderState with uniqueName=jdbc/enterpriseDS XAResource=com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 with XID null 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.PoolingDataSource             | recovery xa resource is being closed: bitronix.tm.resource.common.RecoveryXAResourceHolder@439fbe 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcConnectionHandle          | closing a JdbcConnectionHandle of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 on com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@933e47 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 1 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | delisting a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from null 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | requeuing a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 from null 
[0;39m[39m2013-10-24 07:50:53,729 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource is not in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | looking in in-flight transactions for XAResourceHolderState of a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAResourceHolder    | resource not enlisted in any transaction: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.TransactionContextHelper    | resource not in enlisting global transaction context, immediately releasing to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | closing 0 dangling uncached statement(s) 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | clearing warnings of com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper@933e47 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state ACCESSIBLE with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,730 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | requeued JDBC connection of a PoolingDataSource containing an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.common.XAPool                      | a connection's state changed to IN_POOL, notifying a thread eventually waiting for a connection 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.resource.jdbc.JdbcPooledConnection          | released to pool a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovered 0 XID(s) from resource jdbc/enterpriseDS 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | found 0 dangling record(s) in journal 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | committed 0 dangling transaction(s) 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolling back aborted branch(es) 
[0;39m[39m2013-10-24 07:50:53,731 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:50:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/registryDS for rollback 
[0;39m[39m2013-10-24 07:50:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checking 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:50:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | checked 0 branch(es) on jdbc/enterpriseDS for rollback 
[0;39m[39m2013-10-24 07:50:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | rolled back 0 aborted branch(es) 
[0;39m[39m2013-10-24 07:50:53,732 DEBUG | bitronix-recovery-thread | bitronix.tm.recovery.Recoverer                          | recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 2 resource(s) [jdbc/registryDS, jdbc/enterpriseDS] (restricted to serverId 'reports-spring-btm-node0') 
[0;39m[39m2013-10-24 07:50:54,195 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:48:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:54,196 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:54,196 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@bd2fa1 - closing time: 60568958, now time: 60509423 
[0;39m[39m2013-10-24 07:50:54,196 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac8171 - closing time: 60509368, now time: 60509423 
[0;39m[39m2013-10-24 07:50:54,196 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac8171 
[0;39m[39m2013-10-24 07:50:54,196 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac8171 
[0;39m[39m2013-10-24 07:50:54,196 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1ac8171 
[0;39m[39m2013-10-24 07:50:54,197 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d356b5 - closing time: 60509373, now time: 60509423 
[0;39m[39m2013-10-24 07:50:54,197 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d356b5 
[0;39m[39m2013-10-24 07:50:54,197 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d356b5 
[0;39m[39m2013-10-24 07:50:54,197 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@d356b5 
[0;39m[39m2013-10-24 07:50:54,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1f4d7c1 - closing time: 60509378, now time: 60509423 
[0;39m[39m2013-10-24 07:50:54,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1f4d7c1 
[0;39m[39m2013-10-24 07:50:54,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1f4d7c1 
[0;39m[39m2013-10-24 07:50:54,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/enterpriseDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1f4d7c1 
[0;39m[39m2013-10-24 07:50:54,198 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:50:54,204 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:50:54,204 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:50:54,209 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:50:54,209 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:50:54,213 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:50:54,214 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:50:54,214 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:54,214 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) for Thu Jan 01 19:49:29 FET 1970 
[0;39m[39m2013-10-24 07:50:54,214 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:54,214 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:48:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:50:54,215 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:49:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:50:54,215 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:48:29 FET 1970 on an XAPool of resource jdbc/enterpriseDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:54,215 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m[39m2013-10-24 07:50:58,716 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | running a PoolShrinkingTask scheduled for Thu Jan 01 19:48:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:58,716 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrinking an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:58,716 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1a01274 - closing time: 60568935, now time: 60513944 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9c0576 - closing time: 60513889, now time: 60513944 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9c0576 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9c0576 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@9c0576 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1fe90f2 - closing time: 60513894, now time: 60513944 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1fe90f2 
[0;39m[39m2013-10-24 07:50:58,717 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1fe90f2 
[0;39m[39m2013-10-24 07:50:58,718 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@1fe90f2 
[0;39m[39m2013-10-24 07:50:58,718 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@191eecb - closing time: 60513899, now time: 60513944 
[0;39m[39m2013-10-24 07:50:58,721 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@191eecb 
[0;39m[39m2013-10-24 07:50:58,722 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | state changing from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state IN_POOL with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@191eecb 
[0;39m[39m2013-10-24 07:50:58,722 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.AbstractXAStatefulHolder    | notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to CLOSED in a JdbcPooledConnection from datasource jdbc/registryDS in state CLOSED with usage count 0 wrapping com.mysql.jdbc.jdbc2.optional.JDBC4MysqlXAConnection@191eecb 
[0;39m[39m2013-10-24 07:50:58,722 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | closed 3 idle connection(s) 
[0;39m[39m2013-10-24 07:50:58,727 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:50:58,727 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:50:58,734 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:50:58,734 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:50:58,740 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | dataSource is JDBC4 or newer and supports isValid(), but enableJdbc4ConnectionTest is not set or is false 
[0;39m[39m2013-10-24 07:50:58,741 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.jdbc.JdbcPooledConnection          | detected JDBC connection class 'class com.mysql.jdbc.jdbc2.optional.JDBC4ConnectionWrapper' is version 4 type 
[0;39m[39m2013-10-24 07:50:58,741 DEBUG | bitronix-task-scheduler | bitronix.tm.resource.common.XAPool                      | shrunk an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:58,741 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduling pool shrinking task on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) for Thu Jan 01 19:49:33 FET 1970 
[0;39m[39m2013-10-24 07:50:58,741 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | removing task by an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:58,741 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | cancelled a PoolShrinkingTask scheduled for Thu Jan 01 19:48:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) still queued: 2 
[0;39m[39m2013-10-24 07:50:58,741 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | scheduled a PoolShrinkingTask scheduled for Thu Jan 01 19:49:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available), total task(s) queued: 3 
[0;39m[39m2013-10-24 07:50:58,742 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | successfully ran a PoolShrinkingTask scheduled for Thu Jan 01 19:48:33 FET 1970 on an XAPool of resource jdbc/registryDS with 4 connection(s) (4 still available) 
[0;39m[39m2013-10-24 07:50:58,742 DEBUG | bitronix-task-scheduler | bitronix.tm.timer.TaskScheduler                         | total task(s) still queued: 3 
[0;39m